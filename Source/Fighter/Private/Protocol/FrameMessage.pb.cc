// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameMessage.proto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4125)
	#pragma warning(disable : 4668)
	#pragma warning(disable : 4800)
	#pragma warning(disable : 4647)
#endif

#include "FrameMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListenData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBDeployCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBMySQLData_ValuesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRemoteLog;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRoute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMySQLData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMySQLDatas;
}  // namespace protobuf_FrameMessage_2eproto
namespace KFMsg {
class ListenDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListenData>
      _instance;
} _ListenData_default_instance_;
class RegisterToServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterToServerReq>
      _instance;
} _RegisterToServerReq_default_instance_;
class RegisterToServerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterToServerAck>
      _instance;
} _RegisterToServerAck_default_instance_;
class TellRegisterToServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TellRegisterToServer>
      _instance;
} _TellRegisterToServer_default_instance_;
class TellUnRegisterFromServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TellUnRegisterFromServer>
      _instance;
} _TellUnRegisterFromServer_default_instance_;
class S2STellDiscoverServerToMasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellDiscoverServerToMaster>
      _instance;
} _S2STellDiscoverServerToMaster_default_instance_;
class S2STellLostServerToMasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellLostServerToMaster>
      _instance;
} _S2STellLostServerToMaster_default_instance_;
class S2STellRegisterServerToMasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellRegisterServerToMaster>
      _instance;
} _S2STellRegisterServerToMaster_default_instance_;
class S2STellServerListToMasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellServerListToMaster>
      _instance;
} _S2STellServerListToMaster_default_instance_;
class S2SClusterRegisterToMasterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterRegisterToMasterReq>
      _instance;
} _S2SClusterRegisterToMasterReq_default_instance_;
class S2SClusterSyncProxyToMasterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterSyncProxyToMasterReq>
      _instance;
} _S2SClusterSyncProxyToMasterReq_default_instance_;
class S2SClusterAuthToMasterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterAuthToMasterReq>
      _instance;
} _S2SClusterAuthToMasterReq_default_instance_;
class S2SClusterAuthToClientAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterAuthToClientAck>
      _instance;
} _S2SClusterAuthToClientAck_default_instance_;
class S2SClusterTokenToProxyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterTokenToProxyReq>
      _instance;
} _S2SClusterTokenToProxyReq_default_instance_;
class S2SClusterTokenToMasterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterTokenToMasterReq>
      _instance;
} _S2SClusterTokenToMasterReq_default_instance_;
class S2SClusterVerifyToProxyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterVerifyToProxyReq>
      _instance;
} _S2SClusterVerifyToProxyReq_default_instance_;
class S2SClusterTokenToProxyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterTokenToProxyAck>
      _instance;
} _S2SClusterTokenToProxyAck_default_instance_;
class S2SClusterTokenToMasterAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterTokenToMasterAck>
      _instance;
} _S2SClusterTokenToMasterAck_default_instance_;
class S2SClusterVerifyToClientAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterVerifyToClientAck>
      _instance;
} _S2SClusterVerifyToClientAck_default_instance_;
class S2SClusterClientDiscoverToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterClientDiscoverToShardReq>
      _instance;
} _S2SClusterClientDiscoverToShardReq_default_instance_;
class S2SClusterClientLostToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterClientLostToShardReq>
      _instance;
} _S2SClusterClientLostToShardReq_default_instance_;
class S2SClusterLostProxyToMasterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClusterLostProxyToMasterReq>
      _instance;
} _S2SClusterLostProxyToMasterReq_default_instance_;
class PBRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRoute>
      _instance;
} _PBRoute_default_instance_;
class S2SRouteMessageToClientAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteMessageToClientAck>
      _instance;
} _S2SRouteMessageToClientAck_default_instance_;
class S2SRouteMessageToNameAllReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteMessageToNameAllReq>
      _instance;
} _S2SRouteMessageToNameAllReq_default_instance_;
class S2SRouteMessageToNameRandReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteMessageToNameRandReq>
      _instance;
} _S2SRouteMessageToNameRandReq_default_instance_;
class S2SRouteMessageToNameBalanceReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteMessageToNameBalanceReq>
      _instance;
} _S2SRouteMessageToNameBalanceReq_default_instance_;
class S2SRouteMessageToNameObjectReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteMessageToNameObjectReq>
      _instance;
} _S2SRouteMessageToNameObjectReq_default_instance_;
class S2SRouteMessageToServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteMessageToServerReq>
      _instance;
} _S2SRouteMessageToServerReq_default_instance_;
class S2SRouteMessageToPlayerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteMessageToPlayerReq>
      _instance;
} _S2SRouteMessageToPlayerReq_default_instance_;
class S2SRouteClientLostToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteClientLostToShardReq>
      _instance;
} _S2SRouteClientLostToShardReq_default_instance_;
class S2SRouteDiscoverToClientReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteDiscoverToClientReq>
      _instance;
} _S2SRouteDiscoverToClientReq_default_instance_;
class S2SRouteSyncObjectToProxyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteSyncObjectToProxyReq>
      _instance;
} _S2SRouteSyncObjectToProxyReq_default_instance_;
class S2SRouteSyncObjectToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteSyncObjectToShardReq>
      _instance;
} _S2SRouteSyncObjectToShardReq_default_instance_;
class S2SRouteAddObjectToProxyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteAddObjectToProxyReq>
      _instance;
} _S2SRouteAddObjectToProxyReq_default_instance_;
class S2SRouteAddObjectToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteAddObjectToShardReq>
      _instance;
} _S2SRouteAddObjectToShardReq_default_instance_;
class S2SRouteRemoveObjectToProxyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteRemoveObjectToProxyReq>
      _instance;
} _S2SRouteRemoveObjectToProxyReq_default_instance_;
class S2SRouteRemoveObjectToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRouteRemoveObjectToShardReq>
      _instance;
} _S2SRouteRemoveObjectToShardReq_default_instance_;
class S2SRegisterAgentToServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRegisterAgentToServerReq>
      _instance;
} _S2SRegisterAgentToServerReq_default_instance_;
class PBDeployCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBDeployCommand>
      _instance;
} _PBDeployCommand_default_instance_;
class S2SDeployCommandToAgentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployCommandToAgentReq>
      _instance;
} _S2SDeployCommandToAgentReq_default_instance_;
class S2SDeployCommandToClientReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployCommandToClientReq>
      _instance;
} _S2SDeployCommandToClientReq_default_instance_;
class S2SDeployToolCommandReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolCommandReq>
      _instance;
} _S2SDeployToolCommandReq_default_instance_;
class S2SDeployLogToToolAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployLogToToolAck>
      _instance;
} _S2SDeployLogToToolAck_default_instance_;
class S2SDeployLogToServerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployLogToServerAck>
      _instance;
} _S2SDeployLogToServerAck_default_instance_;
class S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse>
      _instance;
} _S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse_default_instance_;
class S2SDeployToolDeleteMySQLReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolDeleteMySQLReq>
      _instance;
} _S2SDeployToolDeleteMySQLReq_default_instance_;
class S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse>
      _instance;
} _S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse_default_instance_;
class S2SDeployToolDeleteMySQLAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolDeleteMySQLAck>
      _instance;
} _S2SDeployToolDeleteMySQLAck_default_instance_;
class S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse>
      _instance;
} _S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse_default_instance_;
class S2SDeployToolExecuteMySQLReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolExecuteMySQLReq>
      _instance;
} _S2SDeployToolExecuteMySQLReq_default_instance_;
class S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse>
      _instance;
} _S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse_default_instance_;
class S2SDeployToolExecuteMySQLAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolExecuteMySQLAck>
      _instance;
} _S2SDeployToolExecuteMySQLAck_default_instance_;
class S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse>
      _instance;
} _S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse_default_instance_;
class S2SDeployToolQueryMySQLReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolQueryMySQLReq>
      _instance;
} _S2SDeployToolQueryMySQLReq_default_instance_;
class PBMySQLData_ValuesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMySQLData_ValuesEntry_DoNotUse>
      _instance;
} _PBMySQLData_ValuesEntry_DoNotUse_default_instance_;
class PBMySQLDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMySQLData>
      _instance;
} _PBMySQLData_default_instance_;
class PBMySQLDatasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMySQLDatas>
      _instance;
} _PBMySQLDatas_default_instance_;
class S2SDeployToolQueryMySQLAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolQueryMySQLAck>
      _instance;
} _S2SDeployToolQueryMySQLAck_default_instance_;
class S2SDeployToolQueryToolIdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolQueryToolIdReq>
      _instance;
} _S2SDeployToolQueryToolIdReq_default_instance_;
class S2SDeployToolQueryToolIdAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployToolQueryToolIdAck>
      _instance;
} _S2SDeployToolQueryToolIdAck_default_instance_;
class S2SDeployHeartbeatToAgentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeployHeartbeatToAgentReq>
      _instance;
} _S2SDeployHeartbeatToAgentReq_default_instance_;
class PBRemoteLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRemoteLog>
      _instance;
} _PBRemoteLog_default_instance_;
class S2SRemoteLogToServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRemoteLogToServerReq>
      _instance;
} _S2SRemoteLogToServerReq_default_instance_;
}  // namespace KFMsg
namespace protobuf_FrameMessage_2eproto {
static void InitDefaultsListenData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_ListenData_default_instance_;
    new (ptr) ::KFMsg::ListenData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::ListenData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_ListenData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListenData}, {}};

static void InitDefaultsRegisterToServerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_RegisterToServerReq_default_instance_;
    new (ptr) ::KFMsg::RegisterToServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::RegisterToServerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_RegisterToServerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegisterToServerReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsRegisterToServerAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_RegisterToServerAck_default_instance_;
    new (ptr) ::KFMsg::RegisterToServerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::RegisterToServerAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_RegisterToServerAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterToServerAck}, {}};

static void InitDefaultsTellRegisterToServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_TellRegisterToServer_default_instance_;
    new (ptr) ::KFMsg::TellRegisterToServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::TellRegisterToServer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_TellRegisterToServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTellRegisterToServer}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsTellUnRegisterFromServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_TellUnRegisterFromServer_default_instance_;
    new (ptr) ::KFMsg::TellUnRegisterFromServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::TellUnRegisterFromServer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_TellUnRegisterFromServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTellUnRegisterFromServer}, {}};

static void InitDefaultsS2STellDiscoverServerToMaster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellDiscoverServerToMaster_default_instance_;
    new (ptr) ::KFMsg::S2STellDiscoverServerToMaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellDiscoverServerToMaster::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STellDiscoverServerToMaster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STellDiscoverServerToMaster}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsS2STellLostServerToMaster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellLostServerToMaster_default_instance_;
    new (ptr) ::KFMsg::S2STellLostServerToMaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellLostServerToMaster::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellLostServerToMaster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellLostServerToMaster}, {}};

static void InitDefaultsS2STellRegisterServerToMaster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellRegisterServerToMaster_default_instance_;
    new (ptr) ::KFMsg::S2STellRegisterServerToMaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellRegisterServerToMaster::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STellRegisterServerToMaster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STellRegisterServerToMaster}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsS2STellServerListToMaster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellServerListToMaster_default_instance_;
    new (ptr) ::KFMsg::S2STellServerListToMaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellServerListToMaster::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STellServerListToMaster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STellServerListToMaster}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsS2SClusterRegisterToMasterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterRegisterToMasterReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterRegisterToMasterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterRegisterToMasterReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SClusterRegisterToMasterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SClusterRegisterToMasterReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsS2SClusterSyncProxyToMasterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterSyncProxyToMasterReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterSyncProxyToMasterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterSyncProxyToMasterReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SClusterSyncProxyToMasterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SClusterSyncProxyToMasterReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsS2SClusterAuthToMasterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterAuthToMasterReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterAuthToMasterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterAuthToMasterReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterAuthToMasterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterAuthToMasterReq}, {}};

static void InitDefaultsS2SClusterAuthToClientAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterAuthToClientAck_default_instance_;
    new (ptr) ::KFMsg::S2SClusterAuthToClientAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterAuthToClientAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SClusterAuthToClientAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SClusterAuthToClientAck}, {
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base,}};

static void InitDefaultsS2SClusterTokenToProxyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterTokenToProxyReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterTokenToProxyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterTokenToProxyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterTokenToProxyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterTokenToProxyReq}, {}};

static void InitDefaultsS2SClusterTokenToMasterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterTokenToMasterReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterTokenToMasterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterTokenToMasterReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterTokenToMasterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterTokenToMasterReq}, {}};

static void InitDefaultsS2SClusterVerifyToProxyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterVerifyToProxyReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterVerifyToProxyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterVerifyToProxyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterVerifyToProxyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterVerifyToProxyReq}, {}};

static void InitDefaultsS2SClusterTokenToProxyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterTokenToProxyAck_default_instance_;
    new (ptr) ::KFMsg::S2SClusterTokenToProxyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterTokenToProxyAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterTokenToProxyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterTokenToProxyAck}, {}};

static void InitDefaultsS2SClusterTokenToMasterAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterTokenToMasterAck_default_instance_;
    new (ptr) ::KFMsg::S2SClusterTokenToMasterAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterTokenToMasterAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterTokenToMasterAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterTokenToMasterAck}, {}};

static void InitDefaultsS2SClusterVerifyToClientAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterVerifyToClientAck_default_instance_;
    new (ptr) ::KFMsg::S2SClusterVerifyToClientAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterVerifyToClientAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterVerifyToClientAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterVerifyToClientAck}, {}};

static void InitDefaultsS2SClusterClientDiscoverToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterClientDiscoverToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterClientDiscoverToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterClientDiscoverToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterClientDiscoverToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterClientDiscoverToShardReq}, {}};

static void InitDefaultsS2SClusterClientLostToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterClientLostToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterClientLostToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterClientLostToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterClientLostToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterClientLostToShardReq}, {}};

static void InitDefaultsS2SClusterLostProxyToMasterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClusterLostProxyToMasterReq_default_instance_;
    new (ptr) ::KFMsg::S2SClusterLostProxyToMasterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClusterLostProxyToMasterReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClusterLostProxyToMasterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClusterLostProxyToMasterReq}, {}};

static void InitDefaultsPBRoute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRoute_default_instance_;
    new (ptr) ::KFMsg::PBRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRoute::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRoute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRoute}, {}};

static void InitDefaultsS2SRouteMessageToClientAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteMessageToClientAck_default_instance_;
    new (ptr) ::KFMsg::S2SRouteMessageToClientAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteMessageToClientAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRouteMessageToClientAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRouteMessageToClientAck}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base,}};

static void InitDefaultsS2SRouteMessageToNameAllReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteMessageToNameAllReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteMessageToNameAllReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteMessageToNameAllReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRouteMessageToNameAllReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRouteMessageToNameAllReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base,}};

static void InitDefaultsS2SRouteMessageToNameRandReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteMessageToNameRandReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteMessageToNameRandReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteMessageToNameRandReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRouteMessageToNameRandReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRouteMessageToNameRandReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base,}};

static void InitDefaultsS2SRouteMessageToNameBalanceReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteMessageToNameBalanceReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteMessageToNameBalanceReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteMessageToNameBalanceReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRouteMessageToNameBalanceReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRouteMessageToNameBalanceReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base,}};

static void InitDefaultsS2SRouteMessageToNameObjectReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteMessageToNameObjectReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteMessageToNameObjectReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteMessageToNameObjectReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRouteMessageToNameObjectReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRouteMessageToNameObjectReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base,}};

static void InitDefaultsS2SRouteMessageToServerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteMessageToServerReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteMessageToServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteMessageToServerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRouteMessageToServerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRouteMessageToServerReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base,}};

static void InitDefaultsS2SRouteMessageToPlayerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteMessageToPlayerReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteMessageToPlayerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteMessageToPlayerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRouteMessageToPlayerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRouteMessageToPlayerReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base,}};

static void InitDefaultsS2SRouteClientLostToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteClientLostToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteClientLostToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteClientLostToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteClientLostToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteClientLostToShardReq}, {}};

static void InitDefaultsS2SRouteDiscoverToClientReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteDiscoverToClientReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteDiscoverToClientReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteDiscoverToClientReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteDiscoverToClientReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteDiscoverToClientReq}, {}};

static void InitDefaultsS2SRouteSyncObjectToProxyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteSyncObjectToProxyReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteSyncObjectToProxyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteSyncObjectToProxyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteSyncObjectToProxyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteSyncObjectToProxyReq}, {}};

static void InitDefaultsS2SRouteSyncObjectToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteSyncObjectToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteSyncObjectToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteSyncObjectToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteSyncObjectToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteSyncObjectToShardReq}, {}};

static void InitDefaultsS2SRouteAddObjectToProxyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteAddObjectToProxyReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteAddObjectToProxyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteAddObjectToProxyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteAddObjectToProxyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteAddObjectToProxyReq}, {}};

static void InitDefaultsS2SRouteAddObjectToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteAddObjectToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteAddObjectToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteAddObjectToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteAddObjectToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteAddObjectToShardReq}, {}};

static void InitDefaultsS2SRouteRemoveObjectToProxyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteRemoveObjectToProxyReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteRemoveObjectToProxyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteRemoveObjectToProxyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteRemoveObjectToProxyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteRemoveObjectToProxyReq}, {}};

static void InitDefaultsS2SRouteRemoveObjectToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRouteRemoveObjectToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SRouteRemoveObjectToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRouteRemoveObjectToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRouteRemoveObjectToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRouteRemoveObjectToShardReq}, {}};

static void InitDefaultsS2SRegisterAgentToServerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRegisterAgentToServerReq_default_instance_;
    new (ptr) ::KFMsg::S2SRegisterAgentToServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRegisterAgentToServerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRegisterAgentToServerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRegisterAgentToServerReq}, {}};

static void InitDefaultsPBDeployCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBDeployCommand_default_instance_;
    new (ptr) ::KFMsg::PBDeployCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBDeployCommand::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBDeployCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBDeployCommand}, {}};

static void InitDefaultsS2SDeployCommandToAgentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployCommandToAgentReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployCommandToAgentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployCommandToAgentReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployCommandToAgentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployCommandToAgentReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBDeployCommand.base,}};

static void InitDefaultsS2SDeployCommandToClientReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployCommandToClientReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployCommandToClientReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployCommandToClientReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployCommandToClientReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployCommandToClientReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBDeployCommand.base,}};

static void InitDefaultsS2SDeployToolCommandReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolCommandReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolCommandReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolCommandReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployToolCommandReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployToolCommandReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBDeployCommand.base,}};

static void InitDefaultsS2SDeployLogToToolAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployLogToToolAck_default_instance_;
    new (ptr) ::KFMsg::S2SDeployLogToToolAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployLogToToolAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployLogToToolAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployLogToToolAck}, {}};

static void InitDefaultsS2SDeployLogToServerAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployLogToServerAck_default_instance_;
    new (ptr) ::KFMsg::S2SDeployLogToServerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployLogToServerAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployLogToServerAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployLogToServerAck}, {}};

static void InitDefaultsS2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse();
  }
  ::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse}, {}};

static void InitDefaultsS2SDeployToolDeleteMySQLReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolDeleteMySQLReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolDeleteMySQLReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolDeleteMySQLReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployToolDeleteMySQLReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployToolDeleteMySQLReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse.base,}};

static void InitDefaultsS2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse();
  }
  ::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse}, {}};

static void InitDefaultsS2SDeployToolDeleteMySQLAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolDeleteMySQLAck_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolDeleteMySQLAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolDeleteMySQLAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployToolDeleteMySQLAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployToolDeleteMySQLAck}, {
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse.base,}};

static void InitDefaultsS2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse();
  }
  ::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse}, {}};

static void InitDefaultsS2SDeployToolExecuteMySQLReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolExecuteMySQLReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolExecuteMySQLReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolExecuteMySQLReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployToolExecuteMySQLReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployToolExecuteMySQLReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse.base,}};

static void InitDefaultsS2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse();
  }
  ::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse}, {}};

static void InitDefaultsS2SDeployToolExecuteMySQLAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolExecuteMySQLAck_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolExecuteMySQLAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolExecuteMySQLAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployToolExecuteMySQLAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployToolExecuteMySQLAck}, {
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse.base,}};

static void InitDefaultsS2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse();
  }
  ::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse}, {}};

static void InitDefaultsS2SDeployToolQueryMySQLReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolQueryMySQLReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolQueryMySQLReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolQueryMySQLReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployToolQueryMySQLReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployToolQueryMySQLReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse.base,}};

static void InitDefaultsPBMySQLData_ValuesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMySQLData_ValuesEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBMySQLData_ValuesEntry_DoNotUse();
  }
  ::KFMsg::PBMySQLData_ValuesEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBMySQLData_ValuesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBMySQLData_ValuesEntry_DoNotUse}, {}};

static void InitDefaultsPBMySQLData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMySQLData_default_instance_;
    new (ptr) ::KFMsg::PBMySQLData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMySQLData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMySQLData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMySQLData}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBMySQLData_ValuesEntry_DoNotUse.base,}};

static void InitDefaultsPBMySQLDatas() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMySQLDatas_default_instance_;
    new (ptr) ::KFMsg::PBMySQLDatas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMySQLDatas::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMySQLDatas =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMySQLDatas}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBMySQLData.base,}};

static void InitDefaultsS2SDeployToolQueryMySQLAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolQueryMySQLAck_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolQueryMySQLAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolQueryMySQLAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SDeployToolQueryMySQLAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SDeployToolQueryMySQLAck}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBMySQLDatas.base,}};

static void InitDefaultsS2SDeployToolQueryToolIdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolQueryToolIdReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolQueryToolIdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolQueryToolIdReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolQueryToolIdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployToolQueryToolIdReq}, {}};

static void InitDefaultsS2SDeployToolQueryToolIdAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployToolQueryToolIdAck_default_instance_;
    new (ptr) ::KFMsg::S2SDeployToolQueryToolIdAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployToolQueryToolIdAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployToolQueryToolIdAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployToolQueryToolIdAck}, {}};

static void InitDefaultsS2SDeployHeartbeatToAgentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeployHeartbeatToAgentReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeployHeartbeatToAgentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeployHeartbeatToAgentReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeployHeartbeatToAgentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeployHeartbeatToAgentReq}, {}};

static void InitDefaultsPBRemoteLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRemoteLog_default_instance_;
    new (ptr) ::KFMsg::PBRemoteLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRemoteLog::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRemoteLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRemoteLog}, {}};

static void InitDefaultsS2SRemoteLogToServerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRemoteLogToServerReq_default_instance_;
    new (ptr) ::KFMsg::S2SRemoteLogToServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRemoteLogToServerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SRemoteLogToServerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SRemoteLogToServerReq}, {
      &protobuf_FrameMessage_2eproto::scc_info_PBRemoteLog.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListenData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterToServerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterToServerAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TellRegisterToServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TellUnRegisterFromServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellDiscoverServerToMaster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellLostServerToMaster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellRegisterServerToMaster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellServerListToMaster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterRegisterToMasterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterSyncProxyToMasterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterAuthToMasterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterAuthToClientAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterTokenToProxyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterTokenToMasterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterVerifyToProxyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterTokenToProxyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterTokenToMasterAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterVerifyToClientAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterClientDiscoverToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterClientLostToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClusterLostProxyToMasterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRoute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteMessageToClientAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteMessageToNameAllReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteMessageToNameRandReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteMessageToNameBalanceReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteMessageToNameObjectReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteMessageToServerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteMessageToPlayerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteClientLostToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteDiscoverToClientReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteSyncObjectToProxyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteSyncObjectToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteAddObjectToProxyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteAddObjectToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteRemoveObjectToProxyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRouteRemoveObjectToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRegisterAgentToServerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBDeployCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployCommandToAgentReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployCommandToClientReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolCommandReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployLogToToolAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployLogToServerAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolDeleteMySQLReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolDeleteMySQLAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolExecuteMySQLReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolExecuteMySQLAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolQueryMySQLReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMySQLData_ValuesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMySQLData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMySQLDatas.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolQueryMySQLAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolQueryToolIdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployToolQueryToolIdAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeployHeartbeatToAgentReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRemoteLog.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRemoteLogToServerReq.base);
}

::google::protobuf::Metadata file_level_metadata[64];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::ListenData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::ListenData, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::ListenData, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::ListenData, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::ListenData, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::ListenData, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::RegisterToServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::RegisterToServerReq, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::RegisterToServerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::RegisterToServerAck, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::RegisterToServerAck, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::RegisterToServerAck, apptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::TellRegisterToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::TellRegisterToServer, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::TellUnRegisterFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::TellUnRegisterFromServer, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::TellUnRegisterFromServer, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::TellUnRegisterFromServer, appid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellDiscoverServerToMaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellDiscoverServerToMaster, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellDiscoverServerToMaster, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellLostServerToMaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellLostServerToMaster, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellLostServerToMaster, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellLostServerToMaster, appid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRegisterServerToMaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRegisterServerToMaster, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRegisterServerToMaster, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellServerListToMaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellServerListToMaster, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterRegisterToMasterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterRegisterToMasterReq, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterSyncProxyToMasterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterSyncProxyToMasterReq, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterAuthToMasterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterAuthToMasterReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterAuthToMasterReq, clusterkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterAuthToClientAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterAuthToClientAck, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterAuthToClientAck, listen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyReq, proxyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyReq, masterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterReq, proxyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterReq, masterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterVerifyToProxyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterVerifyToProxyReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterVerifyToProxyReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyAck, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyAck, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyAck, proxyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToProxyAck, masterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterAck, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterAck, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterTokenToMasterAck, proxyid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterVerifyToClientAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterVerifyToClientAck, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterClientDiscoverToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterClientDiscoverToShardReq, clientid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterClientLostToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterClientLostToShardReq, clientid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterLostProxyToMasterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClusterLostProxyToMasterReq, proxyid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRoute, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRoute, sendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRoute, recvid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToClientAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToClientAck, pbroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToClientAck, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToClientAck, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameAllReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameAllReq, pbroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameAllReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameAllReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameAllReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameRandReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameRandReq, pbroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameRandReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameRandReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameRandReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameBalanceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameBalanceReq, pbroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameBalanceReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameBalanceReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameBalanceReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameObjectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameObjectReq, pbroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameObjectReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameObjectReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToNameObjectReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToServerReq, pbroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToServerReq, targetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToServerReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToServerReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToPlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToPlayerReq, pbroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToPlayerReq, targetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToPlayerReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteMessageToPlayerReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteClientLostToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteClientLostToShardReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteClientLostToShardReq, clientid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteDiscoverToClientReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteDiscoverToClientReq, shardid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToProxyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToProxyReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToProxyReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToProxyReq, shardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToProxyReq, objectid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToShardReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToShardReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteSyncObjectToShardReq, objectid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToProxyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToProxyReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToProxyReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToProxyReq, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToProxyReq, objectcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToShardReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToShardReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToShardReq, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteAddObjectToShardReq, objectcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToProxyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToProxyReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToProxyReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToProxyReq, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToProxyReq, objectcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToShardReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToShardReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToShardReq, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRouteRemoveObjectToShardReq, objectcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterAgentToServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterAgentToServerReq, agentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterAgentToServerReq, localip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterAgentToServerReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterAgentToServerReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterAgentToServerReq, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterAgentToServerReq, service_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBDeployCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBDeployCommand, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBDeployCommand, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBDeployCommand, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBDeployCommand, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBDeployCommand, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBDeployCommand, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployCommandToAgentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployCommandToAgentReq, deploycommand_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployCommandToClientReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployCommandToClientReq, deploycommand_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolCommandReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolCommandReq, deploycommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolCommandReq, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolCommandReq, toolid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolCommandReq, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployLogToToolAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployLogToToolAck, agentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployLogToToolAck, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployLogToServerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployLogToServerAck, agentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployLogToServerAck, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLReq, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLReq, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolDeleteMySQLAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLReq, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLReq, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolExecuteMySQLAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLReq, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLReq, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLData_ValuesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLData_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLData_ValuesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLData_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLData, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLDatas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMySQLDatas, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLAck, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLAck, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryMySQLAck, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryToolIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryToolIdReq, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryToolIdAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployToolQueryToolIdAck, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployHeartbeatToAgentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeployHeartbeatToAgentReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRemoteLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRemoteLog, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRemoteLog, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoteLogToServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoteLogToServerReq, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoteLogToServerReq, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoteLogToServerReq, strappid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoteLogToServerReq, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoteLogToServerReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoteLogToServerReq, logdata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::ListenData)},
  { 10, -1, sizeof(::KFMsg::RegisterToServerReq)},
  { 16, -1, sizeof(::KFMsg::RegisterToServerAck)},
  { 24, -1, sizeof(::KFMsg::TellRegisterToServer)},
  { 30, -1, sizeof(::KFMsg::TellUnRegisterFromServer)},
  { 38, -1, sizeof(::KFMsg::S2STellDiscoverServerToMaster)},
  { 45, -1, sizeof(::KFMsg::S2STellLostServerToMaster)},
  { 53, -1, sizeof(::KFMsg::S2STellRegisterServerToMaster)},
  { 60, -1, sizeof(::KFMsg::S2STellServerListToMaster)},
  { 66, -1, sizeof(::KFMsg::S2SClusterRegisterToMasterReq)},
  { 72, -1, sizeof(::KFMsg::S2SClusterSyncProxyToMasterReq)},
  { 78, -1, sizeof(::KFMsg::S2SClusterAuthToMasterReq)},
  { 85, -1, sizeof(::KFMsg::S2SClusterAuthToClientAck)},
  { 92, -1, sizeof(::KFMsg::S2SClusterTokenToProxyReq)},
  { 101, -1, sizeof(::KFMsg::S2SClusterTokenToMasterReq)},
  { 110, -1, sizeof(::KFMsg::S2SClusterVerifyToProxyReq)},
  { 117, -1, sizeof(::KFMsg::S2SClusterTokenToProxyAck)},
  { 126, -1, sizeof(::KFMsg::S2SClusterTokenToMasterAck)},
  { 134, -1, sizeof(::KFMsg::S2SClusterVerifyToClientAck)},
  { 140, -1, sizeof(::KFMsg::S2SClusterClientDiscoverToShardReq)},
  { 146, -1, sizeof(::KFMsg::S2SClusterClientLostToShardReq)},
  { 152, -1, sizeof(::KFMsg::S2SClusterLostProxyToMasterReq)},
  { 158, -1, sizeof(::KFMsg::PBRoute)},
  { 166, -1, sizeof(::KFMsg::S2SRouteMessageToClientAck)},
  { 174, -1, sizeof(::KFMsg::S2SRouteMessageToNameAllReq)},
  { 183, -1, sizeof(::KFMsg::S2SRouteMessageToNameRandReq)},
  { 192, -1, sizeof(::KFMsg::S2SRouteMessageToNameBalanceReq)},
  { 201, -1, sizeof(::KFMsg::S2SRouteMessageToNameObjectReq)},
  { 210, -1, sizeof(::KFMsg::S2SRouteMessageToServerReq)},
  { 219, -1, sizeof(::KFMsg::S2SRouteMessageToPlayerReq)},
  { 228, -1, sizeof(::KFMsg::S2SRouteClientLostToShardReq)},
  { 235, -1, sizeof(::KFMsg::S2SRouteDiscoverToClientReq)},
  { 241, -1, sizeof(::KFMsg::S2SRouteSyncObjectToProxyReq)},
  { 250, -1, sizeof(::KFMsg::S2SRouteSyncObjectToShardReq)},
  { 258, -1, sizeof(::KFMsg::S2SRouteAddObjectToProxyReq)},
  { 267, -1, sizeof(::KFMsg::S2SRouteAddObjectToShardReq)},
  { 276, -1, sizeof(::KFMsg::S2SRouteRemoveObjectToProxyReq)},
  { 285, -1, sizeof(::KFMsg::S2SRouteRemoveObjectToShardReq)},
  { 294, -1, sizeof(::KFMsg::S2SRegisterAgentToServerReq)},
  { 305, -1, sizeof(::KFMsg::PBDeployCommand)},
  { 316, -1, sizeof(::KFMsg::S2SDeployCommandToAgentReq)},
  { 322, -1, sizeof(::KFMsg::S2SDeployCommandToClientReq)},
  { 328, -1, sizeof(::KFMsg::S2SDeployToolCommandReq)},
  { 337, -1, sizeof(::KFMsg::S2SDeployLogToToolAck)},
  { 344, -1, sizeof(::KFMsg::S2SDeployLogToServerAck)},
  { 351, 358, sizeof(::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse)},
  { 360, -1, sizeof(::KFMsg::S2SDeployToolDeleteMySQLReq)},
  { 367, 374, sizeof(::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse)},
  { 376, -1, sizeof(::KFMsg::S2SDeployToolDeleteMySQLAck)},
  { 384, 391, sizeof(::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse)},
  { 393, -1, sizeof(::KFMsg::S2SDeployToolExecuteMySQLReq)},
  { 400, 407, sizeof(::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse)},
  { 409, -1, sizeof(::KFMsg::S2SDeployToolExecuteMySQLAck)},
  { 417, 424, sizeof(::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse)},
  { 426, -1, sizeof(::KFMsg::S2SDeployToolQueryMySQLReq)},
  { 433, 440, sizeof(::KFMsg::PBMySQLData_ValuesEntry_DoNotUse)},
  { 442, -1, sizeof(::KFMsg::PBMySQLData)},
  { 448, -1, sizeof(::KFMsg::PBMySQLDatas)},
  { 454, -1, sizeof(::KFMsg::S2SDeployToolQueryMySQLAck)},
  { 462, -1, sizeof(::KFMsg::S2SDeployToolQueryToolIdReq)},
  { 468, -1, sizeof(::KFMsg::S2SDeployToolQueryToolIdAck)},
  { 474, -1, sizeof(::KFMsg::S2SDeployHeartbeatToAgentReq)},
  { 480, -1, sizeof(::KFMsg::PBRemoteLog)},
  { 487, -1, sizeof(::KFMsg::S2SRemoteLogToServerReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_ListenData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_RegisterToServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_RegisterToServerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_TellRegisterToServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_TellUnRegisterFromServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellDiscoverServerToMaster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellLostServerToMaster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellRegisterServerToMaster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellServerListToMaster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterRegisterToMasterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterSyncProxyToMasterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterAuthToMasterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterAuthToClientAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterTokenToProxyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterTokenToMasterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterVerifyToProxyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterTokenToProxyAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterTokenToMasterAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterVerifyToClientAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterClientDiscoverToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterClientLostToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClusterLostProxyToMasterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteMessageToClientAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteMessageToNameAllReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteMessageToNameRandReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteMessageToNameBalanceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteMessageToNameObjectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteMessageToServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteMessageToPlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteClientLostToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteDiscoverToClientReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteSyncObjectToProxyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteSyncObjectToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteAddObjectToProxyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteAddObjectToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteRemoveObjectToProxyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRouteRemoveObjectToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRegisterAgentToServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBDeployCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployCommandToAgentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployCommandToClientReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolCommandReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployLogToToolAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployLogToServerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolDeleteMySQLReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolDeleteMySQLAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolExecuteMySQLReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolExecuteMySQLAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolQueryMySQLReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMySQLData_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMySQLData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMySQLDatas_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolQueryMySQLAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolQueryToolIdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployToolQueryToolIdAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeployHeartbeatToAgentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRemoteLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRemoteLogToServerReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 64);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022FrameMessage.proto\022\005KFMsg\"W\n\nListenDat"
      "a\022\017\n\007appname\030\001 \001(\014\022\017\n\007apptype\030\002 \001(\014\022\r\n\005a"
      "ppid\030\003 \001(\004\022\n\n\002ip\030\004 \001(\014\022\014\n\004port\030\005 \001(\r\"8\n\023"
      "RegisterToServerReq\022!\n\006listen\030\001 \001(\0132\021.KF"
      "Msg.ListenData\"F\n\023RegisterToServerAck\022\r\n"
      "\005appid\030\001 \001(\004\022\017\n\007appname\030\002 \001(\014\022\017\n\007apptype"
      "\030\003 \001(\014\"9\n\024TellRegisterToServer\022!\n\006listen"
      "\030\001 \001(\0132\021.KFMsg.ListenData\"K\n\030TellUnRegis"
      "terFromServer\022\017\n\007appname\030\001 \001(\014\022\017\n\007apptyp"
      "e\030\002 \001(\014\022\r\n\005appid\030\003 \001(\004\"T\n\035S2STellDiscove"
      "rServerToMaster\022\020\n\010serverid\030\001 \001(\004\022!\n\006lis"
      "ten\030\002 \001(\0132\021.KFMsg.ListenData\"L\n\031S2STellL"
      "ostServerToMaster\022\017\n\007appname\030\001 \001(\014\022\017\n\007ap"
      "ptype\030\002 \001(\014\022\r\n\005appid\030\003 \001(\004\"T\n\035S2STellReg"
      "isterServerToMaster\022\020\n\010serverid\030\001 \001(\004\022!\n"
      "\006listen\030\002 \001(\0132\021.KFMsg.ListenData\">\n\031S2ST"
      "ellServerListToMaster\022!\n\006listen\030\001 \003(\0132\021."
      "KFMsg.ListenData\"B\n\035S2SClusterRegisterTo"
      "MasterReq\022!\n\006listen\030\001 \001(\0132\021.KFMsg.Listen"
      "Data\"C\n\036S2SClusterSyncProxyToMasterReq\022!"
      "\n\006listen\030\001 \003(\0132\021.KFMsg.ListenData\"A\n\031S2S"
      "ClusterAuthToMasterReq\022\020\n\010clientid\030\001 \001(\004"
      "\022\022\n\nclusterkey\030\002 \001(\014\"M\n\031S2SClusterAuthTo"
      "ClientAck\022\r\n\005token\030\001 \001(\014\022!\n\006listen\030\002 \001(\013"
      "2\021.KFMsg.ListenData\"_\n\031S2SClusterTokenTo"
      "ProxyReq\022\r\n\005token\030\001 \001(\014\022\020\n\010clientid\030\002 \001("
      "\004\022\017\n\007proxyid\030\003 \001(\004\022\020\n\010masterid\030\004 \001(\004\"`\n\032"
      "S2SClusterTokenToMasterReq\022\r\n\005token\030\001 \001("
      "\014\022\020\n\010clientid\030\002 \001(\004\022\017\n\007proxyid\030\003 \001(\004\022\020\n\010"
      "masterid\030\004 \001(\004\"=\n\032S2SClusterVerifyToProx"
      "yReq\022\r\n\005token\030\001 \001(\014\022\020\n\010serverid\030\002 \001(\004\"_\n"
      "\031S2SClusterTokenToProxyAck\022\r\n\005token\030\001 \001("
      "\014\022\020\n\010clientid\030\002 \001(\004\022\017\n\007proxyid\030\003 \001(\004\022\020\n\010"
      "masterid\030\004 \001(\004\"N\n\032S2SClusterTokenToMaste"
      "rAck\022\r\n\005token\030\001 \001(\014\022\020\n\010clientid\030\002 \001(\004\022\017\n"
      "\007proxyid\030\003 \001(\004\"/\n\033S2SClusterVerifyToClie"
      "ntAck\022\020\n\010serverid\030\001 \001(\004\"6\n\"S2SClusterCli"
      "entDiscoverToShardReq\022\020\n\010clientid\030\001 \003(\004\""
      "2\n\036S2SClusterClientLostToShardReq\022\020\n\010cli"
      "entid\030\001 \001(\004\"1\n\036S2SClusterLostProxyToMast"
      "erReq\022\017\n\007proxyid\030\001 \001(\004\";\n\007PBRoute\022\020\n\010ser"
      "verid\030\001 \001(\004\022\016\n\006sendid\030\002 \001(\004\022\016\n\006recvid\030\003 "
      "\001(\004\"]\n\032S2SRouteMessageToClientAck\022\037\n\007pbr"
      "oute\030\001 \001(\0132\016.KFMsg.PBRoute\022\r\n\005msgid\030\002 \001("
      "\r\022\017\n\007msgdata\030\003 \001(\014\"l\n\033S2SRouteMessageToN"
      "ameAllReq\022\037\n\007pbroute\030\001 \001(\0132\016.KFMsg.PBRou"
      "te\022\014\n\004name\030\002 \001(\014\022\r\n\005msgid\030\003 \001(\r\022\017\n\007msgda"
      "ta\030\004 \001(\014\"m\n\034S2SRouteMessageToNameRandReq"
      "\022\037\n\007pbroute\030\001 \001(\0132\016.KFMsg.PBRoute\022\014\n\004nam"
      "e\030\002 \001(\014\022\r\n\005msgid\030\003 \001(\r\022\017\n\007msgdata\030\004 \001(\014\""
      "p\n\037S2SRouteMessageToNameBalanceReq\022\037\n\007pb"
      "route\030\001 \001(\0132\016.KFMsg.PBRoute\022\014\n\004name\030\002 \001("
      "\014\022\r\n\005msgid\030\003 \001(\r\022\017\n\007msgdata\030\004 \001(\014\"o\n\036S2S"
      "RouteMessageToNameObjectReq\022\037\n\007pbroute\030\001"
      " \001(\0132\016.KFMsg.PBRoute\022\014\n\004name\030\002 \001(\014\022\r\n\005ms"
      "gid\030\003 \001(\r\022\017\n\007msgdata\030\004 \001(\014\"o\n\032S2SRouteMe"
      "ssageToServerReq\022\037\n\007pbroute\030\001 \001(\0132\016.KFMs"
      "g.PBRoute\022\020\n\010targetid\030\002 \001(\004\022\r\n\005msgid\030\003 \001"
      "(\r\022\017\n\007msgdata\030\004 \001(\014\"o\n\032S2SRouteMessageTo"
      "PlayerReq\022\037\n\007pbroute\030\001 \001(\0132\016.KFMsg.PBRou"
      "te\022\020\n\010targetid\030\002 \001(\004\022\r\n\005msgid\030\003 \001(\r\022\017\n\007m"
      "sgdata\030\004 \001(\014\">\n\034S2SRouteClientLostToShar"
      "dReq\022\014\n\004name\030\001 \001(\014\022\020\n\010clientid\030\002 \001(\004\".\n\033"
      "S2SRouteDiscoverToClientReq\022\017\n\007shardid\030\001"
      " \001(\004\"a\n\034S2SRouteSyncObjectToProxyReq\022\014\n\004"
      "name\030\001 \001(\014\022\020\n\010clientid\030\002 \001(\004\022\017\n\007shardid\030"
      "\003 \001(\004\022\020\n\010objectid\030\004 \003(\004\"P\n\034S2SRouteSyncO"
      "bjectToShardReq\022\014\n\004name\030\001 \001(\014\022\020\n\010clienti"
      "d\030\002 \001(\004\022\020\n\010objectid\030\003 \003(\004\"d\n\033S2SRouteAdd"
      "ObjectToProxyReq\022\014\n\004name\030\001 \001(\014\022\020\n\010client"
      "id\030\002 \001(\004\022\020\n\010objectid\030\003 \001(\004\022\023\n\013objectcoun"
      "t\030\004 \001(\r\"d\n\033S2SRouteAddObjectToShardReq\022\014"
      "\n\004name\030\001 \001(\014\022\020\n\010clientid\030\002 \001(\004\022\020\n\010object"
      "id\030\003 \001(\004\022\023\n\013objectcount\030\004 \001(\r\"g\n\036S2SRout"
      "eRemoveObjectToProxyReq\022\014\n\004name\030\001 \001(\014\022\020\n"
      "\010clientid\030\002 \001(\004\022\020\n\010objectid\030\003 \001(\004\022\023\n\013obj"
      "ectcount\030\004 \001(\r\"g\n\036S2SRouteRemoveObjectTo"
      "ShardReq\022\014\n\004name\030\001 \001(\014\022\020\n\010clientid\030\002 \001(\004"
      "\022\020\n\010objectid\030\003 \001(\004\022\023\n\013objectcount\030\004 \001(\r\""
      "z\n\033S2SRegisterAgentToServerReq\022\017\n\007agenti"
      "d\030\001 \001(\014\022\017\n\007localip\030\002 \001(\014\022\014\n\004name\030\003 \001(\014\022\014"
      "\n\004type\030\004 \001(\014\022\014\n\004port\030\005 \001(\r\022\017\n\007service\030\006 "
      "\001(\014\"r\n\017PBDeployCommand\022\017\n\007command\030\001 \001(\014\022"
      "\017\n\007appname\030\002 \001(\014\022\017\n\007apptype\030\003 \001(\014\022\r\n\005app"
      "id\030\004 \001(\014\022\016\n\006zoneid\030\005 \001(\r\022\r\n\005value\030\006 \001(\014\""
      "K\n\032S2SDeployCommandToAgentReq\022-\n\rdeployc"
      "ommand\030\001 \001(\0132\026.KFMsg.PBDeployCommand\"L\n\033"
      "S2SDeployCommandToClientReq\022-\n\rdeploycom"
      "mand\030\001 \001(\0132\026.KFMsg.PBDeployCommand\"r\n\027S2"
      "SDeployToolCommandReq\022-\n\rdeploycommand\030\001"
      " \001(\0132\026.KFMsg.PBDeployCommand\022\014\n\004time\030\002 \001"
      "(\004\022\016\n\006toolid\030\003 \001(\014\022\n\n\002ip\030\004 \001(\014\"9\n\025S2SDep"
      "loyLogToToolAck\022\017\n\007agentid\030\001 \001(\004\022\017\n\007cont"
      "ent\030\002 \001(\014\";\n\027S2SDeployLogToServerAck\022\017\n\007"
      "agentid\030\001 \001(\004\022\017\n\007content\030\002 \001(\014\"\225\001\n\033S2SDe"
      "ployToolDeleteMySQLReq\022\r\n\005table\030\001 \001(\014\022:\n"
      "\004keys\030\002 \003(\0132,.KFMsg.S2SDeployToolDeleteM"
      "ySQLReq.KeysEntry\032+\n\tKeysEntry\022\013\n\003key\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\245\001\n\033S2SDeployTool"
      "DeleteMySQLAck\022\r\n\005table\030\001 \001(\014\022:\n\004keys\030\002 "
      "\003(\0132,.KFMsg.S2SDeployToolDeleteMySQLAck."
      "KeysEntry\022\016\n\006result\030\003 \001(\010\032+\n\tKeysEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\235\001\n\034S2SDe"
      "ployToolExecuteMySQLReq\022\r\n\005table\030\001 \001(\014\022\?"
      "\n\006values\030\002 \003(\0132/.KFMsg.S2SDeployToolExec"
      "uteMySQLReq.ValuesEntry\032-\n\013ValuesEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\255\001\n\034S2SDe"
      "ployToolExecuteMySQLAck\022\r\n\005table\030\001 \001(\014\022\?"
      "\n\006values\030\002 \003(\0132/.KFMsg.S2SDeployToolExec"
      "uteMySQLAck.ValuesEntry\022\016\n\006result\030\003 \001(\010\032"
      "-\n\013ValuesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\014:\0028\001\"\223\001\n\032S2SDeployToolQueryMySQLReq\022\r\n"
      "\005table\030\001 \001(\014\0229\n\004keys\030\002 \003(\0132+.KFMsg.S2SDe"
      "ployToolQueryMySQLReq.KeysEntry\032+\n\tKeysE"
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"l\n\013"
      "PBMySQLData\022.\n\006values\030\001 \003(\0132\036.KFMsg.PBMy"
      "SQLData.ValuesEntry\032-\n\013ValuesEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"0\n\014PBMySQLDat"
      "as\022 \n\004data\030\002 \003(\0132\022.KFMsg.PBMySQLData\"_\n\032"
      "S2SDeployToolQueryMySQLAck\022\r\n\005table\030\001 \001("
      "\014\022\"\n\005datas\030\002 \001(\0132\023.KFMsg.PBMySQLDatas\022\016\n"
      "\006result\030\003 \001(\010\")\n\033S2SDeployToolQueryToolI"
      "dReq\022\n\n\002ip\030\001 \001(\014\")\n\033S2SDeployToolQueryTo"
      "olIdAck\022\n\n\002id\030\001 \001(\r\"*\n\034S2SDeployHeartbea"
      "tToAgentReq\022\n\n\002id\030\001 \001(\004\"-\n\013PBRemoteLog\022\r"
      "\n\005level\030\001 \001(\r\022\017\n\007content\030\002 \001(\014\"\221\001\n\027S2SRe"
      "moteLogToServerReq\022\017\n\007appname\030\001 \001(\014\022\017\n\007a"
      "pptype\030\002 \001(\014\022\020\n\010strappid\030\003 \001(\014\022\r\n\005appid\030"
      "\004 \001(\004\022\016\n\006zoneid\030\005 \001(\r\022#\n\007logdata\030\006 \003(\0132\022"
      ".KFMsg.PBRemoteLog*\232\020\n\rFrameProtocol\022\034\n\030"
      "S2S_FRAME_PROTOCOL_BEGIN\020\000\022\037\n\032S2S_REGIST"
      "ER_TO_SERVER_REQ\020\221N\022\037\n\032S2S_REGISTER_TO_S"
      "ERVER_ACK\020\222N\022 \n\033S2S_TELL_REGISTER_TO_SER"
      "VER\020\223N\022$\n\037S2S_TELL_UNREGISTER_FROM_SERVE"
      "R\020\224N\022\'\n\"S2S_TELL_DISCOVER_SERVER_TO_MAST"
      "ER\020\225N\022#\n\036S2S_TELL_LOST_SERVER_TO_MASTER\020"
      "\226N\022\'\n\"S2S_TELL_REGISTER_SERVER_TO_MASTER"
      "\020\227N\022#\n\036S2S_TELL_SERVER_LIST_TO_MASTER\020\230N"
      "\022!\n\034S2S_REMOTE_LOG_TO_SERVER_REQ\020\232N\022%\n S"
      "2S_REGISTER_AGENT_TO_SERVER_REQ\020\233N\022$\n\037S2"
      "S_DEPLOY_COMMAND_TO_AGENT_REQ\020\234N\022%\n S2S_"
      "DEPLOY_COMMAND_TO_CLIENT_REQ\020\235N\022&\n!S2S_D"
      "EPLOY_TOOL_EXECUTE_MYSQL_REQ\020\236N\022&\n!S2S_D"
      "EPLOY_TOOL_EXECUTE_MYSQL_ACK\020\237N\022$\n\037S2S_D"
      "EPLOY_TOOL_QUERY_MYSQL_REQ\020\240N\022$\n\037S2S_DEP"
      "LOY_TOOL_QUERY_MYSQL_ACK\020\241N\022 \n\033S2S_DEPLO"
      "Y_TOOL_COMMAND_REQ\020\242N\022\037\n\032S2S_DEPLOY_LOG_"
      "TO_TOOL_ACK\020\243N\022!\n\034S2S_DEPLOY_LOG_TO_SERV"
      "ER_ACK\020\244N\022%\n S2S_DEPLOY_TOOL_DELETE_MYSQ"
      "L_REQ\020\245N\022%\n S2S_DEPLOY_TOOL_DELETE_MYSQL"
      "_ACK\020\246N\022&\n!S2S_DEPLOY_TOOL_QUERY_TOOL_ID"
      "_REQ\020\247N\022&\n!S2S_DEPLOY_TOOL_QUERY_TOOL_ID"
      "_ACK\020\250N\022&\n!S2S_DEPLOY_HEARTBEAT_TO_AGENT"
      "_REQ\020\251N\022\'\n\"S2S_CLUSTER_REGISTER_TO_MASTE"
      "R_REQ\020\365N\022)\n$S2S_CLUSTER_SYNC_PROXY_TO_MA"
      "STER_REQ\020\366N\022#\n\036S2S_CLUSTER_AUTH_TO_MASTE"
      "R_REQ\020\367N\022#\n\036S2S_CLUSTER_AUTH_TO_CLIENT_A"
      "CK\020\370N\022#\n\036S2S_CLUSTER_TOKEN_TO_PROXY_REQ\020"
      "\371N\022$\n\037S2S_CLUSTER_VERIFY_TO_PROXY_REQ\020\372N"
      "\022%\n S2S_CLUSTER_VERIFY_TO_CLIENT_ACK\020\373N\022"
      "-\n(S2S_CLUSTER_CLIENT_DISCOVER_TO_SHARD_"
      "REQ\020\374N\022)\n$S2S_CLUSTER_CLIENT_LOST_TO_SHA"
      "RD_REQ\020\375N\022)\n$S2S_CLUSTER_LOST_PROXY_TO_M"
      "ASTER_REQ\020\376N\022$\n\037S2S_CLUSTER_TOKEN_TO_MAS"
      "TER_REQ\020\377N\022#\n\036S2S_CLUSTER_TOKEN_TO_PROXY"
      "_ACK\020\200O\022$\n\037S2S_CLUSTER_TOKEN_TO_MASTER_A"
      "CK\020\201O\022$\n\037S2S_ROUTE_MESSAGE_TO_CLIENT_ACK"
      "\020\331O\022&\n!S2S_ROUTE_MESSAGE_TO_NAME_ALL_REQ"
      "\020\332O\022\'\n\"S2S_ROUTE_MESSAGE_TO_NAME_RAND_RE"
      "Q\020\333O\022*\n%S2S_ROUTE_MESSAGE_TO_NAME_BALANC"
      "E_REQ\020\334O\022)\n$S2S_ROUTE_MESSAGE_TO_NAME_OB"
      "JECT_REQ\020\335O\022$\n\037S2S_ROUTE_MESSAGE_TO_SERV"
      "ER_REQ\020\336O\022$\n\037S2S_ROUTE_MESSAGE_TO_PLAYER"
      "_REQ\020\337O\022\'\n\"S2S_ROUTE_CLIENT_LOST_TO_SHAR"
      "D_REQ\020\340O\022%\n S2S_ROUTE_DISCOVER_TO_CLIENT"
      "_REQ\020\341O\022\'\n\"S2S_ROUTE_SYNC_OBJECT_TO_PROX"
      "Y_REQ\020\342O\022&\n!S2S_ROUTE_ADD_OBJECT_TO_PROX"
      "Y_REQ\020\343O\022)\n$S2S_ROUTE_REMOVE_OBJECT_TO_P"
      "ROXY_REQ\020\344O\022\'\n\"S2S_ROUTE_SYNC_OBJECT_TO_"
      "SHARD_REQ\020\345O\022&\n!S2S_ROUTE_ADD_OBJECT_TO_"
      "SHARD_REQ\020\346O\022)\n$S2S_ROUTE_REMOVE_OBJECT_"
      "TO_SHARD_REQ\020\347Ob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7263);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* FrameProtocol_descriptor() {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameMessage_2eproto::file_level_enum_descriptors[0];
}
bool FrameProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 10008:
    case 10010:
    case 10011:
    case 10012:
    case 10013:
    case 10014:
    case 10015:
    case 10016:
    case 10017:
    case 10018:
    case 10019:
    case 10020:
    case 10021:
    case 10022:
    case 10023:
    case 10024:
    case 10025:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 10107:
    case 10108:
    case 10109:
    case 10110:
    case 10111:
    case 10112:
    case 10113:
    case 10201:
    case 10202:
    case 10203:
    case 10204:
    case 10205:
    case 10206:
    case 10207:
    case 10208:
    case 10209:
    case 10210:
    case 10211:
    case 10212:
    case 10213:
    case 10214:
    case 10215:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ListenData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListenData::kAppnameFieldNumber;
const int ListenData::kApptypeFieldNumber;
const int ListenData::kAppidFieldNumber;
const int ListenData::kIpFieldNumber;
const int ListenData::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListenData::ListenData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_ListenData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.ListenData)
}
ListenData::ListenData(const ListenData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.ListenData)
}

void ListenData::SharedCtor() {
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(port_));
}

ListenData::~ListenData() {
  // @@protoc_insertion_point(destructor:KFMsg.ListenData)
  SharedDtor();
}

void ListenData::SharedDtor() {
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListenData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListenData::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListenData& ListenData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_ListenData.base);
  return *internal_default_instance();
}


void ListenData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.ListenData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool ListenData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.ListenData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes appname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes apptype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apptype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.ListenData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.ListenData)
  return false;
#undef DO_
}

void ListenData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.ListenData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->appname(), output);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->apptype(), output);
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->appid(), output);
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ip(), output);
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.ListenData)
}

::google::protobuf::uint8* ListenData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.ListenData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->appname(), target);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->apptype(), target);
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->appid(), target);
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ip(), target);
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.ListenData)
  return target;
}

size_t ListenData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.ListenData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes appname = 1;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appname());
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->apptype());
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListenData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.ListenData)
  GOOGLE_DCHECK_NE(&from, this);
  const ListenData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListenData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.ListenData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.ListenData)
    MergeFrom(*source);
  }
}

void ListenData::MergeFrom(const ListenData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.ListenData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void ListenData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.ListenData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListenData::CopyFrom(const ListenData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.ListenData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListenData::IsInitialized() const {
  return true;
}

void ListenData::Swap(ListenData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListenData::InternalSwap(ListenData* other) {
  using std::swap;
  appname_.Swap(&other->appname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apptype_.Swap(&other->apptype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListenData::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterToServerReq::InitAsDefaultInstance() {
  ::KFMsg::_RegisterToServerReq_default_instance_._instance.get_mutable()->listen_ = const_cast< ::KFMsg::ListenData*>(
      ::KFMsg::ListenData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterToServerReq::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterToServerReq::RegisterToServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_RegisterToServerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.RegisterToServerReq)
}
RegisterToServerReq::RegisterToServerReq(const RegisterToServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listen()) {
    listen_ = new ::KFMsg::ListenData(*from.listen_);
  } else {
    listen_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.RegisterToServerReq)
}

void RegisterToServerReq::SharedCtor() {
  listen_ = NULL;
}

RegisterToServerReq::~RegisterToServerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.RegisterToServerReq)
  SharedDtor();
}

void RegisterToServerReq::SharedDtor() {
  if (this != internal_default_instance()) delete listen_;
}

void RegisterToServerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterToServerReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterToServerReq& RegisterToServerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_RegisterToServerReq.base);
  return *internal_default_instance();
}


void RegisterToServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.RegisterToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
  _internal_metadata_.Clear();
}

bool RegisterToServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.RegisterToServerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.ListenData listen = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.RegisterToServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.RegisterToServerReq)
  return false;
#undef DO_
}

void RegisterToServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.RegisterToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_listen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.RegisterToServerReq)
}

::google::protobuf::uint8* RegisterToServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.RegisterToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_listen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.RegisterToServerReq)
  return target;
}

size_t RegisterToServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.RegisterToServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listen_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterToServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.RegisterToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterToServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterToServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.RegisterToServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.RegisterToServerReq)
    MergeFrom(*source);
  }
}

void RegisterToServerReq::MergeFrom(const RegisterToServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.RegisterToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_listen()) {
    mutable_listen()->::KFMsg::ListenData::MergeFrom(from.listen());
  }
}

void RegisterToServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.RegisterToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterToServerReq::CopyFrom(const RegisterToServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.RegisterToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterToServerReq::IsInitialized() const {
  return true;
}

void RegisterToServerReq::Swap(RegisterToServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterToServerReq::InternalSwap(RegisterToServerReq* other) {
  using std::swap;
  swap(listen_, other->listen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterToServerReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterToServerAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterToServerAck::kAppidFieldNumber;
const int RegisterToServerAck::kAppnameFieldNumber;
const int RegisterToServerAck::kApptypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterToServerAck::RegisterToServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_RegisterToServerAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.RegisterToServerAck)
}
RegisterToServerAck::RegisterToServerAck(const RegisterToServerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.RegisterToServerAck)
}

void RegisterToServerAck::SharedCtor() {
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = GOOGLE_ULONGLONG(0);
}

RegisterToServerAck::~RegisterToServerAck() {
  // @@protoc_insertion_point(destructor:KFMsg.RegisterToServerAck)
  SharedDtor();
}

void RegisterToServerAck::SharedDtor() {
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterToServerAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterToServerAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterToServerAck& RegisterToServerAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_RegisterToServerAck.base);
  return *internal_default_instance();
}


void RegisterToServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.RegisterToServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegisterToServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.RegisterToServerAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes appname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes apptype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apptype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.RegisterToServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.RegisterToServerAck)
  return false;
#undef DO_
}

void RegisterToServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.RegisterToServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // bytes appname = 2;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->appname(), output);
  }

  // bytes apptype = 3;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->apptype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.RegisterToServerAck)
}

::google::protobuf::uint8* RegisterToServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.RegisterToServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // bytes appname = 2;
  if (this->appname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->appname(), target);
  }

  // bytes apptype = 3;
  if (this->apptype().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->apptype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.RegisterToServerAck)
  return target;
}

size_t RegisterToServerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.RegisterToServerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes appname = 2;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appname());
  }

  // bytes apptype = 3;
  if (this->apptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->apptype());
  }

  // uint64 appid = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterToServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.RegisterToServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterToServerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterToServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.RegisterToServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.RegisterToServerAck)
    MergeFrom(*source);
  }
}

void RegisterToServerAck::MergeFrom(const RegisterToServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.RegisterToServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
}

void RegisterToServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.RegisterToServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterToServerAck::CopyFrom(const RegisterToServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.RegisterToServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterToServerAck::IsInitialized() const {
  return true;
}

void RegisterToServerAck::Swap(RegisterToServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterToServerAck::InternalSwap(RegisterToServerAck* other) {
  using std::swap;
  appname_.Swap(&other->appname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apptype_.Swap(&other->apptype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterToServerAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TellRegisterToServer::InitAsDefaultInstance() {
  ::KFMsg::_TellRegisterToServer_default_instance_._instance.get_mutable()->listen_ = const_cast< ::KFMsg::ListenData*>(
      ::KFMsg::ListenData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TellRegisterToServer::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TellRegisterToServer::TellRegisterToServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_TellRegisterToServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.TellRegisterToServer)
}
TellRegisterToServer::TellRegisterToServer(const TellRegisterToServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listen()) {
    listen_ = new ::KFMsg::ListenData(*from.listen_);
  } else {
    listen_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.TellRegisterToServer)
}

void TellRegisterToServer::SharedCtor() {
  listen_ = NULL;
}

TellRegisterToServer::~TellRegisterToServer() {
  // @@protoc_insertion_point(destructor:KFMsg.TellRegisterToServer)
  SharedDtor();
}

void TellRegisterToServer::SharedDtor() {
  if (this != internal_default_instance()) delete listen_;
}

void TellRegisterToServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TellRegisterToServer::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TellRegisterToServer& TellRegisterToServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_TellRegisterToServer.base);
  return *internal_default_instance();
}


void TellRegisterToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.TellRegisterToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
  _internal_metadata_.Clear();
}

bool TellRegisterToServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.TellRegisterToServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.ListenData listen = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.TellRegisterToServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.TellRegisterToServer)
  return false;
#undef DO_
}

void TellRegisterToServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.TellRegisterToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_listen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.TellRegisterToServer)
}

::google::protobuf::uint8* TellRegisterToServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.TellRegisterToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_listen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.TellRegisterToServer)
  return target;
}

size_t TellRegisterToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.TellRegisterToServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listen_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TellRegisterToServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.TellRegisterToServer)
  GOOGLE_DCHECK_NE(&from, this);
  const TellRegisterToServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TellRegisterToServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.TellRegisterToServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.TellRegisterToServer)
    MergeFrom(*source);
  }
}

void TellRegisterToServer::MergeFrom(const TellRegisterToServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.TellRegisterToServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_listen()) {
    mutable_listen()->::KFMsg::ListenData::MergeFrom(from.listen());
  }
}

void TellRegisterToServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.TellRegisterToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TellRegisterToServer::CopyFrom(const TellRegisterToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.TellRegisterToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TellRegisterToServer::IsInitialized() const {
  return true;
}

void TellRegisterToServer::Swap(TellRegisterToServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TellRegisterToServer::InternalSwap(TellRegisterToServer* other) {
  using std::swap;
  swap(listen_, other->listen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TellRegisterToServer::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TellUnRegisterFromServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TellUnRegisterFromServer::kAppnameFieldNumber;
const int TellUnRegisterFromServer::kApptypeFieldNumber;
const int TellUnRegisterFromServer::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TellUnRegisterFromServer::TellUnRegisterFromServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_TellUnRegisterFromServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.TellUnRegisterFromServer)
}
TellUnRegisterFromServer::TellUnRegisterFromServer(const TellUnRegisterFromServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.TellUnRegisterFromServer)
}

void TellUnRegisterFromServer::SharedCtor() {
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = GOOGLE_ULONGLONG(0);
}

TellUnRegisterFromServer::~TellUnRegisterFromServer() {
  // @@protoc_insertion_point(destructor:KFMsg.TellUnRegisterFromServer)
  SharedDtor();
}

void TellUnRegisterFromServer::SharedDtor() {
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TellUnRegisterFromServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TellUnRegisterFromServer::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TellUnRegisterFromServer& TellUnRegisterFromServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_TellUnRegisterFromServer.base);
  return *internal_default_instance();
}


void TellUnRegisterFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.TellUnRegisterFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TellUnRegisterFromServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.TellUnRegisterFromServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes appname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes apptype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apptype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.TellUnRegisterFromServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.TellUnRegisterFromServer)
  return false;
#undef DO_
}

void TellUnRegisterFromServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.TellUnRegisterFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->appname(), output);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->apptype(), output);
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->appid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.TellUnRegisterFromServer)
}

::google::protobuf::uint8* TellUnRegisterFromServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.TellUnRegisterFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->appname(), target);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->apptype(), target);
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->appid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.TellUnRegisterFromServer)
  return target;
}

size_t TellUnRegisterFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.TellUnRegisterFromServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes appname = 1;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appname());
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->apptype());
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TellUnRegisterFromServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.TellUnRegisterFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const TellUnRegisterFromServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TellUnRegisterFromServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.TellUnRegisterFromServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.TellUnRegisterFromServer)
    MergeFrom(*source);
  }
}

void TellUnRegisterFromServer::MergeFrom(const TellUnRegisterFromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.TellUnRegisterFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
}

void TellUnRegisterFromServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.TellUnRegisterFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TellUnRegisterFromServer::CopyFrom(const TellUnRegisterFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.TellUnRegisterFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TellUnRegisterFromServer::IsInitialized() const {
  return true;
}

void TellUnRegisterFromServer::Swap(TellUnRegisterFromServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TellUnRegisterFromServer::InternalSwap(TellUnRegisterFromServer* other) {
  using std::swap;
  appname_.Swap(&other->appname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apptype_.Swap(&other->apptype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TellUnRegisterFromServer::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellDiscoverServerToMaster::InitAsDefaultInstance() {
  ::KFMsg::_S2STellDiscoverServerToMaster_default_instance_._instance.get_mutable()->listen_ = const_cast< ::KFMsg::ListenData*>(
      ::KFMsg::ListenData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellDiscoverServerToMaster::kServeridFieldNumber;
const int S2STellDiscoverServerToMaster::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellDiscoverServerToMaster::S2STellDiscoverServerToMaster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2STellDiscoverServerToMaster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellDiscoverServerToMaster)
}
S2STellDiscoverServerToMaster::S2STellDiscoverServerToMaster(const S2STellDiscoverServerToMaster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listen()) {
    listen_ = new ::KFMsg::ListenData(*from.listen_);
  } else {
    listen_ = NULL;
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellDiscoverServerToMaster)
}

void S2STellDiscoverServerToMaster::SharedCtor() {
  ::memset(&listen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&listen_)) + sizeof(serverid_));
}

S2STellDiscoverServerToMaster::~S2STellDiscoverServerToMaster() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellDiscoverServerToMaster)
  SharedDtor();
}

void S2STellDiscoverServerToMaster::SharedDtor() {
  if (this != internal_default_instance()) delete listen_;
}

void S2STellDiscoverServerToMaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellDiscoverServerToMaster::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellDiscoverServerToMaster& S2STellDiscoverServerToMaster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2STellDiscoverServerToMaster.base);
  return *internal_default_instance();
}


void S2STellDiscoverServerToMaster::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellDiscoverServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
  serverid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STellDiscoverServerToMaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellDiscoverServerToMaster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.ListenData listen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellDiscoverServerToMaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellDiscoverServerToMaster)
  return false;
#undef DO_
}

void S2STellDiscoverServerToMaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellDiscoverServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_listen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellDiscoverServerToMaster)
}

::google::protobuf::uint8* S2STellDiscoverServerToMaster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellDiscoverServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_listen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellDiscoverServerToMaster)
  return target;
}

size_t S2STellDiscoverServerToMaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellDiscoverServerToMaster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listen_);
  }

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellDiscoverServerToMaster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellDiscoverServerToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellDiscoverServerToMaster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellDiscoverServerToMaster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellDiscoverServerToMaster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellDiscoverServerToMaster)
    MergeFrom(*source);
  }
}

void S2STellDiscoverServerToMaster::MergeFrom(const S2STellDiscoverServerToMaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellDiscoverServerToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_listen()) {
    mutable_listen()->::KFMsg::ListenData::MergeFrom(from.listen());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2STellDiscoverServerToMaster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellDiscoverServerToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellDiscoverServerToMaster::CopyFrom(const S2STellDiscoverServerToMaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellDiscoverServerToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellDiscoverServerToMaster::IsInitialized() const {
  return true;
}

void S2STellDiscoverServerToMaster::Swap(S2STellDiscoverServerToMaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellDiscoverServerToMaster::InternalSwap(S2STellDiscoverServerToMaster* other) {
  using std::swap;
  swap(listen_, other->listen_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellDiscoverServerToMaster::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellLostServerToMaster::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellLostServerToMaster::kAppnameFieldNumber;
const int S2STellLostServerToMaster::kApptypeFieldNumber;
const int S2STellLostServerToMaster::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellLostServerToMaster::S2STellLostServerToMaster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2STellLostServerToMaster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellLostServerToMaster)
}
S2STellLostServerToMaster::S2STellLostServerToMaster(const S2STellLostServerToMaster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellLostServerToMaster)
}

void S2STellLostServerToMaster::SharedCtor() {
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = GOOGLE_ULONGLONG(0);
}

S2STellLostServerToMaster::~S2STellLostServerToMaster() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellLostServerToMaster)
  SharedDtor();
}

void S2STellLostServerToMaster::SharedDtor() {
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STellLostServerToMaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellLostServerToMaster::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellLostServerToMaster& S2STellLostServerToMaster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2STellLostServerToMaster.base);
  return *internal_default_instance();
}


void S2STellLostServerToMaster::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellLostServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STellLostServerToMaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellLostServerToMaster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes appname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes apptype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apptype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellLostServerToMaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellLostServerToMaster)
  return false;
#undef DO_
}

void S2STellLostServerToMaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellLostServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->appname(), output);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->apptype(), output);
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->appid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellLostServerToMaster)
}

::google::protobuf::uint8* S2STellLostServerToMaster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellLostServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->appname(), target);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->apptype(), target);
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->appid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellLostServerToMaster)
  return target;
}

size_t S2STellLostServerToMaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellLostServerToMaster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes appname = 1;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appname());
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->apptype());
  }

  // uint64 appid = 3;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellLostServerToMaster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellLostServerToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellLostServerToMaster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellLostServerToMaster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellLostServerToMaster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellLostServerToMaster)
    MergeFrom(*source);
  }
}

void S2STellLostServerToMaster::MergeFrom(const S2STellLostServerToMaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellLostServerToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
}

void S2STellLostServerToMaster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellLostServerToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellLostServerToMaster::CopyFrom(const S2STellLostServerToMaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellLostServerToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellLostServerToMaster::IsInitialized() const {
  return true;
}

void S2STellLostServerToMaster::Swap(S2STellLostServerToMaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellLostServerToMaster::InternalSwap(S2STellLostServerToMaster* other) {
  using std::swap;
  appname_.Swap(&other->appname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apptype_.Swap(&other->apptype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellLostServerToMaster::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellRegisterServerToMaster::InitAsDefaultInstance() {
  ::KFMsg::_S2STellRegisterServerToMaster_default_instance_._instance.get_mutable()->listen_ = const_cast< ::KFMsg::ListenData*>(
      ::KFMsg::ListenData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellRegisterServerToMaster::kServeridFieldNumber;
const int S2STellRegisterServerToMaster::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellRegisterServerToMaster::S2STellRegisterServerToMaster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2STellRegisterServerToMaster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellRegisterServerToMaster)
}
S2STellRegisterServerToMaster::S2STellRegisterServerToMaster(const S2STellRegisterServerToMaster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listen()) {
    listen_ = new ::KFMsg::ListenData(*from.listen_);
  } else {
    listen_ = NULL;
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellRegisterServerToMaster)
}

void S2STellRegisterServerToMaster::SharedCtor() {
  ::memset(&listen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&listen_)) + sizeof(serverid_));
}

S2STellRegisterServerToMaster::~S2STellRegisterServerToMaster() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellRegisterServerToMaster)
  SharedDtor();
}

void S2STellRegisterServerToMaster::SharedDtor() {
  if (this != internal_default_instance()) delete listen_;
}

void S2STellRegisterServerToMaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellRegisterServerToMaster::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellRegisterServerToMaster& S2STellRegisterServerToMaster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2STellRegisterServerToMaster.base);
  return *internal_default_instance();
}


void S2STellRegisterServerToMaster::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellRegisterServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
  serverid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STellRegisterServerToMaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellRegisterServerToMaster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.ListenData listen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellRegisterServerToMaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellRegisterServerToMaster)
  return false;
#undef DO_
}

void S2STellRegisterServerToMaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellRegisterServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_listen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellRegisterServerToMaster)
}

::google::protobuf::uint8* S2STellRegisterServerToMaster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellRegisterServerToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_listen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellRegisterServerToMaster)
  return target;
}

size_t S2STellRegisterServerToMaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellRegisterServerToMaster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listen_);
  }

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellRegisterServerToMaster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellRegisterServerToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellRegisterServerToMaster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellRegisterServerToMaster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellRegisterServerToMaster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellRegisterServerToMaster)
    MergeFrom(*source);
  }
}

void S2STellRegisterServerToMaster::MergeFrom(const S2STellRegisterServerToMaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellRegisterServerToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_listen()) {
    mutable_listen()->::KFMsg::ListenData::MergeFrom(from.listen());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2STellRegisterServerToMaster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellRegisterServerToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellRegisterServerToMaster::CopyFrom(const S2STellRegisterServerToMaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellRegisterServerToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellRegisterServerToMaster::IsInitialized() const {
  return true;
}

void S2STellRegisterServerToMaster::Swap(S2STellRegisterServerToMaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellRegisterServerToMaster::InternalSwap(S2STellRegisterServerToMaster* other) {
  using std::swap;
  swap(listen_, other->listen_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellRegisterServerToMaster::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellServerListToMaster::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellServerListToMaster::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellServerListToMaster::S2STellServerListToMaster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2STellServerListToMaster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellServerListToMaster)
}
S2STellServerListToMaster::S2STellServerListToMaster(const S2STellServerListToMaster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      listen_(from.listen_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellServerListToMaster)
}

void S2STellServerListToMaster::SharedCtor() {
}

S2STellServerListToMaster::~S2STellServerListToMaster() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellServerListToMaster)
  SharedDtor();
}

void S2STellServerListToMaster::SharedDtor() {
}

void S2STellServerListToMaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellServerListToMaster::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellServerListToMaster& S2STellServerListToMaster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2STellServerListToMaster.base);
  return *internal_default_instance();
}


void S2STellServerListToMaster::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellServerListToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listen_.Clear();
  _internal_metadata_.Clear();
}

bool S2STellServerListToMaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellServerListToMaster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.ListenData listen = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellServerListToMaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellServerListToMaster)
  return false;
#undef DO_
}

void S2STellServerListToMaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellServerListToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.ListenData listen = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listen_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->listen(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellServerListToMaster)
}

::google::protobuf::uint8* S2STellServerListToMaster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellServerListToMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.ListenData listen = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listen_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->listen(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellServerListToMaster)
  return target;
}

size_t S2STellServerListToMaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellServerListToMaster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.ListenData listen = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->listen_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->listen(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellServerListToMaster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellServerListToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellServerListToMaster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellServerListToMaster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellServerListToMaster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellServerListToMaster)
    MergeFrom(*source);
  }
}

void S2STellServerListToMaster::MergeFrom(const S2STellServerListToMaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellServerListToMaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listen_.MergeFrom(from.listen_);
}

void S2STellServerListToMaster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellServerListToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellServerListToMaster::CopyFrom(const S2STellServerListToMaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellServerListToMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellServerListToMaster::IsInitialized() const {
  return true;
}

void S2STellServerListToMaster::Swap(S2STellServerListToMaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellServerListToMaster::InternalSwap(S2STellServerListToMaster* other) {
  using std::swap;
  CastToBase(&listen_)->InternalSwap(CastToBase(&other->listen_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellServerListToMaster::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterRegisterToMasterReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SClusterRegisterToMasterReq_default_instance_._instance.get_mutable()->listen_ = const_cast< ::KFMsg::ListenData*>(
      ::KFMsg::ListenData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterRegisterToMasterReq::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterRegisterToMasterReq::S2SClusterRegisterToMasterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterRegisterToMasterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterRegisterToMasterReq)
}
S2SClusterRegisterToMasterReq::S2SClusterRegisterToMasterReq(const S2SClusterRegisterToMasterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listen()) {
    listen_ = new ::KFMsg::ListenData(*from.listen_);
  } else {
    listen_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterRegisterToMasterReq)
}

void S2SClusterRegisterToMasterReq::SharedCtor() {
  listen_ = NULL;
}

S2SClusterRegisterToMasterReq::~S2SClusterRegisterToMasterReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterRegisterToMasterReq)
  SharedDtor();
}

void S2SClusterRegisterToMasterReq::SharedDtor() {
  if (this != internal_default_instance()) delete listen_;
}

void S2SClusterRegisterToMasterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterRegisterToMasterReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterRegisterToMasterReq& S2SClusterRegisterToMasterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterRegisterToMasterReq.base);
  return *internal_default_instance();
}


void S2SClusterRegisterToMasterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterRegisterToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SClusterRegisterToMasterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterRegisterToMasterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.ListenData listen = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterRegisterToMasterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterRegisterToMasterReq)
  return false;
#undef DO_
}

void S2SClusterRegisterToMasterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterRegisterToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_listen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterRegisterToMasterReq)
}

::google::protobuf::uint8* S2SClusterRegisterToMasterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterRegisterToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_listen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterRegisterToMasterReq)
  return target;
}

size_t S2SClusterRegisterToMasterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterRegisterToMasterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.ListenData listen = 1;
  if (this->has_listen()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listen_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterRegisterToMasterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterRegisterToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterRegisterToMasterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterRegisterToMasterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterRegisterToMasterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterRegisterToMasterReq)
    MergeFrom(*source);
  }
}

void S2SClusterRegisterToMasterReq::MergeFrom(const S2SClusterRegisterToMasterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterRegisterToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_listen()) {
    mutable_listen()->::KFMsg::ListenData::MergeFrom(from.listen());
  }
}

void S2SClusterRegisterToMasterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterRegisterToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterRegisterToMasterReq::CopyFrom(const S2SClusterRegisterToMasterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterRegisterToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterRegisterToMasterReq::IsInitialized() const {
  return true;
}

void S2SClusterRegisterToMasterReq::Swap(S2SClusterRegisterToMasterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterRegisterToMasterReq::InternalSwap(S2SClusterRegisterToMasterReq* other) {
  using std::swap;
  swap(listen_, other->listen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterRegisterToMasterReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterSyncProxyToMasterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterSyncProxyToMasterReq::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterSyncProxyToMasterReq::S2SClusterSyncProxyToMasterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterSyncProxyToMasterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterSyncProxyToMasterReq)
}
S2SClusterSyncProxyToMasterReq::S2SClusterSyncProxyToMasterReq(const S2SClusterSyncProxyToMasterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      listen_(from.listen_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterSyncProxyToMasterReq)
}

void S2SClusterSyncProxyToMasterReq::SharedCtor() {
}

S2SClusterSyncProxyToMasterReq::~S2SClusterSyncProxyToMasterReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterSyncProxyToMasterReq)
  SharedDtor();
}

void S2SClusterSyncProxyToMasterReq::SharedDtor() {
}

void S2SClusterSyncProxyToMasterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterSyncProxyToMasterReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterSyncProxyToMasterReq& S2SClusterSyncProxyToMasterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterSyncProxyToMasterReq.base);
  return *internal_default_instance();
}


void S2SClusterSyncProxyToMasterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listen_.Clear();
  _internal_metadata_.Clear();
}

bool S2SClusterSyncProxyToMasterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.ListenData listen = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterSyncProxyToMasterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterSyncProxyToMasterReq)
  return false;
#undef DO_
}

void S2SClusterSyncProxyToMasterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.ListenData listen = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listen_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->listen(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterSyncProxyToMasterReq)
}

::google::protobuf::uint8* S2SClusterSyncProxyToMasterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.ListenData listen = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listen_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->listen(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterSyncProxyToMasterReq)
  return target;
}

size_t S2SClusterSyncProxyToMasterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.ListenData listen = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->listen_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->listen(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterSyncProxyToMasterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterSyncProxyToMasterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterSyncProxyToMasterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterSyncProxyToMasterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterSyncProxyToMasterReq)
    MergeFrom(*source);
  }
}

void S2SClusterSyncProxyToMasterReq::MergeFrom(const S2SClusterSyncProxyToMasterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listen_.MergeFrom(from.listen_);
}

void S2SClusterSyncProxyToMasterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterSyncProxyToMasterReq::CopyFrom(const S2SClusterSyncProxyToMasterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterSyncProxyToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterSyncProxyToMasterReq::IsInitialized() const {
  return true;
}

void S2SClusterSyncProxyToMasterReq::Swap(S2SClusterSyncProxyToMasterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterSyncProxyToMasterReq::InternalSwap(S2SClusterSyncProxyToMasterReq* other) {
  using std::swap;
  CastToBase(&listen_)->InternalSwap(CastToBase(&other->listen_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterSyncProxyToMasterReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterAuthToMasterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterAuthToMasterReq::kClientidFieldNumber;
const int S2SClusterAuthToMasterReq::kClusterkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterAuthToMasterReq::S2SClusterAuthToMasterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterAuthToMasterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterAuthToMasterReq)
}
S2SClusterAuthToMasterReq::S2SClusterAuthToMasterReq(const S2SClusterAuthToMasterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clusterkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clusterkey().size() > 0) {
    clusterkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clusterkey_);
  }
  clientid_ = from.clientid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterAuthToMasterReq)
}

void S2SClusterAuthToMasterReq::SharedCtor() {
  clusterkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = GOOGLE_ULONGLONG(0);
}

S2SClusterAuthToMasterReq::~S2SClusterAuthToMasterReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterAuthToMasterReq)
  SharedDtor();
}

void S2SClusterAuthToMasterReq::SharedDtor() {
  clusterkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SClusterAuthToMasterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterAuthToMasterReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterAuthToMasterReq& S2SClusterAuthToMasterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterAuthToMasterReq.base);
  return *internal_default_instance();
}


void S2SClusterAuthToMasterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterAuthToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusterkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SClusterAuthToMasterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterAuthToMasterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 clientid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes clusterkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_clusterkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterAuthToMasterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterAuthToMasterReq)
  return false;
#undef DO_
}

void S2SClusterAuthToMasterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterAuthToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 clientid = 1;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->clientid(), output);
  }

  // bytes clusterkey = 2;
  if (this->clusterkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->clusterkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterAuthToMasterReq)
}

::google::protobuf::uint8* S2SClusterAuthToMasterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterAuthToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 clientid = 1;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->clientid(), target);
  }

  // bytes clusterkey = 2;
  if (this->clusterkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->clusterkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterAuthToMasterReq)
  return target;
}

size_t S2SClusterAuthToMasterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterAuthToMasterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes clusterkey = 2;
  if (this->clusterkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->clusterkey());
  }

  // uint64 clientid = 1;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterAuthToMasterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterAuthToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterAuthToMasterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterAuthToMasterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterAuthToMasterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterAuthToMasterReq)
    MergeFrom(*source);
  }
}

void S2SClusterAuthToMasterReq::MergeFrom(const S2SClusterAuthToMasterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterAuthToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clusterkey().size() > 0) {

    clusterkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clusterkey_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
}

void S2SClusterAuthToMasterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterAuthToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterAuthToMasterReq::CopyFrom(const S2SClusterAuthToMasterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterAuthToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterAuthToMasterReq::IsInitialized() const {
  return true;
}

void S2SClusterAuthToMasterReq::Swap(S2SClusterAuthToMasterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterAuthToMasterReq::InternalSwap(S2SClusterAuthToMasterReq* other) {
  using std::swap;
  clusterkey_.Swap(&other->clusterkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterAuthToMasterReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterAuthToClientAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SClusterAuthToClientAck_default_instance_._instance.get_mutable()->listen_ = const_cast< ::KFMsg::ListenData*>(
      ::KFMsg::ListenData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterAuthToClientAck::kTokenFieldNumber;
const int S2SClusterAuthToClientAck::kListenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterAuthToClientAck::S2SClusterAuthToClientAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterAuthToClientAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterAuthToClientAck)
}
S2SClusterAuthToClientAck::S2SClusterAuthToClientAck(const S2SClusterAuthToClientAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_listen()) {
    listen_ = new ::KFMsg::ListenData(*from.listen_);
  } else {
    listen_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterAuthToClientAck)
}

void S2SClusterAuthToClientAck::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_ = NULL;
}

S2SClusterAuthToClientAck::~S2SClusterAuthToClientAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterAuthToClientAck)
  SharedDtor();
}

void S2SClusterAuthToClientAck::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete listen_;
}

void S2SClusterAuthToClientAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterAuthToClientAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterAuthToClientAck& S2SClusterAuthToClientAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterAuthToClientAck.base);
  return *internal_default_instance();
}


void S2SClusterAuthToClientAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterAuthToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SClusterAuthToClientAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterAuthToClientAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.ListenData listen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterAuthToClientAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterAuthToClientAck)
  return false;
#undef DO_
}

void S2SClusterAuthToClientAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterAuthToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_listen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterAuthToClientAck)
}

::google::protobuf::uint8* S2SClusterAuthToClientAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterAuthToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_listen(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterAuthToClientAck)
  return target;
}

size_t S2SClusterAuthToClientAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterAuthToClientAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // .KFMsg.ListenData listen = 2;
  if (this->has_listen()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listen_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterAuthToClientAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterAuthToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterAuthToClientAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterAuthToClientAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterAuthToClientAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterAuthToClientAck)
    MergeFrom(*source);
  }
}

void S2SClusterAuthToClientAck::MergeFrom(const S2SClusterAuthToClientAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterAuthToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_listen()) {
    mutable_listen()->::KFMsg::ListenData::MergeFrom(from.listen());
  }
}

void S2SClusterAuthToClientAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterAuthToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterAuthToClientAck::CopyFrom(const S2SClusterAuthToClientAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterAuthToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterAuthToClientAck::IsInitialized() const {
  return true;
}

void S2SClusterAuthToClientAck::Swap(S2SClusterAuthToClientAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterAuthToClientAck::InternalSwap(S2SClusterAuthToClientAck* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(listen_, other->listen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterAuthToClientAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterTokenToProxyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterTokenToProxyReq::kTokenFieldNumber;
const int S2SClusterTokenToProxyReq::kClientidFieldNumber;
const int S2SClusterTokenToProxyReq::kProxyidFieldNumber;
const int S2SClusterTokenToProxyReq::kMasteridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterTokenToProxyReq::S2SClusterTokenToProxyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToProxyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterTokenToProxyReq)
}
S2SClusterTokenToProxyReq::S2SClusterTokenToProxyReq(const S2SClusterTokenToProxyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&masterid_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterTokenToProxyReq)
}

void S2SClusterTokenToProxyReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&masterid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
}

S2SClusterTokenToProxyReq::~S2SClusterTokenToProxyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterTokenToProxyReq)
  SharedDtor();
}

void S2SClusterTokenToProxyReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SClusterTokenToProxyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterTokenToProxyReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterTokenToProxyReq& S2SClusterTokenToProxyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToProxyReq.base);
  return *internal_default_instance();
}


void S2SClusterTokenToProxyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterTokenToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&masterid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
  _internal_metadata_.Clear();
}

bool S2SClusterTokenToProxyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterTokenToProxyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 proxyid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proxyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 masterid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterTokenToProxyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterTokenToProxyReq)
  return false;
#undef DO_
}

void S2SClusterTokenToProxyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterTokenToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->proxyid(), output);
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->masterid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterTokenToProxyReq)
}

::google::protobuf::uint8* S2SClusterTokenToProxyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterTokenToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->proxyid(), target);
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->masterid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterTokenToProxyReq)
  return target;
}

size_t S2SClusterTokenToProxyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterTokenToProxyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proxyid());
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterTokenToProxyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterTokenToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterTokenToProxyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterTokenToProxyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterTokenToProxyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterTokenToProxyReq)
    MergeFrom(*source);
  }
}

void S2SClusterTokenToProxyReq::MergeFrom(const S2SClusterTokenToProxyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterTokenToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.proxyid() != 0) {
    set_proxyid(from.proxyid());
  }
  if (from.masterid() != 0) {
    set_masterid(from.masterid());
  }
}

void S2SClusterTokenToProxyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterTokenToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterTokenToProxyReq::CopyFrom(const S2SClusterTokenToProxyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterTokenToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterTokenToProxyReq::IsInitialized() const {
  return true;
}

void S2SClusterTokenToProxyReq::Swap(S2SClusterTokenToProxyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterTokenToProxyReq::InternalSwap(S2SClusterTokenToProxyReq* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(proxyid_, other->proxyid_);
  swap(masterid_, other->masterid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterTokenToProxyReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterTokenToMasterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterTokenToMasterReq::kTokenFieldNumber;
const int S2SClusterTokenToMasterReq::kClientidFieldNumber;
const int S2SClusterTokenToMasterReq::kProxyidFieldNumber;
const int S2SClusterTokenToMasterReq::kMasteridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterTokenToMasterReq::S2SClusterTokenToMasterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToMasterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterTokenToMasterReq)
}
S2SClusterTokenToMasterReq::S2SClusterTokenToMasterReq(const S2SClusterTokenToMasterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&masterid_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterTokenToMasterReq)
}

void S2SClusterTokenToMasterReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&masterid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
}

S2SClusterTokenToMasterReq::~S2SClusterTokenToMasterReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterTokenToMasterReq)
  SharedDtor();
}

void S2SClusterTokenToMasterReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SClusterTokenToMasterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterTokenToMasterReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterTokenToMasterReq& S2SClusterTokenToMasterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToMasterReq.base);
  return *internal_default_instance();
}


void S2SClusterTokenToMasterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterTokenToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&masterid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
  _internal_metadata_.Clear();
}

bool S2SClusterTokenToMasterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterTokenToMasterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 proxyid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proxyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 masterid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterTokenToMasterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterTokenToMasterReq)
  return false;
#undef DO_
}

void S2SClusterTokenToMasterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterTokenToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->proxyid(), output);
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->masterid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterTokenToMasterReq)
}

::google::protobuf::uint8* S2SClusterTokenToMasterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterTokenToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->proxyid(), target);
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->masterid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterTokenToMasterReq)
  return target;
}

size_t S2SClusterTokenToMasterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterTokenToMasterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proxyid());
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterTokenToMasterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterTokenToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterTokenToMasterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterTokenToMasterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterTokenToMasterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterTokenToMasterReq)
    MergeFrom(*source);
  }
}

void S2SClusterTokenToMasterReq::MergeFrom(const S2SClusterTokenToMasterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterTokenToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.proxyid() != 0) {
    set_proxyid(from.proxyid());
  }
  if (from.masterid() != 0) {
    set_masterid(from.masterid());
  }
}

void S2SClusterTokenToMasterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterTokenToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterTokenToMasterReq::CopyFrom(const S2SClusterTokenToMasterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterTokenToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterTokenToMasterReq::IsInitialized() const {
  return true;
}

void S2SClusterTokenToMasterReq::Swap(S2SClusterTokenToMasterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterTokenToMasterReq::InternalSwap(S2SClusterTokenToMasterReq* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(proxyid_, other->proxyid_);
  swap(masterid_, other->masterid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterTokenToMasterReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterVerifyToProxyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterVerifyToProxyReq::kTokenFieldNumber;
const int S2SClusterVerifyToProxyReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterVerifyToProxyReq::S2SClusterVerifyToProxyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterVerifyToProxyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterVerifyToProxyReq)
}
S2SClusterVerifyToProxyReq::S2SClusterVerifyToProxyReq(const S2SClusterVerifyToProxyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterVerifyToProxyReq)
}

void S2SClusterVerifyToProxyReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = GOOGLE_ULONGLONG(0);
}

S2SClusterVerifyToProxyReq::~S2SClusterVerifyToProxyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterVerifyToProxyReq)
  SharedDtor();
}

void S2SClusterVerifyToProxyReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SClusterVerifyToProxyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterVerifyToProxyReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterVerifyToProxyReq& S2SClusterVerifyToProxyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterVerifyToProxyReq.base);
  return *internal_default_instance();
}


void S2SClusterVerifyToProxyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterVerifyToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SClusterVerifyToProxyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterVerifyToProxyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterVerifyToProxyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterVerifyToProxyReq)
  return false;
#undef DO_
}

void S2SClusterVerifyToProxyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterVerifyToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterVerifyToProxyReq)
}

::google::protobuf::uint8* S2SClusterVerifyToProxyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterVerifyToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterVerifyToProxyReq)
  return target;
}

size_t S2SClusterVerifyToProxyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterVerifyToProxyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterVerifyToProxyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterVerifyToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterVerifyToProxyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterVerifyToProxyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterVerifyToProxyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterVerifyToProxyReq)
    MergeFrom(*source);
  }
}

void S2SClusterVerifyToProxyReq::MergeFrom(const S2SClusterVerifyToProxyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterVerifyToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SClusterVerifyToProxyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterVerifyToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterVerifyToProxyReq::CopyFrom(const S2SClusterVerifyToProxyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterVerifyToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterVerifyToProxyReq::IsInitialized() const {
  return true;
}

void S2SClusterVerifyToProxyReq::Swap(S2SClusterVerifyToProxyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterVerifyToProxyReq::InternalSwap(S2SClusterVerifyToProxyReq* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterVerifyToProxyReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterTokenToProxyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterTokenToProxyAck::kTokenFieldNumber;
const int S2SClusterTokenToProxyAck::kClientidFieldNumber;
const int S2SClusterTokenToProxyAck::kProxyidFieldNumber;
const int S2SClusterTokenToProxyAck::kMasteridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterTokenToProxyAck::S2SClusterTokenToProxyAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToProxyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterTokenToProxyAck)
}
S2SClusterTokenToProxyAck::S2SClusterTokenToProxyAck(const S2SClusterTokenToProxyAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&masterid_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterTokenToProxyAck)
}

void S2SClusterTokenToProxyAck::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&masterid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
}

S2SClusterTokenToProxyAck::~S2SClusterTokenToProxyAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterTokenToProxyAck)
  SharedDtor();
}

void S2SClusterTokenToProxyAck::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SClusterTokenToProxyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterTokenToProxyAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterTokenToProxyAck& S2SClusterTokenToProxyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToProxyAck.base);
  return *internal_default_instance();
}


void S2SClusterTokenToProxyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterTokenToProxyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&masterid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(masterid_));
  _internal_metadata_.Clear();
}

bool S2SClusterTokenToProxyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterTokenToProxyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 proxyid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proxyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 masterid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterTokenToProxyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterTokenToProxyAck)
  return false;
#undef DO_
}

void S2SClusterTokenToProxyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterTokenToProxyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->proxyid(), output);
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->masterid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterTokenToProxyAck)
}

::google::protobuf::uint8* S2SClusterTokenToProxyAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterTokenToProxyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->proxyid(), target);
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->masterid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterTokenToProxyAck)
  return target;
}

size_t S2SClusterTokenToProxyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterTokenToProxyAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proxyid());
  }

  // uint64 masterid = 4;
  if (this->masterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterTokenToProxyAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterTokenToProxyAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterTokenToProxyAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterTokenToProxyAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterTokenToProxyAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterTokenToProxyAck)
    MergeFrom(*source);
  }
}

void S2SClusterTokenToProxyAck::MergeFrom(const S2SClusterTokenToProxyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterTokenToProxyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.proxyid() != 0) {
    set_proxyid(from.proxyid());
  }
  if (from.masterid() != 0) {
    set_masterid(from.masterid());
  }
}

void S2SClusterTokenToProxyAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterTokenToProxyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterTokenToProxyAck::CopyFrom(const S2SClusterTokenToProxyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterTokenToProxyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterTokenToProxyAck::IsInitialized() const {
  return true;
}

void S2SClusterTokenToProxyAck::Swap(S2SClusterTokenToProxyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterTokenToProxyAck::InternalSwap(S2SClusterTokenToProxyAck* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(proxyid_, other->proxyid_);
  swap(masterid_, other->masterid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterTokenToProxyAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterTokenToMasterAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterTokenToMasterAck::kTokenFieldNumber;
const int S2SClusterTokenToMasterAck::kClientidFieldNumber;
const int S2SClusterTokenToMasterAck::kProxyidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterTokenToMasterAck::S2SClusterTokenToMasterAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToMasterAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterTokenToMasterAck)
}
S2SClusterTokenToMasterAck::S2SClusterTokenToMasterAck(const S2SClusterTokenToMasterAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&proxyid_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(proxyid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterTokenToMasterAck)
}

void S2SClusterTokenToMasterAck::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proxyid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(proxyid_));
}

S2SClusterTokenToMasterAck::~S2SClusterTokenToMasterAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterTokenToMasterAck)
  SharedDtor();
}

void S2SClusterTokenToMasterAck::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SClusterTokenToMasterAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterTokenToMasterAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterTokenToMasterAck& S2SClusterTokenToMasterAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterTokenToMasterAck.base);
  return *internal_default_instance();
}


void S2SClusterTokenToMasterAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterTokenToMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proxyid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(proxyid_));
  _internal_metadata_.Clear();
}

bool S2SClusterTokenToMasterAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterTokenToMasterAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 proxyid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proxyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterTokenToMasterAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterTokenToMasterAck)
  return false;
#undef DO_
}

void S2SClusterTokenToMasterAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterTokenToMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->proxyid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterTokenToMasterAck)
}

::google::protobuf::uint8* S2SClusterTokenToMasterAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterTokenToMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->proxyid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterTokenToMasterAck)
  return target;
}

size_t S2SClusterTokenToMasterAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterTokenToMasterAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 proxyid = 3;
  if (this->proxyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proxyid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterTokenToMasterAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterTokenToMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterTokenToMasterAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterTokenToMasterAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterTokenToMasterAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterTokenToMasterAck)
    MergeFrom(*source);
  }
}

void S2SClusterTokenToMasterAck::MergeFrom(const S2SClusterTokenToMasterAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterTokenToMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.proxyid() != 0) {
    set_proxyid(from.proxyid());
  }
}

void S2SClusterTokenToMasterAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterTokenToMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterTokenToMasterAck::CopyFrom(const S2SClusterTokenToMasterAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterTokenToMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterTokenToMasterAck::IsInitialized() const {
  return true;
}

void S2SClusterTokenToMasterAck::Swap(S2SClusterTokenToMasterAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterTokenToMasterAck::InternalSwap(S2SClusterTokenToMasterAck* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(proxyid_, other->proxyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterTokenToMasterAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterVerifyToClientAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterVerifyToClientAck::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterVerifyToClientAck::S2SClusterVerifyToClientAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterVerifyToClientAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterVerifyToClientAck)
}
S2SClusterVerifyToClientAck::S2SClusterVerifyToClientAck(const S2SClusterVerifyToClientAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterVerifyToClientAck)
}

void S2SClusterVerifyToClientAck::SharedCtor() {
  serverid_ = GOOGLE_ULONGLONG(0);
}

S2SClusterVerifyToClientAck::~S2SClusterVerifyToClientAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterVerifyToClientAck)
  SharedDtor();
}

void S2SClusterVerifyToClientAck::SharedDtor() {
}

void S2SClusterVerifyToClientAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterVerifyToClientAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterVerifyToClientAck& S2SClusterVerifyToClientAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterVerifyToClientAck.base);
  return *internal_default_instance();
}


void S2SClusterVerifyToClientAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterVerifyToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serverid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SClusterVerifyToClientAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterVerifyToClientAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterVerifyToClientAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterVerifyToClientAck)
  return false;
#undef DO_
}

void S2SClusterVerifyToClientAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterVerifyToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterVerifyToClientAck)
}

::google::protobuf::uint8* S2SClusterVerifyToClientAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterVerifyToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterVerifyToClientAck)
  return target;
}

size_t S2SClusterVerifyToClientAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterVerifyToClientAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterVerifyToClientAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterVerifyToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterVerifyToClientAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterVerifyToClientAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterVerifyToClientAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterVerifyToClientAck)
    MergeFrom(*source);
  }
}

void S2SClusterVerifyToClientAck::MergeFrom(const S2SClusterVerifyToClientAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterVerifyToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SClusterVerifyToClientAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterVerifyToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterVerifyToClientAck::CopyFrom(const S2SClusterVerifyToClientAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterVerifyToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterVerifyToClientAck::IsInitialized() const {
  return true;
}

void S2SClusterVerifyToClientAck::Swap(S2SClusterVerifyToClientAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterVerifyToClientAck::InternalSwap(S2SClusterVerifyToClientAck* other) {
  using std::swap;
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterVerifyToClientAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterClientDiscoverToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterClientDiscoverToShardReq::kClientidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterClientDiscoverToShardReq::S2SClusterClientDiscoverToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterClientDiscoverToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterClientDiscoverToShardReq)
}
S2SClusterClientDiscoverToShardReq::S2SClusterClientDiscoverToShardReq(const S2SClusterClientDiscoverToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clientid_(from.clientid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterClientDiscoverToShardReq)
}

void S2SClusterClientDiscoverToShardReq::SharedCtor() {
}

S2SClusterClientDiscoverToShardReq::~S2SClusterClientDiscoverToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterClientDiscoverToShardReq)
  SharedDtor();
}

void S2SClusterClientDiscoverToShardReq::SharedDtor() {
}

void S2SClusterClientDiscoverToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterClientDiscoverToShardReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterClientDiscoverToShardReq& S2SClusterClientDiscoverToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterClientDiscoverToShardReq.base);
  return *internal_default_instance();
}


void S2SClusterClientDiscoverToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientid_.Clear();
  _internal_metadata_.Clear();
}

bool S2SClusterClientDiscoverToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 clientid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_clientid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_clientid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterClientDiscoverToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterClientDiscoverToShardReq)
  return false;
#undef DO_
}

void S2SClusterClientDiscoverToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 clientid = 1;
  if (this->clientid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _clientid_cached_byte_size_));
  }
  for (int i = 0, n = this->clientid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->clientid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterClientDiscoverToShardReq)
}

::google::protobuf::uint8* S2SClusterClientDiscoverToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 clientid = 1;
  if (this->clientid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _clientid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->clientid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterClientDiscoverToShardReq)
  return target;
}

size_t S2SClusterClientDiscoverToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 clientid = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->clientid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _clientid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterClientDiscoverToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterClientDiscoverToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterClientDiscoverToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterClientDiscoverToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterClientDiscoverToShardReq)
    MergeFrom(*source);
  }
}

void S2SClusterClientDiscoverToShardReq::MergeFrom(const S2SClusterClientDiscoverToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clientid_.MergeFrom(from.clientid_);
}

void S2SClusterClientDiscoverToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterClientDiscoverToShardReq::CopyFrom(const S2SClusterClientDiscoverToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterClientDiscoverToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterClientDiscoverToShardReq::IsInitialized() const {
  return true;
}

void S2SClusterClientDiscoverToShardReq::Swap(S2SClusterClientDiscoverToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterClientDiscoverToShardReq::InternalSwap(S2SClusterClientDiscoverToShardReq* other) {
  using std::swap;
  clientid_.InternalSwap(&other->clientid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterClientDiscoverToShardReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterClientLostToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterClientLostToShardReq::kClientidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterClientLostToShardReq::S2SClusterClientLostToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterClientLostToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterClientLostToShardReq)
}
S2SClusterClientLostToShardReq::S2SClusterClientLostToShardReq(const S2SClusterClientLostToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientid_ = from.clientid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterClientLostToShardReq)
}

void S2SClusterClientLostToShardReq::SharedCtor() {
  clientid_ = GOOGLE_ULONGLONG(0);
}

S2SClusterClientLostToShardReq::~S2SClusterClientLostToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterClientLostToShardReq)
  SharedDtor();
}

void S2SClusterClientLostToShardReq::SharedDtor() {
}

void S2SClusterClientLostToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterClientLostToShardReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterClientLostToShardReq& S2SClusterClientLostToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterClientLostToShardReq.base);
  return *internal_default_instance();
}


void S2SClusterClientLostToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterClientLostToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SClusterClientLostToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterClientLostToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 clientid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterClientLostToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterClientLostToShardReq)
  return false;
#undef DO_
}

void S2SClusterClientLostToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterClientLostToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 clientid = 1;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->clientid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterClientLostToShardReq)
}

::google::protobuf::uint8* S2SClusterClientLostToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterClientLostToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 clientid = 1;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->clientid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterClientLostToShardReq)
  return target;
}

size_t S2SClusterClientLostToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterClientLostToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 clientid = 1;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterClientLostToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterClientLostToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterClientLostToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterClientLostToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterClientLostToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterClientLostToShardReq)
    MergeFrom(*source);
  }
}

void S2SClusterClientLostToShardReq::MergeFrom(const S2SClusterClientLostToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterClientLostToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
}

void S2SClusterClientLostToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterClientLostToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterClientLostToShardReq::CopyFrom(const S2SClusterClientLostToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterClientLostToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterClientLostToShardReq::IsInitialized() const {
  return true;
}

void S2SClusterClientLostToShardReq::Swap(S2SClusterClientLostToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterClientLostToShardReq::InternalSwap(S2SClusterClientLostToShardReq* other) {
  using std::swap;
  swap(clientid_, other->clientid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterClientLostToShardReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClusterLostProxyToMasterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClusterLostProxyToMasterReq::kProxyidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClusterLostProxyToMasterReq::S2SClusterLostProxyToMasterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SClusterLostProxyToMasterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClusterLostProxyToMasterReq)
}
S2SClusterLostProxyToMasterReq::S2SClusterLostProxyToMasterReq(const S2SClusterLostProxyToMasterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  proxyid_ = from.proxyid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClusterLostProxyToMasterReq)
}

void S2SClusterLostProxyToMasterReq::SharedCtor() {
  proxyid_ = GOOGLE_ULONGLONG(0);
}

S2SClusterLostProxyToMasterReq::~S2SClusterLostProxyToMasterReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClusterLostProxyToMasterReq)
  SharedDtor();
}

void S2SClusterLostProxyToMasterReq::SharedDtor() {
}

void S2SClusterLostProxyToMasterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClusterLostProxyToMasterReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClusterLostProxyToMasterReq& S2SClusterLostProxyToMasterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SClusterLostProxyToMasterReq.base);
  return *internal_default_instance();
}


void S2SClusterLostProxyToMasterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClusterLostProxyToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proxyid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SClusterLostProxyToMasterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClusterLostProxyToMasterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 proxyid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proxyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClusterLostProxyToMasterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClusterLostProxyToMasterReq)
  return false;
#undef DO_
}

void S2SClusterLostProxyToMasterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClusterLostProxyToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proxyid = 1;
  if (this->proxyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->proxyid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClusterLostProxyToMasterReq)
}

::google::protobuf::uint8* S2SClusterLostProxyToMasterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClusterLostProxyToMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 proxyid = 1;
  if (this->proxyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->proxyid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClusterLostProxyToMasterReq)
  return target;
}

size_t S2SClusterLostProxyToMasterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClusterLostProxyToMasterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 proxyid = 1;
  if (this->proxyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->proxyid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClusterLostProxyToMasterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClusterLostProxyToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClusterLostProxyToMasterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClusterLostProxyToMasterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClusterLostProxyToMasterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClusterLostProxyToMasterReq)
    MergeFrom(*source);
  }
}

void S2SClusterLostProxyToMasterReq::MergeFrom(const S2SClusterLostProxyToMasterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClusterLostProxyToMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.proxyid() != 0) {
    set_proxyid(from.proxyid());
  }
}

void S2SClusterLostProxyToMasterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClusterLostProxyToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClusterLostProxyToMasterReq::CopyFrom(const S2SClusterLostProxyToMasterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClusterLostProxyToMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClusterLostProxyToMasterReq::IsInitialized() const {
  return true;
}

void S2SClusterLostProxyToMasterReq::Swap(S2SClusterLostProxyToMasterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClusterLostProxyToMasterReq::InternalSwap(S2SClusterLostProxyToMasterReq* other) {
  using std::swap;
  swap(proxyid_, other->proxyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClusterLostProxyToMasterReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBRoute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRoute::kServeridFieldNumber;
const int PBRoute::kSendidFieldNumber;
const int PBRoute::kRecvidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRoute::PBRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_PBRoute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRoute)
}
PBRoute::PBRoute(const PBRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&recvid_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(recvid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRoute)
}

void PBRoute::SharedCtor() {
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recvid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(recvid_));
}

PBRoute::~PBRoute() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRoute)
  SharedDtor();
}

void PBRoute::SharedDtor() {
}

void PBRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRoute::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRoute& PBRoute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_PBRoute.base);
  return *internal_default_instance();
}


void PBRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recvid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(recvid_));
  _internal_metadata_.Clear();
}

bool PBRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRoute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sendid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 recvid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &recvid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRoute)
  return false;
#undef DO_
}

void PBRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // uint64 sendid = 2;
  if (this->sendid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sendid(), output);
  }

  // uint64 recvid = 3;
  if (this->recvid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->recvid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRoute)
}

::google::protobuf::uint8* PBRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // uint64 sendid = 2;
  if (this->sendid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sendid(), target);
  }

  // uint64 recvid = 3;
  if (this->recvid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->recvid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRoute)
  return target;
}

size_t PBRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRoute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 sendid = 2;
  if (this->sendid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sendid());
  }

  // uint64 recvid = 3;
  if (this->recvid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->recvid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRoute)
    MergeFrom(*source);
  }
}

void PBRoute::MergeFrom(const PBRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.sendid() != 0) {
    set_sendid(from.sendid());
  }
  if (from.recvid() != 0) {
    set_recvid(from.recvid());
  }
}

void PBRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRoute::CopyFrom(const PBRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRoute::IsInitialized() const {
  return true;
}

void PBRoute::Swap(PBRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRoute::InternalSwap(PBRoute* other) {
  using std::swap;
  swap(serverid_, other->serverid_);
  swap(sendid_, other->sendid_);
  swap(recvid_, other->recvid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRoute::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteMessageToClientAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SRouteMessageToClientAck_default_instance_._instance.get_mutable()->pbroute_ = const_cast< ::KFMsg::PBRoute*>(
      ::KFMsg::PBRoute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteMessageToClientAck::kPbrouteFieldNumber;
const int S2SRouteMessageToClientAck::kMsgidFieldNumber;
const int S2SRouteMessageToClientAck::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteMessageToClientAck::S2SRouteMessageToClientAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToClientAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteMessageToClientAck)
}
S2SRouteMessageToClientAck::S2SRouteMessageToClientAck(const S2SRouteMessageToClientAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    pbroute_ = new ::KFMsg::PBRoute(*from.pbroute_);
  } else {
    pbroute_ = NULL;
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteMessageToClientAck)
}

void S2SRouteMessageToClientAck::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbroute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&pbroute_)) + sizeof(msgid_));
}

S2SRouteMessageToClientAck::~S2SRouteMessageToClientAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteMessageToClientAck)
  SharedDtor();
}

void S2SRouteMessageToClientAck::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbroute_;
}

void S2SRouteMessageToClientAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteMessageToClientAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteMessageToClientAck& S2SRouteMessageToClientAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToClientAck.base);
  return *internal_default_instance();
}


void S2SRouteMessageToClientAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteMessageToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbroute_ != NULL) {
    delete pbroute_;
  }
  pbroute_ = NULL;
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRouteMessageToClientAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteMessageToClientAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBRoute pbroute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteMessageToClientAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteMessageToClientAck)
  return false;
#undef DO_
}

void S2SRouteMessageToClientAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteMessageToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroute(), output);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteMessageToClientAck)
}

::google::protobuf::uint8* S2SRouteMessageToClientAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteMessageToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroute(), deterministic, target);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteMessageToClientAck)
  return target;
}

size_t S2SRouteMessageToClientAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteMessageToClientAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroute_);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteMessageToClientAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteMessageToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteMessageToClientAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteMessageToClientAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteMessageToClientAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteMessageToClientAck)
    MergeFrom(*source);
  }
}

void S2SRouteMessageToClientAck::MergeFrom(const S2SRouteMessageToClientAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteMessageToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    mutable_pbroute()->::KFMsg::PBRoute::MergeFrom(from.pbroute());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SRouteMessageToClientAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteMessageToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteMessageToClientAck::CopyFrom(const S2SRouteMessageToClientAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteMessageToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteMessageToClientAck::IsInitialized() const {
  return true;
}

void S2SRouteMessageToClientAck::Swap(S2SRouteMessageToClientAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteMessageToClientAck::InternalSwap(S2SRouteMessageToClientAck* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbroute_, other->pbroute_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteMessageToClientAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteMessageToNameAllReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SRouteMessageToNameAllReq_default_instance_._instance.get_mutable()->pbroute_ = const_cast< ::KFMsg::PBRoute*>(
      ::KFMsg::PBRoute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteMessageToNameAllReq::kPbrouteFieldNumber;
const int S2SRouteMessageToNameAllReq::kNameFieldNumber;
const int S2SRouteMessageToNameAllReq::kMsgidFieldNumber;
const int S2SRouteMessageToNameAllReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteMessageToNameAllReq::S2SRouteMessageToNameAllReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameAllReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteMessageToNameAllReq)
}
S2SRouteMessageToNameAllReq::S2SRouteMessageToNameAllReq(const S2SRouteMessageToNameAllReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    pbroute_ = new ::KFMsg::PBRoute(*from.pbroute_);
  } else {
    pbroute_ = NULL;
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteMessageToNameAllReq)
}

void S2SRouteMessageToNameAllReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbroute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&pbroute_)) + sizeof(msgid_));
}

S2SRouteMessageToNameAllReq::~S2SRouteMessageToNameAllReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteMessageToNameAllReq)
  SharedDtor();
}

void S2SRouteMessageToNameAllReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbroute_;
}

void S2SRouteMessageToNameAllReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteMessageToNameAllReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteMessageToNameAllReq& S2SRouteMessageToNameAllReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameAllReq.base);
  return *internal_default_instance();
}


void S2SRouteMessageToNameAllReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteMessageToNameAllReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbroute_ != NULL) {
    delete pbroute_;
  }
  pbroute_ = NULL;
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRouteMessageToNameAllReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteMessageToNameAllReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBRoute pbroute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteMessageToNameAllReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteMessageToNameAllReq)
  return false;
#undef DO_
}

void S2SRouteMessageToNameAllReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteMessageToNameAllReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroute(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteMessageToNameAllReq)
}

::google::protobuf::uint8* S2SRouteMessageToNameAllReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteMessageToNameAllReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroute(), deterministic, target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteMessageToNameAllReq)
  return target;
}

size_t S2SRouteMessageToNameAllReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteMessageToNameAllReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroute_);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteMessageToNameAllReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteMessageToNameAllReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteMessageToNameAllReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteMessageToNameAllReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteMessageToNameAllReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteMessageToNameAllReq)
    MergeFrom(*source);
  }
}

void S2SRouteMessageToNameAllReq::MergeFrom(const S2SRouteMessageToNameAllReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteMessageToNameAllReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    mutable_pbroute()->::KFMsg::PBRoute::MergeFrom(from.pbroute());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SRouteMessageToNameAllReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteMessageToNameAllReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteMessageToNameAllReq::CopyFrom(const S2SRouteMessageToNameAllReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteMessageToNameAllReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteMessageToNameAllReq::IsInitialized() const {
  return true;
}

void S2SRouteMessageToNameAllReq::Swap(S2SRouteMessageToNameAllReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteMessageToNameAllReq::InternalSwap(S2SRouteMessageToNameAllReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbroute_, other->pbroute_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteMessageToNameAllReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteMessageToNameRandReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SRouteMessageToNameRandReq_default_instance_._instance.get_mutable()->pbroute_ = const_cast< ::KFMsg::PBRoute*>(
      ::KFMsg::PBRoute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteMessageToNameRandReq::kPbrouteFieldNumber;
const int S2SRouteMessageToNameRandReq::kNameFieldNumber;
const int S2SRouteMessageToNameRandReq::kMsgidFieldNumber;
const int S2SRouteMessageToNameRandReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteMessageToNameRandReq::S2SRouteMessageToNameRandReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameRandReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteMessageToNameRandReq)
}
S2SRouteMessageToNameRandReq::S2SRouteMessageToNameRandReq(const S2SRouteMessageToNameRandReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    pbroute_ = new ::KFMsg::PBRoute(*from.pbroute_);
  } else {
    pbroute_ = NULL;
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteMessageToNameRandReq)
}

void S2SRouteMessageToNameRandReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbroute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&pbroute_)) + sizeof(msgid_));
}

S2SRouteMessageToNameRandReq::~S2SRouteMessageToNameRandReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteMessageToNameRandReq)
  SharedDtor();
}

void S2SRouteMessageToNameRandReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbroute_;
}

void S2SRouteMessageToNameRandReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteMessageToNameRandReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteMessageToNameRandReq& S2SRouteMessageToNameRandReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameRandReq.base);
  return *internal_default_instance();
}


void S2SRouteMessageToNameRandReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteMessageToNameRandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbroute_ != NULL) {
    delete pbroute_;
  }
  pbroute_ = NULL;
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRouteMessageToNameRandReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteMessageToNameRandReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBRoute pbroute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteMessageToNameRandReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteMessageToNameRandReq)
  return false;
#undef DO_
}

void S2SRouteMessageToNameRandReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteMessageToNameRandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroute(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteMessageToNameRandReq)
}

::google::protobuf::uint8* S2SRouteMessageToNameRandReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteMessageToNameRandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroute(), deterministic, target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteMessageToNameRandReq)
  return target;
}

size_t S2SRouteMessageToNameRandReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteMessageToNameRandReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroute_);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteMessageToNameRandReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteMessageToNameRandReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteMessageToNameRandReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteMessageToNameRandReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteMessageToNameRandReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteMessageToNameRandReq)
    MergeFrom(*source);
  }
}

void S2SRouteMessageToNameRandReq::MergeFrom(const S2SRouteMessageToNameRandReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteMessageToNameRandReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    mutable_pbroute()->::KFMsg::PBRoute::MergeFrom(from.pbroute());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SRouteMessageToNameRandReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteMessageToNameRandReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteMessageToNameRandReq::CopyFrom(const S2SRouteMessageToNameRandReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteMessageToNameRandReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteMessageToNameRandReq::IsInitialized() const {
  return true;
}

void S2SRouteMessageToNameRandReq::Swap(S2SRouteMessageToNameRandReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteMessageToNameRandReq::InternalSwap(S2SRouteMessageToNameRandReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbroute_, other->pbroute_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteMessageToNameRandReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteMessageToNameBalanceReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SRouteMessageToNameBalanceReq_default_instance_._instance.get_mutable()->pbroute_ = const_cast< ::KFMsg::PBRoute*>(
      ::KFMsg::PBRoute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteMessageToNameBalanceReq::kPbrouteFieldNumber;
const int S2SRouteMessageToNameBalanceReq::kNameFieldNumber;
const int S2SRouteMessageToNameBalanceReq::kMsgidFieldNumber;
const int S2SRouteMessageToNameBalanceReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteMessageToNameBalanceReq::S2SRouteMessageToNameBalanceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameBalanceReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteMessageToNameBalanceReq)
}
S2SRouteMessageToNameBalanceReq::S2SRouteMessageToNameBalanceReq(const S2SRouteMessageToNameBalanceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    pbroute_ = new ::KFMsg::PBRoute(*from.pbroute_);
  } else {
    pbroute_ = NULL;
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteMessageToNameBalanceReq)
}

void S2SRouteMessageToNameBalanceReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbroute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&pbroute_)) + sizeof(msgid_));
}

S2SRouteMessageToNameBalanceReq::~S2SRouteMessageToNameBalanceReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteMessageToNameBalanceReq)
  SharedDtor();
}

void S2SRouteMessageToNameBalanceReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbroute_;
}

void S2SRouteMessageToNameBalanceReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteMessageToNameBalanceReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteMessageToNameBalanceReq& S2SRouteMessageToNameBalanceReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameBalanceReq.base);
  return *internal_default_instance();
}


void S2SRouteMessageToNameBalanceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbroute_ != NULL) {
    delete pbroute_;
  }
  pbroute_ = NULL;
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRouteMessageToNameBalanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBRoute pbroute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteMessageToNameBalanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteMessageToNameBalanceReq)
  return false;
#undef DO_
}

void S2SRouteMessageToNameBalanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroute(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteMessageToNameBalanceReq)
}

::google::protobuf::uint8* S2SRouteMessageToNameBalanceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroute(), deterministic, target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteMessageToNameBalanceReq)
  return target;
}

size_t S2SRouteMessageToNameBalanceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroute_);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteMessageToNameBalanceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteMessageToNameBalanceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteMessageToNameBalanceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteMessageToNameBalanceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteMessageToNameBalanceReq)
    MergeFrom(*source);
  }
}

void S2SRouteMessageToNameBalanceReq::MergeFrom(const S2SRouteMessageToNameBalanceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    mutable_pbroute()->::KFMsg::PBRoute::MergeFrom(from.pbroute());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SRouteMessageToNameBalanceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteMessageToNameBalanceReq::CopyFrom(const S2SRouteMessageToNameBalanceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteMessageToNameBalanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteMessageToNameBalanceReq::IsInitialized() const {
  return true;
}

void S2SRouteMessageToNameBalanceReq::Swap(S2SRouteMessageToNameBalanceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteMessageToNameBalanceReq::InternalSwap(S2SRouteMessageToNameBalanceReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbroute_, other->pbroute_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteMessageToNameBalanceReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteMessageToNameObjectReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SRouteMessageToNameObjectReq_default_instance_._instance.get_mutable()->pbroute_ = const_cast< ::KFMsg::PBRoute*>(
      ::KFMsg::PBRoute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteMessageToNameObjectReq::kPbrouteFieldNumber;
const int S2SRouteMessageToNameObjectReq::kNameFieldNumber;
const int S2SRouteMessageToNameObjectReq::kMsgidFieldNumber;
const int S2SRouteMessageToNameObjectReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteMessageToNameObjectReq::S2SRouteMessageToNameObjectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameObjectReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteMessageToNameObjectReq)
}
S2SRouteMessageToNameObjectReq::S2SRouteMessageToNameObjectReq(const S2SRouteMessageToNameObjectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    pbroute_ = new ::KFMsg::PBRoute(*from.pbroute_);
  } else {
    pbroute_ = NULL;
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteMessageToNameObjectReq)
}

void S2SRouteMessageToNameObjectReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbroute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&pbroute_)) + sizeof(msgid_));
}

S2SRouteMessageToNameObjectReq::~S2SRouteMessageToNameObjectReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteMessageToNameObjectReq)
  SharedDtor();
}

void S2SRouteMessageToNameObjectReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbroute_;
}

void S2SRouteMessageToNameObjectReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteMessageToNameObjectReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteMessageToNameObjectReq& S2SRouteMessageToNameObjectReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToNameObjectReq.base);
  return *internal_default_instance();
}


void S2SRouteMessageToNameObjectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteMessageToNameObjectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbroute_ != NULL) {
    delete pbroute_;
  }
  pbroute_ = NULL;
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRouteMessageToNameObjectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteMessageToNameObjectReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBRoute pbroute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteMessageToNameObjectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteMessageToNameObjectReq)
  return false;
#undef DO_
}

void S2SRouteMessageToNameObjectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteMessageToNameObjectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroute(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteMessageToNameObjectReq)
}

::google::protobuf::uint8* S2SRouteMessageToNameObjectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteMessageToNameObjectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroute(), deterministic, target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteMessageToNameObjectReq)
  return target;
}

size_t S2SRouteMessageToNameObjectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteMessageToNameObjectReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroute_);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteMessageToNameObjectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteMessageToNameObjectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteMessageToNameObjectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteMessageToNameObjectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteMessageToNameObjectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteMessageToNameObjectReq)
    MergeFrom(*source);
  }
}

void S2SRouteMessageToNameObjectReq::MergeFrom(const S2SRouteMessageToNameObjectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteMessageToNameObjectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    mutable_pbroute()->::KFMsg::PBRoute::MergeFrom(from.pbroute());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SRouteMessageToNameObjectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteMessageToNameObjectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteMessageToNameObjectReq::CopyFrom(const S2SRouteMessageToNameObjectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteMessageToNameObjectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteMessageToNameObjectReq::IsInitialized() const {
  return true;
}

void S2SRouteMessageToNameObjectReq::Swap(S2SRouteMessageToNameObjectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteMessageToNameObjectReq::InternalSwap(S2SRouteMessageToNameObjectReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbroute_, other->pbroute_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteMessageToNameObjectReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteMessageToServerReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SRouteMessageToServerReq_default_instance_._instance.get_mutable()->pbroute_ = const_cast< ::KFMsg::PBRoute*>(
      ::KFMsg::PBRoute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteMessageToServerReq::kPbrouteFieldNumber;
const int S2SRouteMessageToServerReq::kTargetidFieldNumber;
const int S2SRouteMessageToServerReq::kMsgidFieldNumber;
const int S2SRouteMessageToServerReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteMessageToServerReq::S2SRouteMessageToServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToServerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteMessageToServerReq)
}
S2SRouteMessageToServerReq::S2SRouteMessageToServerReq(const S2SRouteMessageToServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    pbroute_ = new ::KFMsg::PBRoute(*from.pbroute_);
  } else {
    pbroute_ = NULL;
  }
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgid_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(msgid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteMessageToServerReq)
}

void S2SRouteMessageToServerReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbroute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&pbroute_)) + sizeof(msgid_));
}

S2SRouteMessageToServerReq::~S2SRouteMessageToServerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteMessageToServerReq)
  SharedDtor();
}

void S2SRouteMessageToServerReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbroute_;
}

void S2SRouteMessageToServerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteMessageToServerReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteMessageToServerReq& S2SRouteMessageToServerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToServerReq.base);
  return *internal_default_instance();
}


void S2SRouteMessageToServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteMessageToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbroute_ != NULL) {
    delete pbroute_;
  }
  pbroute_ = NULL;
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(msgid_));
  _internal_metadata_.Clear();
}

bool S2SRouteMessageToServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteMessageToServerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBRoute pbroute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteMessageToServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteMessageToServerReq)
  return false;
#undef DO_
}

void S2SRouteMessageToServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteMessageToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroute(), output);
  }

  // uint64 targetid = 2;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetid(), output);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteMessageToServerReq)
}

::google::protobuf::uint8* S2SRouteMessageToServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteMessageToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroute(), deterministic, target);
  }

  // uint64 targetid = 2;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetid(), target);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteMessageToServerReq)
  return target;
}

size_t S2SRouteMessageToServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteMessageToServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroute_);
  }

  // uint64 targetid = 2;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetid());
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteMessageToServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteMessageToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteMessageToServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteMessageToServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteMessageToServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteMessageToServerReq)
    MergeFrom(*source);
  }
}

void S2SRouteMessageToServerReq::MergeFrom(const S2SRouteMessageToServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteMessageToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    mutable_pbroute()->::KFMsg::PBRoute::MergeFrom(from.pbroute());
  }
  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SRouteMessageToServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteMessageToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteMessageToServerReq::CopyFrom(const S2SRouteMessageToServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteMessageToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteMessageToServerReq::IsInitialized() const {
  return true;
}

void S2SRouteMessageToServerReq::Swap(S2SRouteMessageToServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteMessageToServerReq::InternalSwap(S2SRouteMessageToServerReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbroute_, other->pbroute_);
  swap(targetid_, other->targetid_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteMessageToServerReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteMessageToPlayerReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SRouteMessageToPlayerReq_default_instance_._instance.get_mutable()->pbroute_ = const_cast< ::KFMsg::PBRoute*>(
      ::KFMsg::PBRoute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteMessageToPlayerReq::kPbrouteFieldNumber;
const int S2SRouteMessageToPlayerReq::kTargetidFieldNumber;
const int S2SRouteMessageToPlayerReq::kMsgidFieldNumber;
const int S2SRouteMessageToPlayerReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteMessageToPlayerReq::S2SRouteMessageToPlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToPlayerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteMessageToPlayerReq)
}
S2SRouteMessageToPlayerReq::S2SRouteMessageToPlayerReq(const S2SRouteMessageToPlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    pbroute_ = new ::KFMsg::PBRoute(*from.pbroute_);
  } else {
    pbroute_ = NULL;
  }
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgid_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(msgid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteMessageToPlayerReq)
}

void S2SRouteMessageToPlayerReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbroute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&pbroute_)) + sizeof(msgid_));
}

S2SRouteMessageToPlayerReq::~S2SRouteMessageToPlayerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteMessageToPlayerReq)
  SharedDtor();
}

void S2SRouteMessageToPlayerReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbroute_;
}

void S2SRouteMessageToPlayerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteMessageToPlayerReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteMessageToPlayerReq& S2SRouteMessageToPlayerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteMessageToPlayerReq.base);
  return *internal_default_instance();
}


void S2SRouteMessageToPlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteMessageToPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbroute_ != NULL) {
    delete pbroute_;
  }
  pbroute_ = NULL;
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(msgid_));
  _internal_metadata_.Clear();
}

bool S2SRouteMessageToPlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteMessageToPlayerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBRoute pbroute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteMessageToPlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteMessageToPlayerReq)
  return false;
#undef DO_
}

void S2SRouteMessageToPlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteMessageToPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroute(), output);
  }

  // uint64 targetid = 2;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetid(), output);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteMessageToPlayerReq)
}

::google::protobuf::uint8* S2SRouteMessageToPlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteMessageToPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroute(), deterministic, target);
  }

  // uint64 targetid = 2;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetid(), target);
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteMessageToPlayerReq)
  return target;
}

size_t S2SRouteMessageToPlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteMessageToPlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 4;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // .KFMsg.PBRoute pbroute = 1;
  if (this->has_pbroute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroute_);
  }

  // uint64 targetid = 2;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetid());
  }

  // uint32 msgid = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteMessageToPlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteMessageToPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteMessageToPlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteMessageToPlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteMessageToPlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteMessageToPlayerReq)
    MergeFrom(*source);
  }
}

void S2SRouteMessageToPlayerReq::MergeFrom(const S2SRouteMessageToPlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteMessageToPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.has_pbroute()) {
    mutable_pbroute()->::KFMsg::PBRoute::MergeFrom(from.pbroute());
  }
  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SRouteMessageToPlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteMessageToPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteMessageToPlayerReq::CopyFrom(const S2SRouteMessageToPlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteMessageToPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteMessageToPlayerReq::IsInitialized() const {
  return true;
}

void S2SRouteMessageToPlayerReq::Swap(S2SRouteMessageToPlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteMessageToPlayerReq::InternalSwap(S2SRouteMessageToPlayerReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbroute_, other->pbroute_);
  swap(targetid_, other->targetid_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteMessageToPlayerReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteClientLostToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteClientLostToShardReq::kNameFieldNumber;
const int S2SRouteClientLostToShardReq::kClientidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteClientLostToShardReq::S2SRouteClientLostToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteClientLostToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteClientLostToShardReq)
}
S2SRouteClientLostToShardReq::S2SRouteClientLostToShardReq(const S2SRouteClientLostToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clientid_ = from.clientid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteClientLostToShardReq)
}

void S2SRouteClientLostToShardReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = GOOGLE_ULONGLONG(0);
}

S2SRouteClientLostToShardReq::~S2SRouteClientLostToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteClientLostToShardReq)
  SharedDtor();
}

void S2SRouteClientLostToShardReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRouteClientLostToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteClientLostToShardReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteClientLostToShardReq& S2SRouteClientLostToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteClientLostToShardReq.base);
  return *internal_default_instance();
}


void S2SRouteClientLostToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteClientLostToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SRouteClientLostToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteClientLostToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteClientLostToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteClientLostToShardReq)
  return false;
#undef DO_
}

void S2SRouteClientLostToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteClientLostToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteClientLostToShardReq)
}

::google::protobuf::uint8* S2SRouteClientLostToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteClientLostToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteClientLostToShardReq)
  return target;
}

size_t S2SRouteClientLostToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteClientLostToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteClientLostToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteClientLostToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteClientLostToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteClientLostToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteClientLostToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteClientLostToShardReq)
    MergeFrom(*source);
  }
}

void S2SRouteClientLostToShardReq::MergeFrom(const S2SRouteClientLostToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteClientLostToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
}

void S2SRouteClientLostToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteClientLostToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteClientLostToShardReq::CopyFrom(const S2SRouteClientLostToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteClientLostToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteClientLostToShardReq::IsInitialized() const {
  return true;
}

void S2SRouteClientLostToShardReq::Swap(S2SRouteClientLostToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteClientLostToShardReq::InternalSwap(S2SRouteClientLostToShardReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteClientLostToShardReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteDiscoverToClientReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteDiscoverToClientReq::kShardidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteDiscoverToClientReq::S2SRouteDiscoverToClientReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteDiscoverToClientReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteDiscoverToClientReq)
}
S2SRouteDiscoverToClientReq::S2SRouteDiscoverToClientReq(const S2SRouteDiscoverToClientReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shardid_ = from.shardid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteDiscoverToClientReq)
}

void S2SRouteDiscoverToClientReq::SharedCtor() {
  shardid_ = GOOGLE_ULONGLONG(0);
}

S2SRouteDiscoverToClientReq::~S2SRouteDiscoverToClientReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteDiscoverToClientReq)
  SharedDtor();
}

void S2SRouteDiscoverToClientReq::SharedDtor() {
}

void S2SRouteDiscoverToClientReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteDiscoverToClientReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteDiscoverToClientReq& S2SRouteDiscoverToClientReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteDiscoverToClientReq.base);
  return *internal_default_instance();
}


void S2SRouteDiscoverToClientReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteDiscoverToClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shardid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SRouteDiscoverToClientReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteDiscoverToClientReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 shardid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteDiscoverToClientReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteDiscoverToClientReq)
  return false;
#undef DO_
}

void S2SRouteDiscoverToClientReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteDiscoverToClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 shardid = 1;
  if (this->shardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->shardid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteDiscoverToClientReq)
}

::google::protobuf::uint8* S2SRouteDiscoverToClientReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteDiscoverToClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 shardid = 1;
  if (this->shardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->shardid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteDiscoverToClientReq)
  return target;
}

size_t S2SRouteDiscoverToClientReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteDiscoverToClientReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 shardid = 1;
  if (this->shardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->shardid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteDiscoverToClientReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteDiscoverToClientReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteDiscoverToClientReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteDiscoverToClientReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteDiscoverToClientReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteDiscoverToClientReq)
    MergeFrom(*source);
  }
}

void S2SRouteDiscoverToClientReq::MergeFrom(const S2SRouteDiscoverToClientReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteDiscoverToClientReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shardid() != 0) {
    set_shardid(from.shardid());
  }
}

void S2SRouteDiscoverToClientReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteDiscoverToClientReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteDiscoverToClientReq::CopyFrom(const S2SRouteDiscoverToClientReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteDiscoverToClientReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteDiscoverToClientReq::IsInitialized() const {
  return true;
}

void S2SRouteDiscoverToClientReq::Swap(S2SRouteDiscoverToClientReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteDiscoverToClientReq::InternalSwap(S2SRouteDiscoverToClientReq* other) {
  using std::swap;
  swap(shardid_, other->shardid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteDiscoverToClientReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteSyncObjectToProxyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteSyncObjectToProxyReq::kNameFieldNumber;
const int S2SRouteSyncObjectToProxyReq::kClientidFieldNumber;
const int S2SRouteSyncObjectToProxyReq::kShardidFieldNumber;
const int S2SRouteSyncObjectToProxyReq::kObjectidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteSyncObjectToProxyReq::S2SRouteSyncObjectToProxyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteSyncObjectToProxyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteSyncObjectToProxyReq)
}
S2SRouteSyncObjectToProxyReq::S2SRouteSyncObjectToProxyReq(const S2SRouteSyncObjectToProxyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objectid_(from.objectid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&shardid_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(shardid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteSyncObjectToProxyReq)
}

void S2SRouteSyncObjectToProxyReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shardid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(shardid_));
}

S2SRouteSyncObjectToProxyReq::~S2SRouteSyncObjectToProxyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteSyncObjectToProxyReq)
  SharedDtor();
}

void S2SRouteSyncObjectToProxyReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRouteSyncObjectToProxyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteSyncObjectToProxyReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteSyncObjectToProxyReq& S2SRouteSyncObjectToProxyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteSyncObjectToProxyReq.base);
  return *internal_default_instance();
}


void S2SRouteSyncObjectToProxyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shardid_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(shardid_));
  _internal_metadata_.Clear();
}

bool S2SRouteSyncObjectToProxyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 shardid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 objectid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_objectid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_objectid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteSyncObjectToProxyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteSyncObjectToProxyReq)
  return false;
#undef DO_
}

void S2SRouteSyncObjectToProxyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 shardid = 3;
  if (this->shardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->shardid(), output);
  }

  // repeated uint64 objectid = 4;
  if (this->objectid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _objectid_cached_byte_size_));
  }
  for (int i = 0, n = this->objectid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->objectid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteSyncObjectToProxyReq)
}

::google::protobuf::uint8* S2SRouteSyncObjectToProxyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 shardid = 3;
  if (this->shardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->shardid(), target);
  }

  // repeated uint64 objectid = 4;
  if (this->objectid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _objectid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->objectid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteSyncObjectToProxyReq)
  return target;
}

size_t S2SRouteSyncObjectToProxyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 objectid = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->objectid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _objectid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 shardid = 3;
  if (this->shardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->shardid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteSyncObjectToProxyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteSyncObjectToProxyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteSyncObjectToProxyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteSyncObjectToProxyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteSyncObjectToProxyReq)
    MergeFrom(*source);
  }
}

void S2SRouteSyncObjectToProxyReq::MergeFrom(const S2SRouteSyncObjectToProxyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objectid_.MergeFrom(from.objectid_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.shardid() != 0) {
    set_shardid(from.shardid());
  }
}

void S2SRouteSyncObjectToProxyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteSyncObjectToProxyReq::CopyFrom(const S2SRouteSyncObjectToProxyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteSyncObjectToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteSyncObjectToProxyReq::IsInitialized() const {
  return true;
}

void S2SRouteSyncObjectToProxyReq::Swap(S2SRouteSyncObjectToProxyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteSyncObjectToProxyReq::InternalSwap(S2SRouteSyncObjectToProxyReq* other) {
  using std::swap;
  objectid_.InternalSwap(&other->objectid_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(shardid_, other->shardid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteSyncObjectToProxyReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteSyncObjectToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteSyncObjectToShardReq::kNameFieldNumber;
const int S2SRouteSyncObjectToShardReq::kClientidFieldNumber;
const int S2SRouteSyncObjectToShardReq::kObjectidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteSyncObjectToShardReq::S2SRouteSyncObjectToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteSyncObjectToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteSyncObjectToShardReq)
}
S2SRouteSyncObjectToShardReq::S2SRouteSyncObjectToShardReq(const S2SRouteSyncObjectToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objectid_(from.objectid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clientid_ = from.clientid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteSyncObjectToShardReq)
}

void S2SRouteSyncObjectToShardReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = GOOGLE_ULONGLONG(0);
}

S2SRouteSyncObjectToShardReq::~S2SRouteSyncObjectToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteSyncObjectToShardReq)
  SharedDtor();
}

void S2SRouteSyncObjectToShardReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRouteSyncObjectToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteSyncObjectToShardReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteSyncObjectToShardReq& S2SRouteSyncObjectToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteSyncObjectToShardReq.base);
  return *internal_default_instance();
}


void S2SRouteSyncObjectToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteSyncObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SRouteSyncObjectToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteSyncObjectToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 objectid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_objectid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_objectid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteSyncObjectToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteSyncObjectToShardReq)
  return false;
#undef DO_
}

void S2SRouteSyncObjectToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteSyncObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // repeated uint64 objectid = 3;
  if (this->objectid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _objectid_cached_byte_size_));
  }
  for (int i = 0, n = this->objectid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->objectid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteSyncObjectToShardReq)
}

::google::protobuf::uint8* S2SRouteSyncObjectToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteSyncObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // repeated uint64 objectid = 3;
  if (this->objectid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _objectid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->objectid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteSyncObjectToShardReq)
  return target;
}

size_t S2SRouteSyncObjectToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteSyncObjectToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 objectid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->objectid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _objectid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteSyncObjectToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteSyncObjectToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteSyncObjectToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteSyncObjectToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteSyncObjectToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteSyncObjectToShardReq)
    MergeFrom(*source);
  }
}

void S2SRouteSyncObjectToShardReq::MergeFrom(const S2SRouteSyncObjectToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteSyncObjectToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objectid_.MergeFrom(from.objectid_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
}

void S2SRouteSyncObjectToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteSyncObjectToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteSyncObjectToShardReq::CopyFrom(const S2SRouteSyncObjectToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteSyncObjectToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteSyncObjectToShardReq::IsInitialized() const {
  return true;
}

void S2SRouteSyncObjectToShardReq::Swap(S2SRouteSyncObjectToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteSyncObjectToShardReq::InternalSwap(S2SRouteSyncObjectToShardReq* other) {
  using std::swap;
  objectid_.InternalSwap(&other->objectid_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteSyncObjectToShardReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteAddObjectToProxyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteAddObjectToProxyReq::kNameFieldNumber;
const int S2SRouteAddObjectToProxyReq::kClientidFieldNumber;
const int S2SRouteAddObjectToProxyReq::kObjectidFieldNumber;
const int S2SRouteAddObjectToProxyReq::kObjectcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteAddObjectToProxyReq::S2SRouteAddObjectToProxyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteAddObjectToProxyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteAddObjectToProxyReq)
}
S2SRouteAddObjectToProxyReq::S2SRouteAddObjectToProxyReq(const S2SRouteAddObjectToProxyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&objectcount_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteAddObjectToProxyReq)
}

void S2SRouteAddObjectToProxyReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
}

S2SRouteAddObjectToProxyReq::~S2SRouteAddObjectToProxyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteAddObjectToProxyReq)
  SharedDtor();
}

void S2SRouteAddObjectToProxyReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRouteAddObjectToProxyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteAddObjectToProxyReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteAddObjectToProxyReq& S2SRouteAddObjectToProxyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteAddObjectToProxyReq.base);
  return *internal_default_instance();
}


void S2SRouteAddObjectToProxyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteAddObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  _internal_metadata_.Clear();
}

bool S2SRouteAddObjectToProxyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteAddObjectToProxyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objectid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 objectcount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteAddObjectToProxyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteAddObjectToProxyReq)
  return false;
#undef DO_
}

void S2SRouteAddObjectToProxyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteAddObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->objectid(), output);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->objectcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteAddObjectToProxyReq)
}

::google::protobuf::uint8* S2SRouteAddObjectToProxyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteAddObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->objectid(), target);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->objectcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteAddObjectToProxyReq)
  return target;
}

size_t S2SRouteAddObjectToProxyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteAddObjectToProxyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->objectcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteAddObjectToProxyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteAddObjectToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteAddObjectToProxyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteAddObjectToProxyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteAddObjectToProxyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteAddObjectToProxyReq)
    MergeFrom(*source);
  }
}

void S2SRouteAddObjectToProxyReq::MergeFrom(const S2SRouteAddObjectToProxyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteAddObjectToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.objectcount() != 0) {
    set_objectcount(from.objectcount());
  }
}

void S2SRouteAddObjectToProxyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteAddObjectToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteAddObjectToProxyReq::CopyFrom(const S2SRouteAddObjectToProxyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteAddObjectToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteAddObjectToProxyReq::IsInitialized() const {
  return true;
}

void S2SRouteAddObjectToProxyReq::Swap(S2SRouteAddObjectToProxyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteAddObjectToProxyReq::InternalSwap(S2SRouteAddObjectToProxyReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(objectid_, other->objectid_);
  swap(objectcount_, other->objectcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteAddObjectToProxyReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteAddObjectToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteAddObjectToShardReq::kNameFieldNumber;
const int S2SRouteAddObjectToShardReq::kClientidFieldNumber;
const int S2SRouteAddObjectToShardReq::kObjectidFieldNumber;
const int S2SRouteAddObjectToShardReq::kObjectcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteAddObjectToShardReq::S2SRouteAddObjectToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteAddObjectToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteAddObjectToShardReq)
}
S2SRouteAddObjectToShardReq::S2SRouteAddObjectToShardReq(const S2SRouteAddObjectToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&objectcount_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteAddObjectToShardReq)
}

void S2SRouteAddObjectToShardReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
}

S2SRouteAddObjectToShardReq::~S2SRouteAddObjectToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteAddObjectToShardReq)
  SharedDtor();
}

void S2SRouteAddObjectToShardReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRouteAddObjectToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteAddObjectToShardReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteAddObjectToShardReq& S2SRouteAddObjectToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteAddObjectToShardReq.base);
  return *internal_default_instance();
}


void S2SRouteAddObjectToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteAddObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  _internal_metadata_.Clear();
}

bool S2SRouteAddObjectToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteAddObjectToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objectid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 objectcount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteAddObjectToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteAddObjectToShardReq)
  return false;
#undef DO_
}

void S2SRouteAddObjectToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteAddObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->objectid(), output);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->objectcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteAddObjectToShardReq)
}

::google::protobuf::uint8* S2SRouteAddObjectToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteAddObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->objectid(), target);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->objectcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteAddObjectToShardReq)
  return target;
}

size_t S2SRouteAddObjectToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteAddObjectToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->objectcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteAddObjectToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteAddObjectToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteAddObjectToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteAddObjectToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteAddObjectToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteAddObjectToShardReq)
    MergeFrom(*source);
  }
}

void S2SRouteAddObjectToShardReq::MergeFrom(const S2SRouteAddObjectToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteAddObjectToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.objectcount() != 0) {
    set_objectcount(from.objectcount());
  }
}

void S2SRouteAddObjectToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteAddObjectToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteAddObjectToShardReq::CopyFrom(const S2SRouteAddObjectToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteAddObjectToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteAddObjectToShardReq::IsInitialized() const {
  return true;
}

void S2SRouteAddObjectToShardReq::Swap(S2SRouteAddObjectToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteAddObjectToShardReq::InternalSwap(S2SRouteAddObjectToShardReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(objectid_, other->objectid_);
  swap(objectcount_, other->objectcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteAddObjectToShardReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteRemoveObjectToProxyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteRemoveObjectToProxyReq::kNameFieldNumber;
const int S2SRouteRemoveObjectToProxyReq::kClientidFieldNumber;
const int S2SRouteRemoveObjectToProxyReq::kObjectidFieldNumber;
const int S2SRouteRemoveObjectToProxyReq::kObjectcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteRemoveObjectToProxyReq::S2SRouteRemoveObjectToProxyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteRemoveObjectToProxyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteRemoveObjectToProxyReq)
}
S2SRouteRemoveObjectToProxyReq::S2SRouteRemoveObjectToProxyReq(const S2SRouteRemoveObjectToProxyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&objectcount_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteRemoveObjectToProxyReq)
}

void S2SRouteRemoveObjectToProxyReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
}

S2SRouteRemoveObjectToProxyReq::~S2SRouteRemoveObjectToProxyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteRemoveObjectToProxyReq)
  SharedDtor();
}

void S2SRouteRemoveObjectToProxyReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRouteRemoveObjectToProxyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteRemoveObjectToProxyReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteRemoveObjectToProxyReq& S2SRouteRemoveObjectToProxyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteRemoveObjectToProxyReq.base);
  return *internal_default_instance();
}


void S2SRouteRemoveObjectToProxyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  _internal_metadata_.Clear();
}

bool S2SRouteRemoveObjectToProxyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objectid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 objectcount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteRemoveObjectToProxyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteRemoveObjectToProxyReq)
  return false;
#undef DO_
}

void S2SRouteRemoveObjectToProxyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->objectid(), output);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->objectcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteRemoveObjectToProxyReq)
}

::google::protobuf::uint8* S2SRouteRemoveObjectToProxyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->objectid(), target);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->objectcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteRemoveObjectToProxyReq)
  return target;
}

size_t S2SRouteRemoveObjectToProxyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->objectcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteRemoveObjectToProxyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteRemoveObjectToProxyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteRemoveObjectToProxyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteRemoveObjectToProxyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteRemoveObjectToProxyReq)
    MergeFrom(*source);
  }
}

void S2SRouteRemoveObjectToProxyReq::MergeFrom(const S2SRouteRemoveObjectToProxyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.objectcount() != 0) {
    set_objectcount(from.objectcount());
  }
}

void S2SRouteRemoveObjectToProxyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteRemoveObjectToProxyReq::CopyFrom(const S2SRouteRemoveObjectToProxyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteRemoveObjectToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteRemoveObjectToProxyReq::IsInitialized() const {
  return true;
}

void S2SRouteRemoveObjectToProxyReq::Swap(S2SRouteRemoveObjectToProxyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteRemoveObjectToProxyReq::InternalSwap(S2SRouteRemoveObjectToProxyReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(objectid_, other->objectid_);
  swap(objectcount_, other->objectcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteRemoveObjectToProxyReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRouteRemoveObjectToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRouteRemoveObjectToShardReq::kNameFieldNumber;
const int S2SRouteRemoveObjectToShardReq::kClientidFieldNumber;
const int S2SRouteRemoveObjectToShardReq::kObjectidFieldNumber;
const int S2SRouteRemoveObjectToShardReq::kObjectcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRouteRemoveObjectToShardReq::S2SRouteRemoveObjectToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRouteRemoveObjectToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRouteRemoveObjectToShardReq)
}
S2SRouteRemoveObjectToShardReq::S2SRouteRemoveObjectToShardReq(const S2SRouteRemoveObjectToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&objectcount_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRouteRemoveObjectToShardReq)
}

void S2SRouteRemoveObjectToShardReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
}

S2SRouteRemoveObjectToShardReq::~S2SRouteRemoveObjectToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRouteRemoveObjectToShardReq)
  SharedDtor();
}

void S2SRouteRemoveObjectToShardReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRouteRemoveObjectToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRouteRemoveObjectToShardReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRouteRemoveObjectToShardReq& S2SRouteRemoveObjectToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRouteRemoveObjectToShardReq.base);
  return *internal_default_instance();
}


void S2SRouteRemoveObjectToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectcount_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(objectcount_));
  _internal_metadata_.Clear();
}

bool S2SRouteRemoveObjectToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 clientid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objectid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 objectcount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRouteRemoveObjectToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRouteRemoveObjectToShardReq)
  return false;
#undef DO_
}

void S2SRouteRemoveObjectToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clientid(), output);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->objectid(), output);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->objectcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRouteRemoveObjectToShardReq)
}

::google::protobuf::uint8* S2SRouteRemoveObjectToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clientid(), target);
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->objectid(), target);
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->objectcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRouteRemoveObjectToShardReq)
  return target;
}

size_t S2SRouteRemoveObjectToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 clientid = 2;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientid());
  }

  // uint64 objectid = 3;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // uint32 objectcount = 4;
  if (this->objectcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->objectcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRouteRemoveObjectToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRouteRemoveObjectToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRouteRemoveObjectToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRouteRemoveObjectToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRouteRemoveObjectToShardReq)
    MergeFrom(*source);
  }
}

void S2SRouteRemoveObjectToShardReq::MergeFrom(const S2SRouteRemoveObjectToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.objectcount() != 0) {
    set_objectcount(from.objectcount());
  }
}

void S2SRouteRemoveObjectToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRouteRemoveObjectToShardReq::CopyFrom(const S2SRouteRemoveObjectToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRouteRemoveObjectToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRouteRemoveObjectToShardReq::IsInitialized() const {
  return true;
}

void S2SRouteRemoveObjectToShardReq::Swap(S2SRouteRemoveObjectToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRouteRemoveObjectToShardReq::InternalSwap(S2SRouteRemoveObjectToShardReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clientid_, other->clientid_);
  swap(objectid_, other->objectid_);
  swap(objectcount_, other->objectcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRouteRemoveObjectToShardReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRegisterAgentToServerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRegisterAgentToServerReq::kAgentidFieldNumber;
const int S2SRegisterAgentToServerReq::kLocalipFieldNumber;
const int S2SRegisterAgentToServerReq::kNameFieldNumber;
const int S2SRegisterAgentToServerReq::kTypeFieldNumber;
const int S2SRegisterAgentToServerReq::kPortFieldNumber;
const int S2SRegisterAgentToServerReq::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRegisterAgentToServerReq::S2SRegisterAgentToServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRegisterAgentToServerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRegisterAgentToServerReq)
}
S2SRegisterAgentToServerReq::S2SRegisterAgentToServerReq(const S2SRegisterAgentToServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  agentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.agentid().size() > 0) {
    agentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agentid_);
  }
  localip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.localip().size() > 0) {
    localip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localip_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRegisterAgentToServerReq)
}

void S2SRegisterAgentToServerReq::SharedCtor() {
  agentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

S2SRegisterAgentToServerReq::~S2SRegisterAgentToServerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRegisterAgentToServerReq)
  SharedDtor();
}

void S2SRegisterAgentToServerReq::SharedDtor() {
  agentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRegisterAgentToServerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRegisterAgentToServerReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRegisterAgentToServerReq& S2SRegisterAgentToServerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRegisterAgentToServerReq.base);
  return *internal_default_instance();
}


void S2SRegisterAgentToServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRegisterAgentToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRegisterAgentToServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRegisterAgentToServerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes agentid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_agentid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes localip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_localip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes service = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRegisterAgentToServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRegisterAgentToServerReq)
  return false;
#undef DO_
}

void S2SRegisterAgentToServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRegisterAgentToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes agentid = 1;
  if (this->agentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->agentid(), output);
  }

  // bytes localip = 2;
  if (this->localip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->localip(), output);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // bytes type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->type(), output);
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->port(), output);
  }

  // bytes service = 6;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->service(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRegisterAgentToServerReq)
}

::google::protobuf::uint8* S2SRegisterAgentToServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRegisterAgentToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes agentid = 1;
  if (this->agentid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->agentid(), target);
  }

  // bytes localip = 2;
  if (this->localip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->localip(), target);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // bytes type = 4;
  if (this->type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->type(), target);
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->port(), target);
  }

  // bytes service = 6;
  if (this->service().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->service(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRegisterAgentToServerReq)
  return target;
}

size_t S2SRegisterAgentToServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRegisterAgentToServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes agentid = 1;
  if (this->agentid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->agentid());
  }

  // bytes localip = 2;
  if (this->localip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->localip());
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->type());
  }

  // bytes service = 6;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->service());
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRegisterAgentToServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRegisterAgentToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRegisterAgentToServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRegisterAgentToServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRegisterAgentToServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRegisterAgentToServerReq)
    MergeFrom(*source);
  }
}

void S2SRegisterAgentToServerReq::MergeFrom(const S2SRegisterAgentToServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRegisterAgentToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.agentid().size() > 0) {

    agentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agentid_);
  }
  if (from.localip().size() > 0) {

    localip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localip_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void S2SRegisterAgentToServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRegisterAgentToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRegisterAgentToServerReq::CopyFrom(const S2SRegisterAgentToServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRegisterAgentToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRegisterAgentToServerReq::IsInitialized() const {
  return true;
}

void S2SRegisterAgentToServerReq::Swap(S2SRegisterAgentToServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRegisterAgentToServerReq::InternalSwap(S2SRegisterAgentToServerReq* other) {
  using std::swap;
  agentid_.Swap(&other->agentid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localip_.Swap(&other->localip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRegisterAgentToServerReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBDeployCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBDeployCommand::kCommandFieldNumber;
const int PBDeployCommand::kAppnameFieldNumber;
const int PBDeployCommand::kApptypeFieldNumber;
const int PBDeployCommand::kAppidFieldNumber;
const int PBDeployCommand::kZoneidFieldNumber;
const int PBDeployCommand::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBDeployCommand::PBDeployCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_PBDeployCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBDeployCommand)
}
PBDeployCommand::PBDeployCommand(const PBDeployCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command().size() > 0) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appid().size() > 0) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  zoneid_ = from.zoneid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBDeployCommand)
}

void PBDeployCommand::SharedCtor() {
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zoneid_ = 0u;
}

PBDeployCommand::~PBDeployCommand() {
  // @@protoc_insertion_point(destructor:KFMsg.PBDeployCommand)
  SharedDtor();
}

void PBDeployCommand::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBDeployCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBDeployCommand::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBDeployCommand& PBDeployCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_PBDeployCommand.base);
  return *internal_default_instance();
}


void PBDeployCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBDeployCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zoneid_ = 0u;
  _internal_metadata_.Clear();
}

bool PBDeployCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBDeployCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_command()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes appname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes apptype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apptype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes appid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBDeployCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBDeployCommand)
  return false;
#undef DO_
}

void PBDeployCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBDeployCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes command = 1;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->command(), output);
  }

  // bytes appname = 2;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->appname(), output);
  }

  // bytes apptype = 3;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->apptype(), output);
  }

  // bytes appid = 4;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->appid(), output);
  }

  // uint32 zoneid = 5;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->zoneid(), output);
  }

  // bytes value = 6;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBDeployCommand)
}

::google::protobuf::uint8* PBDeployCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBDeployCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes command = 1;
  if (this->command().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->command(), target);
  }

  // bytes appname = 2;
  if (this->appname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->appname(), target);
  }

  // bytes apptype = 3;
  if (this->apptype().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->apptype(), target);
  }

  // bytes appid = 4;
  if (this->appid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->appid(), target);
  }

  // uint32 zoneid = 5;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->zoneid(), target);
  }

  // bytes value = 6;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBDeployCommand)
  return target;
}

size_t PBDeployCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBDeployCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->command());
  }

  // bytes appname = 2;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appname());
  }

  // bytes apptype = 3;
  if (this->apptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->apptype());
  }

  // bytes appid = 4;
  if (this->appid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appid());
  }

  // bytes value = 6;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint32 zoneid = 5;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBDeployCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBDeployCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const PBDeployCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBDeployCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBDeployCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBDeployCommand)
    MergeFrom(*source);
  }
}

void PBDeployCommand::MergeFrom(const PBDeployCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBDeployCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {

    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.appid().size() > 0) {

    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void PBDeployCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBDeployCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDeployCommand::CopyFrom(const PBDeployCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBDeployCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDeployCommand::IsInitialized() const {
  return true;
}

void PBDeployCommand::Swap(PBDeployCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBDeployCommand::InternalSwap(PBDeployCommand* other) {
  using std::swap;
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  appname_.Swap(&other->appname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apptype_.Swap(&other->apptype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  appid_.Swap(&other->appid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBDeployCommand::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployCommandToAgentReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SDeployCommandToAgentReq_default_instance_._instance.get_mutable()->deploycommand_ = const_cast< ::KFMsg::PBDeployCommand*>(
      ::KFMsg::PBDeployCommand::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployCommandToAgentReq::kDeploycommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployCommandToAgentReq::S2SDeployCommandToAgentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployCommandToAgentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployCommandToAgentReq)
}
S2SDeployCommandToAgentReq::S2SDeployCommandToAgentReq(const S2SDeployCommandToAgentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deploycommand()) {
    deploycommand_ = new ::KFMsg::PBDeployCommand(*from.deploycommand_);
  } else {
    deploycommand_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployCommandToAgentReq)
}

void S2SDeployCommandToAgentReq::SharedCtor() {
  deploycommand_ = NULL;
}

S2SDeployCommandToAgentReq::~S2SDeployCommandToAgentReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployCommandToAgentReq)
  SharedDtor();
}

void S2SDeployCommandToAgentReq::SharedDtor() {
  if (this != internal_default_instance()) delete deploycommand_;
}

void S2SDeployCommandToAgentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployCommandToAgentReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployCommandToAgentReq& S2SDeployCommandToAgentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployCommandToAgentReq.base);
  return *internal_default_instance();
}


void S2SDeployCommandToAgentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployCommandToAgentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && deploycommand_ != NULL) {
    delete deploycommand_;
  }
  deploycommand_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SDeployCommandToAgentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployCommandToAgentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBDeployCommand deploycommand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deploycommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployCommandToAgentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployCommandToAgentReq)
  return false;
#undef DO_
}

void S2SDeployCommandToAgentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployCommandToAgentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_deploycommand(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployCommandToAgentReq)
}

::google::protobuf::uint8* S2SDeployCommandToAgentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployCommandToAgentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_deploycommand(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployCommandToAgentReq)
  return target;
}

size_t S2SDeployCommandToAgentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployCommandToAgentReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deploycommand_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployCommandToAgentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployCommandToAgentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployCommandToAgentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployCommandToAgentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployCommandToAgentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployCommandToAgentReq)
    MergeFrom(*source);
  }
}

void S2SDeployCommandToAgentReq::MergeFrom(const S2SDeployCommandToAgentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployCommandToAgentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_deploycommand()) {
    mutable_deploycommand()->::KFMsg::PBDeployCommand::MergeFrom(from.deploycommand());
  }
}

void S2SDeployCommandToAgentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployCommandToAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployCommandToAgentReq::CopyFrom(const S2SDeployCommandToAgentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployCommandToAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployCommandToAgentReq::IsInitialized() const {
  return true;
}

void S2SDeployCommandToAgentReq::Swap(S2SDeployCommandToAgentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployCommandToAgentReq::InternalSwap(S2SDeployCommandToAgentReq* other) {
  using std::swap;
  swap(deploycommand_, other->deploycommand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployCommandToAgentReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployCommandToClientReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SDeployCommandToClientReq_default_instance_._instance.get_mutable()->deploycommand_ = const_cast< ::KFMsg::PBDeployCommand*>(
      ::KFMsg::PBDeployCommand::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployCommandToClientReq::kDeploycommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployCommandToClientReq::S2SDeployCommandToClientReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployCommandToClientReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployCommandToClientReq)
}
S2SDeployCommandToClientReq::S2SDeployCommandToClientReq(const S2SDeployCommandToClientReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deploycommand()) {
    deploycommand_ = new ::KFMsg::PBDeployCommand(*from.deploycommand_);
  } else {
    deploycommand_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployCommandToClientReq)
}

void S2SDeployCommandToClientReq::SharedCtor() {
  deploycommand_ = NULL;
}

S2SDeployCommandToClientReq::~S2SDeployCommandToClientReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployCommandToClientReq)
  SharedDtor();
}

void S2SDeployCommandToClientReq::SharedDtor() {
  if (this != internal_default_instance()) delete deploycommand_;
}

void S2SDeployCommandToClientReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployCommandToClientReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployCommandToClientReq& S2SDeployCommandToClientReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployCommandToClientReq.base);
  return *internal_default_instance();
}


void S2SDeployCommandToClientReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployCommandToClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && deploycommand_ != NULL) {
    delete deploycommand_;
  }
  deploycommand_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SDeployCommandToClientReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployCommandToClientReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBDeployCommand deploycommand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deploycommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployCommandToClientReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployCommandToClientReq)
  return false;
#undef DO_
}

void S2SDeployCommandToClientReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployCommandToClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_deploycommand(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployCommandToClientReq)
}

::google::protobuf::uint8* S2SDeployCommandToClientReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployCommandToClientReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_deploycommand(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployCommandToClientReq)
  return target;
}

size_t S2SDeployCommandToClientReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployCommandToClientReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deploycommand_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployCommandToClientReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployCommandToClientReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployCommandToClientReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployCommandToClientReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployCommandToClientReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployCommandToClientReq)
    MergeFrom(*source);
  }
}

void S2SDeployCommandToClientReq::MergeFrom(const S2SDeployCommandToClientReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployCommandToClientReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_deploycommand()) {
    mutable_deploycommand()->::KFMsg::PBDeployCommand::MergeFrom(from.deploycommand());
  }
}

void S2SDeployCommandToClientReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployCommandToClientReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployCommandToClientReq::CopyFrom(const S2SDeployCommandToClientReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployCommandToClientReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployCommandToClientReq::IsInitialized() const {
  return true;
}

void S2SDeployCommandToClientReq::Swap(S2SDeployCommandToClientReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployCommandToClientReq::InternalSwap(S2SDeployCommandToClientReq* other) {
  using std::swap;
  swap(deploycommand_, other->deploycommand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployCommandToClientReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployToolCommandReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SDeployToolCommandReq_default_instance_._instance.get_mutable()->deploycommand_ = const_cast< ::KFMsg::PBDeployCommand*>(
      ::KFMsg::PBDeployCommand::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolCommandReq::kDeploycommandFieldNumber;
const int S2SDeployToolCommandReq::kTimeFieldNumber;
const int S2SDeployToolCommandReq::kToolidFieldNumber;
const int S2SDeployToolCommandReq::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolCommandReq::S2SDeployToolCommandReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolCommandReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolCommandReq)
}
S2SDeployToolCommandReq::S2SDeployToolCommandReq(const S2SDeployToolCommandReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  toolid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.toolid().size() > 0) {
    toolid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toolid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.has_deploycommand()) {
    deploycommand_ = new ::KFMsg::PBDeployCommand(*from.deploycommand_);
  } else {
    deploycommand_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolCommandReq)
}

void S2SDeployToolCommandReq::SharedCtor() {
  toolid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deploycommand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&deploycommand_)) + sizeof(time_));
}

S2SDeployToolCommandReq::~S2SDeployToolCommandReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolCommandReq)
  SharedDtor();
}

void S2SDeployToolCommandReq::SharedDtor() {
  toolid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete deploycommand_;
}

void S2SDeployToolCommandReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolCommandReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolCommandReq& S2SDeployToolCommandReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolCommandReq.base);
  return *internal_default_instance();
}


void S2SDeployToolCommandReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolCommandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  toolid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && deploycommand_ != NULL) {
    delete deploycommand_;
  }
  deploycommand_ = NULL;
  time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDeployToolCommandReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolCommandReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBDeployCommand deploycommand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deploycommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes toolid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_toolid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolCommandReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolCommandReq)
  return false;
#undef DO_
}

void S2SDeployToolCommandReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolCommandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_deploycommand(), output);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  // bytes toolid = 3;
  if (this->toolid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->toolid(), output);
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolCommandReq)
}

::google::protobuf::uint8* S2SDeployToolCommandReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolCommandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_deploycommand(), deterministic, target);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  // bytes toolid = 3;
  if (this->toolid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->toolid(), target);
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolCommandReq)
  return target;
}

size_t S2SDeployToolCommandReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolCommandReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes toolid = 3;
  if (this->toolid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->toolid());
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // .KFMsg.PBDeployCommand deploycommand = 1;
  if (this->has_deploycommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *deploycommand_);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolCommandReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolCommandReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolCommandReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolCommandReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolCommandReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolCommandReq)
    MergeFrom(*source);
  }
}

void S2SDeployToolCommandReq::MergeFrom(const S2SDeployToolCommandReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolCommandReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.toolid().size() > 0) {

    toolid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toolid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.has_deploycommand()) {
    mutable_deploycommand()->::KFMsg::PBDeployCommand::MergeFrom(from.deploycommand());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void S2SDeployToolCommandReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolCommandReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolCommandReq::CopyFrom(const S2SDeployToolCommandReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolCommandReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolCommandReq::IsInitialized() const {
  return true;
}

void S2SDeployToolCommandReq::Swap(S2SDeployToolCommandReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolCommandReq::InternalSwap(S2SDeployToolCommandReq* other) {
  using std::swap;
  toolid_.Swap(&other->toolid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(deploycommand_, other->deploycommand_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolCommandReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployLogToToolAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployLogToToolAck::kAgentidFieldNumber;
const int S2SDeployLogToToolAck::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployLogToToolAck::S2SDeployLogToToolAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployLogToToolAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployLogToToolAck)
}
S2SDeployLogToToolAck::S2SDeployLogToToolAck(const S2SDeployLogToToolAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  agentid_ = from.agentid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployLogToToolAck)
}

void S2SDeployLogToToolAck::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agentid_ = GOOGLE_ULONGLONG(0);
}

S2SDeployLogToToolAck::~S2SDeployLogToToolAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployLogToToolAck)
  SharedDtor();
}

void S2SDeployLogToToolAck::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployLogToToolAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployLogToToolAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployLogToToolAck& S2SDeployLogToToolAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployLogToToolAck.base);
  return *internal_default_instance();
}


void S2SDeployLogToToolAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployLogToToolAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agentid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDeployLogToToolAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployLogToToolAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 agentid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &agentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployLogToToolAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployLogToToolAck)
  return false;
#undef DO_
}

void S2SDeployLogToToolAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployLogToToolAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 agentid = 1;
  if (this->agentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->agentid(), output);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployLogToToolAck)
}

::google::protobuf::uint8* S2SDeployLogToToolAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployLogToToolAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 agentid = 1;
  if (this->agentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->agentid(), target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployLogToToolAck)
  return target;
}

size_t S2SDeployLogToToolAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployLogToToolAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // uint64 agentid = 1;
  if (this->agentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->agentid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployLogToToolAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployLogToToolAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployLogToToolAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployLogToToolAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployLogToToolAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployLogToToolAck)
    MergeFrom(*source);
  }
}

void S2SDeployLogToToolAck::MergeFrom(const S2SDeployLogToToolAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployLogToToolAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.agentid() != 0) {
    set_agentid(from.agentid());
  }
}

void S2SDeployLogToToolAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployLogToToolAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployLogToToolAck::CopyFrom(const S2SDeployLogToToolAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployLogToToolAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployLogToToolAck::IsInitialized() const {
  return true;
}

void S2SDeployLogToToolAck::Swap(S2SDeployLogToToolAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployLogToToolAck::InternalSwap(S2SDeployLogToToolAck* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(agentid_, other->agentid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployLogToToolAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployLogToServerAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployLogToServerAck::kAgentidFieldNumber;
const int S2SDeployLogToServerAck::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployLogToServerAck::S2SDeployLogToServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployLogToServerAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployLogToServerAck)
}
S2SDeployLogToServerAck::S2SDeployLogToServerAck(const S2SDeployLogToServerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  agentid_ = from.agentid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployLogToServerAck)
}

void S2SDeployLogToServerAck::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agentid_ = GOOGLE_ULONGLONG(0);
}

S2SDeployLogToServerAck::~S2SDeployLogToServerAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployLogToServerAck)
  SharedDtor();
}

void S2SDeployLogToServerAck::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployLogToServerAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployLogToServerAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployLogToServerAck& S2SDeployLogToServerAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployLogToServerAck.base);
  return *internal_default_instance();
}


void S2SDeployLogToServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployLogToServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agentid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDeployLogToServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployLogToServerAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 agentid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &agentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployLogToServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployLogToServerAck)
  return false;
#undef DO_
}

void S2SDeployLogToServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployLogToServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 agentid = 1;
  if (this->agentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->agentid(), output);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployLogToServerAck)
}

::google::protobuf::uint8* S2SDeployLogToServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployLogToServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 agentid = 1;
  if (this->agentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->agentid(), target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployLogToServerAck)
  return target;
}

size_t S2SDeployLogToServerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployLogToServerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // uint64 agentid = 1;
  if (this->agentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->agentid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployLogToServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployLogToServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployLogToServerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployLogToServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployLogToServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployLogToServerAck)
    MergeFrom(*source);
  }
}

void S2SDeployLogToServerAck::MergeFrom(const S2SDeployLogToServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployLogToServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.agentid() != 0) {
    set_agentid(from.agentid());
  }
}

void S2SDeployLogToServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployLogToServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployLogToServerAck::CopyFrom(const S2SDeployLogToServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployLogToServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployLogToServerAck::IsInitialized() const {
  return true;
}

void S2SDeployLogToServerAck::Swap(S2SDeployLogToServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployLogToServerAck::InternalSwap(S2SDeployLogToServerAck* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(agentid_, other->agentid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployLogToServerAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse() {}
S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse::MergeFrom(const S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[45];
}
void S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SDeployToolDeleteMySQLReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolDeleteMySQLReq::kTableFieldNumber;
const int S2SDeployToolDeleteMySQLReq::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolDeleteMySQLReq::S2SDeployToolDeleteMySQLReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolDeleteMySQLReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolDeleteMySQLReq)
}
S2SDeployToolDeleteMySQLReq::S2SDeployToolDeleteMySQLReq(const S2SDeployToolDeleteMySQLReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keys_.MergeFrom(from.keys_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolDeleteMySQLReq)
}

void S2SDeployToolDeleteMySQLReq::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2SDeployToolDeleteMySQLReq::~S2SDeployToolDeleteMySQLReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolDeleteMySQLReq)
  SharedDtor();
}

void S2SDeployToolDeleteMySQLReq::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployToolDeleteMySQLReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolDeleteMySQLReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolDeleteMySQLReq& S2SDeployToolDeleteMySQLReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolDeleteMySQLReq.base);
  return *internal_default_instance();
}


void S2SDeployToolDeleteMySQLReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool S2SDeployToolDeleteMySQLReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&keys_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SDeployToolDeleteMySQLReq.KeysEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolDeleteMySQLReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolDeleteMySQLReq)
  return false;
#undef DO_
}

void S2SDeployToolDeleteMySQLReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->table(), output);
  }

  // map<string, bytes> keys = 2;
  if (!this->keys().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolDeleteMySQLReq.KeysEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->keys().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(keys_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it) {
        entry.reset(keys_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolDeleteMySQLReq)
}

::google::protobuf::uint8* S2SDeployToolDeleteMySQLReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->table(), target);
  }

  // map<string, bytes> keys = 2;
  if (!this->keys().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolDeleteMySQLReq.KeysEntry.key");
      }
    };

    if (deterministic &&
        this->keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->keys().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(keys_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it) {
        entry.reset(keys_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolDeleteMySQLReq)
  return target;
}

size_t S2SDeployToolDeleteMySQLReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  {
    ::std::unique_ptr<S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->keys().begin();
        it != this->keys().end(); ++it) {
      entry.reset(keys_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes table = 1;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->table());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolDeleteMySQLReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolDeleteMySQLReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolDeleteMySQLReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolDeleteMySQLReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolDeleteMySQLReq)
    MergeFrom(*source);
  }
}

void S2SDeployToolDeleteMySQLReq::MergeFrom(const S2SDeployToolDeleteMySQLReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
}

void S2SDeployToolDeleteMySQLReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolDeleteMySQLReq::CopyFrom(const S2SDeployToolDeleteMySQLReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolDeleteMySQLReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolDeleteMySQLReq::IsInitialized() const {
  return true;
}

void S2SDeployToolDeleteMySQLReq::Swap(S2SDeployToolDeleteMySQLReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolDeleteMySQLReq::InternalSwap(S2SDeployToolDeleteMySQLReq* other) {
  using std::swap;
  keys_.Swap(&other->keys_);
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolDeleteMySQLReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse() {}
S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse::MergeFrom(const S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[47];
}
void S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SDeployToolDeleteMySQLAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolDeleteMySQLAck::kTableFieldNumber;
const int S2SDeployToolDeleteMySQLAck::kKeysFieldNumber;
const int S2SDeployToolDeleteMySQLAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolDeleteMySQLAck::S2SDeployToolDeleteMySQLAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolDeleteMySQLAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolDeleteMySQLAck)
}
S2SDeployToolDeleteMySQLAck::S2SDeployToolDeleteMySQLAck(const S2SDeployToolDeleteMySQLAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keys_.MergeFrom(from.keys_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolDeleteMySQLAck)
}

void S2SDeployToolDeleteMySQLAck::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

S2SDeployToolDeleteMySQLAck::~S2SDeployToolDeleteMySQLAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolDeleteMySQLAck)
  SharedDtor();
}

void S2SDeployToolDeleteMySQLAck::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployToolDeleteMySQLAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolDeleteMySQLAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolDeleteMySQLAck& S2SDeployToolDeleteMySQLAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolDeleteMySQLAck.base);
  return *internal_default_instance();
}


void S2SDeployToolDeleteMySQLAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool S2SDeployToolDeleteMySQLAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&keys_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SDeployToolDeleteMySQLAck.KeysEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolDeleteMySQLAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolDeleteMySQLAck)
  return false;
#undef DO_
}

void S2SDeployToolDeleteMySQLAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->table(), output);
  }

  // map<string, bytes> keys = 2;
  if (!this->keys().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolDeleteMySQLAck.KeysEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->keys().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(keys_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it) {
        entry.reset(keys_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolDeleteMySQLAck)
}

::google::protobuf::uint8* S2SDeployToolDeleteMySQLAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->table(), target);
  }

  // map<string, bytes> keys = 2;
  if (!this->keys().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolDeleteMySQLAck.KeysEntry.key");
      }
    };

    if (deterministic &&
        this->keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->keys().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(keys_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it) {
        entry.reset(keys_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolDeleteMySQLAck)
  return target;
}

size_t S2SDeployToolDeleteMySQLAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  {
    ::std::unique_ptr<S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->keys().begin();
        it != this->keys().end(); ++it) {
      entry.reset(keys_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes table = 1;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->table());
  }

  // bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolDeleteMySQLAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolDeleteMySQLAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolDeleteMySQLAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolDeleteMySQLAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolDeleteMySQLAck)
    MergeFrom(*source);
  }
}

void S2SDeployToolDeleteMySQLAck::MergeFrom(const S2SDeployToolDeleteMySQLAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SDeployToolDeleteMySQLAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolDeleteMySQLAck::CopyFrom(const S2SDeployToolDeleteMySQLAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolDeleteMySQLAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolDeleteMySQLAck::IsInitialized() const {
  return true;
}

void S2SDeployToolDeleteMySQLAck::Swap(S2SDeployToolDeleteMySQLAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolDeleteMySQLAck::InternalSwap(S2SDeployToolDeleteMySQLAck* other) {
  using std::swap;
  keys_.Swap(&other->keys_);
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolDeleteMySQLAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse() {}
S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse::MergeFrom(const S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[49];
}
void S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SDeployToolExecuteMySQLReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolExecuteMySQLReq::kTableFieldNumber;
const int S2SDeployToolExecuteMySQLReq::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolExecuteMySQLReq::S2SDeployToolExecuteMySQLReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolExecuteMySQLReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolExecuteMySQLReq)
}
S2SDeployToolExecuteMySQLReq::S2SDeployToolExecuteMySQLReq(const S2SDeployToolExecuteMySQLReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolExecuteMySQLReq)
}

void S2SDeployToolExecuteMySQLReq::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2SDeployToolExecuteMySQLReq::~S2SDeployToolExecuteMySQLReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolExecuteMySQLReq)
  SharedDtor();
}

void S2SDeployToolExecuteMySQLReq::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployToolExecuteMySQLReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolExecuteMySQLReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolExecuteMySQLReq& S2SDeployToolExecuteMySQLReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolExecuteMySQLReq.base);
  return *internal_default_instance();
}


void S2SDeployToolExecuteMySQLReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool S2SDeployToolExecuteMySQLReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&values_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SDeployToolExecuteMySQLReq.ValuesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolExecuteMySQLReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolExecuteMySQLReq)
  return false;
#undef DO_
}

void S2SDeployToolExecuteMySQLReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->table(), output);
  }

  // map<string, bytes> values = 2;
  if (!this->values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolExecuteMySQLReq.ValuesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it) {
        entry.reset(values_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolExecuteMySQLReq)
}

::google::protobuf::uint8* S2SDeployToolExecuteMySQLReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->table(), target);
  }

  // map<string, bytes> values = 2;
  if (!this->values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolExecuteMySQLReq.ValuesEntry.key");
      }
    };

    if (deterministic &&
        this->values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it) {
        entry.reset(values_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolExecuteMySQLReq)
  return target;
}

size_t S2SDeployToolExecuteMySQLReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> values = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  {
    ::std::unique_ptr<S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes table = 1;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->table());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolExecuteMySQLReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolExecuteMySQLReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolExecuteMySQLReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolExecuteMySQLReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolExecuteMySQLReq)
    MergeFrom(*source);
  }
}

void S2SDeployToolExecuteMySQLReq::MergeFrom(const S2SDeployToolExecuteMySQLReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
}

void S2SDeployToolExecuteMySQLReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolExecuteMySQLReq::CopyFrom(const S2SDeployToolExecuteMySQLReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolExecuteMySQLReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolExecuteMySQLReq::IsInitialized() const {
  return true;
}

void S2SDeployToolExecuteMySQLReq::Swap(S2SDeployToolExecuteMySQLReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolExecuteMySQLReq::InternalSwap(S2SDeployToolExecuteMySQLReq* other) {
  using std::swap;
  values_.Swap(&other->values_);
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolExecuteMySQLReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse() {}
S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse::MergeFrom(const S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[51];
}
void S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SDeployToolExecuteMySQLAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolExecuteMySQLAck::kTableFieldNumber;
const int S2SDeployToolExecuteMySQLAck::kValuesFieldNumber;
const int S2SDeployToolExecuteMySQLAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolExecuteMySQLAck::S2SDeployToolExecuteMySQLAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolExecuteMySQLAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolExecuteMySQLAck)
}
S2SDeployToolExecuteMySQLAck::S2SDeployToolExecuteMySQLAck(const S2SDeployToolExecuteMySQLAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolExecuteMySQLAck)
}

void S2SDeployToolExecuteMySQLAck::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

S2SDeployToolExecuteMySQLAck::~S2SDeployToolExecuteMySQLAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolExecuteMySQLAck)
  SharedDtor();
}

void S2SDeployToolExecuteMySQLAck::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployToolExecuteMySQLAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolExecuteMySQLAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolExecuteMySQLAck& S2SDeployToolExecuteMySQLAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolExecuteMySQLAck.base);
  return *internal_default_instance();
}


void S2SDeployToolExecuteMySQLAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
  _internal_metadata_.Clear();
}

bool S2SDeployToolExecuteMySQLAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&values_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SDeployToolExecuteMySQLAck.ValuesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolExecuteMySQLAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolExecuteMySQLAck)
  return false;
#undef DO_
}

void S2SDeployToolExecuteMySQLAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->table(), output);
  }

  // map<string, bytes> values = 2;
  if (!this->values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolExecuteMySQLAck.ValuesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it) {
        entry.reset(values_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolExecuteMySQLAck)
}

::google::protobuf::uint8* S2SDeployToolExecuteMySQLAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->table(), target);
  }

  // map<string, bytes> values = 2;
  if (!this->values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolExecuteMySQLAck.ValuesEntry.key");
      }
    };

    if (deterministic &&
        this->values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it) {
        entry.reset(values_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolExecuteMySQLAck)
  return target;
}

size_t S2SDeployToolExecuteMySQLAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> values = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  {
    ::std::unique_ptr<S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes table = 1;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->table());
  }

  // bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolExecuteMySQLAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolExecuteMySQLAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolExecuteMySQLAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolExecuteMySQLAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolExecuteMySQLAck)
    MergeFrom(*source);
  }
}

void S2SDeployToolExecuteMySQLAck::MergeFrom(const S2SDeployToolExecuteMySQLAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SDeployToolExecuteMySQLAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolExecuteMySQLAck::CopyFrom(const S2SDeployToolExecuteMySQLAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolExecuteMySQLAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolExecuteMySQLAck::IsInitialized() const {
  return true;
}

void S2SDeployToolExecuteMySQLAck::Swap(S2SDeployToolExecuteMySQLAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolExecuteMySQLAck::InternalSwap(S2SDeployToolExecuteMySQLAck* other) {
  using std::swap;
  values_.Swap(&other->values_);
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolExecuteMySQLAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse() {}
S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse::MergeFrom(const S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[53];
}
void S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SDeployToolQueryMySQLReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolQueryMySQLReq::kTableFieldNumber;
const int S2SDeployToolQueryMySQLReq::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolQueryMySQLReq::S2SDeployToolQueryMySQLReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryMySQLReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolQueryMySQLReq)
}
S2SDeployToolQueryMySQLReq::S2SDeployToolQueryMySQLReq(const S2SDeployToolQueryMySQLReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keys_.MergeFrom(from.keys_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolQueryMySQLReq)
}

void S2SDeployToolQueryMySQLReq::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2SDeployToolQueryMySQLReq::~S2SDeployToolQueryMySQLReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolQueryMySQLReq)
  SharedDtor();
}

void S2SDeployToolQueryMySQLReq::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployToolQueryMySQLReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolQueryMySQLReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolQueryMySQLReq& S2SDeployToolQueryMySQLReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryMySQLReq.base);
  return *internal_default_instance();
}


void S2SDeployToolQueryMySQLReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolQueryMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool S2SDeployToolQueryMySQLReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolQueryMySQLReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&keys_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SDeployToolQueryMySQLReq.KeysEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolQueryMySQLReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolQueryMySQLReq)
  return false;
#undef DO_
}

void S2SDeployToolQueryMySQLReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolQueryMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->table(), output);
  }

  // map<string, bytes> keys = 2;
  if (!this->keys().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolQueryMySQLReq.KeysEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->keys().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(keys_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it) {
        entry.reset(keys_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolQueryMySQLReq)
}

::google::protobuf::uint8* S2SDeployToolQueryMySQLReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolQueryMySQLReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->table(), target);
  }

  // map<string, bytes> keys = 2;
  if (!this->keys().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SDeployToolQueryMySQLReq.KeysEntry.key");
      }
    };

    if (deterministic &&
        this->keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->keys().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(keys_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->keys().begin();
          it != this->keys().end(); ++it) {
        entry.reset(keys_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolQueryMySQLReq)
  return target;
}

size_t S2SDeployToolQueryMySQLReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolQueryMySQLReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  {
    ::std::unique_ptr<S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->keys().begin();
        it != this->keys().end(); ++it) {
      entry.reset(keys_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes table = 1;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->table());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolQueryMySQLReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolQueryMySQLReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolQueryMySQLReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolQueryMySQLReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolQueryMySQLReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolQueryMySQLReq)
    MergeFrom(*source);
  }
}

void S2SDeployToolQueryMySQLReq::MergeFrom(const S2SDeployToolQueryMySQLReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolQueryMySQLReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
}

void S2SDeployToolQueryMySQLReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolQueryMySQLReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolQueryMySQLReq::CopyFrom(const S2SDeployToolQueryMySQLReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolQueryMySQLReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolQueryMySQLReq::IsInitialized() const {
  return true;
}

void S2SDeployToolQueryMySQLReq::Swap(S2SDeployToolQueryMySQLReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolQueryMySQLReq::InternalSwap(S2SDeployToolQueryMySQLReq* other) {
  using std::swap;
  keys_.Swap(&other->keys_);
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolQueryMySQLReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBMySQLData_ValuesEntry_DoNotUse::PBMySQLData_ValuesEntry_DoNotUse() {}
PBMySQLData_ValuesEntry_DoNotUse::PBMySQLData_ValuesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBMySQLData_ValuesEntry_DoNotUse::MergeFrom(const PBMySQLData_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBMySQLData_ValuesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[55];
}
void PBMySQLData_ValuesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBMySQLData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMySQLData::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMySQLData::PBMySQLData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_PBMySQLData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMySQLData)
}
PBMySQLData::PBMySQLData(const PBMySQLData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMySQLData)
}

void PBMySQLData::SharedCtor() {
}

PBMySQLData::~PBMySQLData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMySQLData)
  SharedDtor();
}

void PBMySQLData::SharedDtor() {
}

void PBMySQLData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMySQLData::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMySQLData& PBMySQLData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_PBMySQLData.base);
  return *internal_default_instance();
}


void PBMySQLData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMySQLData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool PBMySQLData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMySQLData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBMySQLData_ValuesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBMySQLData_ValuesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&values_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBMySQLData.ValuesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMySQLData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMySQLData)
  return false;
#undef DO_
}

void PBMySQLData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMySQLData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> values = 1;
  if (!this->values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMySQLData.ValuesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMySQLData_ValuesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMySQLData_ValuesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it) {
        entry.reset(values_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMySQLData)
}

::google::protobuf::uint8* PBMySQLData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMySQLData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> values = 1;
  if (!this->values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMySQLData.ValuesEntry.key");
      }
    };

    if (deterministic &&
        this->values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMySQLData_ValuesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(values_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMySQLData_ValuesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->values().begin();
          it != this->values().end(); ++it) {
        entry.reset(values_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMySQLData)
  return target;
}

size_t PBMySQLData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMySQLData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  {
    ::std::unique_ptr<PBMySQLData_ValuesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->values().begin();
        it != this->values().end(); ++it) {
      entry.reset(values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMySQLData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMySQLData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMySQLData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMySQLData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMySQLData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMySQLData)
    MergeFrom(*source);
  }
}

void PBMySQLData::MergeFrom(const PBMySQLData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMySQLData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void PBMySQLData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMySQLData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMySQLData::CopyFrom(const PBMySQLData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMySQLData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMySQLData::IsInitialized() const {
  return true;
}

void PBMySQLData::Swap(PBMySQLData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMySQLData::InternalSwap(PBMySQLData* other) {
  using std::swap;
  values_.Swap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMySQLData::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBMySQLDatas::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMySQLDatas::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMySQLDatas::PBMySQLDatas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_PBMySQLDatas.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMySQLDatas)
}
PBMySQLDatas::PBMySQLDatas(const PBMySQLDatas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMySQLDatas)
}

void PBMySQLDatas::SharedCtor() {
}

PBMySQLDatas::~PBMySQLDatas() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMySQLDatas)
  SharedDtor();
}

void PBMySQLDatas::SharedDtor() {
}

void PBMySQLDatas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMySQLDatas::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMySQLDatas& PBMySQLDatas::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_PBMySQLDatas.base);
  return *internal_default_instance();
}


void PBMySQLDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMySQLDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

bool PBMySQLDatas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMySQLDatas)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBMySQLData data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMySQLDatas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMySQLDatas)
  return false;
#undef DO_
}

void PBMySQLDatas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMySQLDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBMySQLData data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMySQLDatas)
}

::google::protobuf::uint8* PBMySQLDatas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMySQLDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBMySQLData data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMySQLDatas)
  return target;
}

size_t PBMySQLDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMySQLDatas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBMySQLData data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMySQLDatas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMySQLDatas)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMySQLDatas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMySQLDatas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMySQLDatas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMySQLDatas)
    MergeFrom(*source);
  }
}

void PBMySQLDatas::MergeFrom(const PBMySQLDatas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMySQLDatas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void PBMySQLDatas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMySQLDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMySQLDatas::CopyFrom(const PBMySQLDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMySQLDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMySQLDatas::IsInitialized() const {
  return true;
}

void PBMySQLDatas::Swap(PBMySQLDatas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMySQLDatas::InternalSwap(PBMySQLDatas* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMySQLDatas::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployToolQueryMySQLAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SDeployToolQueryMySQLAck_default_instance_._instance.get_mutable()->datas_ = const_cast< ::KFMsg::PBMySQLDatas*>(
      ::KFMsg::PBMySQLDatas::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolQueryMySQLAck::kTableFieldNumber;
const int S2SDeployToolQueryMySQLAck::kDatasFieldNumber;
const int S2SDeployToolQueryMySQLAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolQueryMySQLAck::S2SDeployToolQueryMySQLAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryMySQLAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolQueryMySQLAck)
}
S2SDeployToolQueryMySQLAck::S2SDeployToolQueryMySQLAck(const S2SDeployToolQueryMySQLAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table().size() > 0) {
    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_datas()) {
    datas_ = new ::KFMsg::PBMySQLDatas(*from.datas_);
  } else {
    datas_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolQueryMySQLAck)
}

void S2SDeployToolQueryMySQLAck::SharedCtor() {
  table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&datas_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&datas_)) + sizeof(result_));
}

S2SDeployToolQueryMySQLAck::~S2SDeployToolQueryMySQLAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolQueryMySQLAck)
  SharedDtor();
}

void S2SDeployToolQueryMySQLAck::SharedDtor() {
  table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete datas_;
}

void S2SDeployToolQueryMySQLAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolQueryMySQLAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolQueryMySQLAck& S2SDeployToolQueryMySQLAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryMySQLAck.base);
  return *internal_default_instance();
}


void S2SDeployToolQueryMySQLAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolQueryMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && datas_ != NULL) {
    delete datas_;
  }
  datas_ = NULL;
  result_ = false;
  _internal_metadata_.Clear();
}

bool S2SDeployToolQueryMySQLAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolQueryMySQLAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMySQLDatas datas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolQueryMySQLAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolQueryMySQLAck)
  return false;
#undef DO_
}

void S2SDeployToolQueryMySQLAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolQueryMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->table(), output);
  }

  // .KFMsg.PBMySQLDatas datas = 2;
  if (this->has_datas()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_datas(), output);
  }

  // bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolQueryMySQLAck)
}

::google::protobuf::uint8* S2SDeployToolQueryMySQLAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolQueryMySQLAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes table = 1;
  if (this->table().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->table(), target);
  }

  // .KFMsg.PBMySQLDatas datas = 2;
  if (this->has_datas()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_datas(), deterministic, target);
  }

  // bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolQueryMySQLAck)
  return target;
}

size_t S2SDeployToolQueryMySQLAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolQueryMySQLAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes table = 1;
  if (this->table().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->table());
  }

  // .KFMsg.PBMySQLDatas datas = 2;
  if (this->has_datas()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *datas_);
  }

  // bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolQueryMySQLAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolQueryMySQLAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolQueryMySQLAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolQueryMySQLAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolQueryMySQLAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolQueryMySQLAck)
    MergeFrom(*source);
  }
}

void S2SDeployToolQueryMySQLAck::MergeFrom(const S2SDeployToolQueryMySQLAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolQueryMySQLAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.table().size() > 0) {

    table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_);
  }
  if (from.has_datas()) {
    mutable_datas()->::KFMsg::PBMySQLDatas::MergeFrom(from.datas());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SDeployToolQueryMySQLAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolQueryMySQLAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolQueryMySQLAck::CopyFrom(const S2SDeployToolQueryMySQLAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolQueryMySQLAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolQueryMySQLAck::IsInitialized() const {
  return true;
}

void S2SDeployToolQueryMySQLAck::Swap(S2SDeployToolQueryMySQLAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolQueryMySQLAck::InternalSwap(S2SDeployToolQueryMySQLAck* other) {
  using std::swap;
  table_.Swap(&other->table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(datas_, other->datas_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolQueryMySQLAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployToolQueryToolIdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolQueryToolIdReq::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolQueryToolIdReq::S2SDeployToolQueryToolIdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryToolIdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolQueryToolIdReq)
}
S2SDeployToolQueryToolIdReq::S2SDeployToolQueryToolIdReq(const S2SDeployToolQueryToolIdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolQueryToolIdReq)
}

void S2SDeployToolQueryToolIdReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2SDeployToolQueryToolIdReq::~S2SDeployToolQueryToolIdReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolQueryToolIdReq)
  SharedDtor();
}

void S2SDeployToolQueryToolIdReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDeployToolQueryToolIdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolQueryToolIdReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolQueryToolIdReq& S2SDeployToolQueryToolIdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryToolIdReq.base);
  return *internal_default_instance();
}


void S2SDeployToolQueryToolIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolQueryToolIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool S2SDeployToolQueryToolIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolQueryToolIdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolQueryToolIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolQueryToolIdReq)
  return false;
#undef DO_
}

void S2SDeployToolQueryToolIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolQueryToolIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolQueryToolIdReq)
}

::google::protobuf::uint8* S2SDeployToolQueryToolIdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolQueryToolIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolQueryToolIdReq)
  return target;
}

size_t S2SDeployToolQueryToolIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolQueryToolIdReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolQueryToolIdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolQueryToolIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolQueryToolIdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolQueryToolIdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolQueryToolIdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolQueryToolIdReq)
    MergeFrom(*source);
  }
}

void S2SDeployToolQueryToolIdReq::MergeFrom(const S2SDeployToolQueryToolIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolQueryToolIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
}

void S2SDeployToolQueryToolIdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolQueryToolIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolQueryToolIdReq::CopyFrom(const S2SDeployToolQueryToolIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolQueryToolIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolQueryToolIdReq::IsInitialized() const {
  return true;
}

void S2SDeployToolQueryToolIdReq::Swap(S2SDeployToolQueryToolIdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolQueryToolIdReq::InternalSwap(S2SDeployToolQueryToolIdReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolQueryToolIdReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployToolQueryToolIdAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployToolQueryToolIdAck::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployToolQueryToolIdAck::S2SDeployToolQueryToolIdAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryToolIdAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployToolQueryToolIdAck)
}
S2SDeployToolQueryToolIdAck::S2SDeployToolQueryToolIdAck(const S2SDeployToolQueryToolIdAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployToolQueryToolIdAck)
}

void S2SDeployToolQueryToolIdAck::SharedCtor() {
  id_ = 0u;
}

S2SDeployToolQueryToolIdAck::~S2SDeployToolQueryToolIdAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployToolQueryToolIdAck)
  SharedDtor();
}

void S2SDeployToolQueryToolIdAck::SharedDtor() {
}

void S2SDeployToolQueryToolIdAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployToolQueryToolIdAck::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployToolQueryToolIdAck& S2SDeployToolQueryToolIdAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployToolQueryToolIdAck.base);
  return *internal_default_instance();
}


void S2SDeployToolQueryToolIdAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployToolQueryToolIdAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SDeployToolQueryToolIdAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployToolQueryToolIdAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployToolQueryToolIdAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployToolQueryToolIdAck)
  return false;
#undef DO_
}

void S2SDeployToolQueryToolIdAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployToolQueryToolIdAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployToolQueryToolIdAck)
}

::google::protobuf::uint8* S2SDeployToolQueryToolIdAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployToolQueryToolIdAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployToolQueryToolIdAck)
  return target;
}

size_t S2SDeployToolQueryToolIdAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployToolQueryToolIdAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployToolQueryToolIdAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployToolQueryToolIdAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployToolQueryToolIdAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployToolQueryToolIdAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployToolQueryToolIdAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployToolQueryToolIdAck)
    MergeFrom(*source);
  }
}

void S2SDeployToolQueryToolIdAck::MergeFrom(const S2SDeployToolQueryToolIdAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployToolQueryToolIdAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2SDeployToolQueryToolIdAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployToolQueryToolIdAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployToolQueryToolIdAck::CopyFrom(const S2SDeployToolQueryToolIdAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployToolQueryToolIdAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployToolQueryToolIdAck::IsInitialized() const {
  return true;
}

void S2SDeployToolQueryToolIdAck::Swap(S2SDeployToolQueryToolIdAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployToolQueryToolIdAck::InternalSwap(S2SDeployToolQueryToolIdAck* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployToolQueryToolIdAck::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeployHeartbeatToAgentReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeployHeartbeatToAgentReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeployHeartbeatToAgentReq::S2SDeployHeartbeatToAgentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SDeployHeartbeatToAgentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeployHeartbeatToAgentReq)
}
S2SDeployHeartbeatToAgentReq::S2SDeployHeartbeatToAgentReq(const S2SDeployHeartbeatToAgentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeployHeartbeatToAgentReq)
}

void S2SDeployHeartbeatToAgentReq::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
}

S2SDeployHeartbeatToAgentReq::~S2SDeployHeartbeatToAgentReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeployHeartbeatToAgentReq)
  SharedDtor();
}

void S2SDeployHeartbeatToAgentReq::SharedDtor() {
}

void S2SDeployHeartbeatToAgentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeployHeartbeatToAgentReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeployHeartbeatToAgentReq& S2SDeployHeartbeatToAgentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SDeployHeartbeatToAgentReq.base);
  return *internal_default_instance();
}


void S2SDeployHeartbeatToAgentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDeployHeartbeatToAgentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeployHeartbeatToAgentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeployHeartbeatToAgentReq)
  return false;
#undef DO_
}

void S2SDeployHeartbeatToAgentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeployHeartbeatToAgentReq)
}

::google::protobuf::uint8* S2SDeployHeartbeatToAgentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeployHeartbeatToAgentReq)
  return target;
}

size_t S2SDeployHeartbeatToAgentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeployHeartbeatToAgentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeployHeartbeatToAgentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeployHeartbeatToAgentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeployHeartbeatToAgentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeployHeartbeatToAgentReq)
    MergeFrom(*source);
  }
}

void S2SDeployHeartbeatToAgentReq::MergeFrom(const S2SDeployHeartbeatToAgentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2SDeployHeartbeatToAgentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeployHeartbeatToAgentReq::CopyFrom(const S2SDeployHeartbeatToAgentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeployHeartbeatToAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeployHeartbeatToAgentReq::IsInitialized() const {
  return true;
}

void S2SDeployHeartbeatToAgentReq::Swap(S2SDeployHeartbeatToAgentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeployHeartbeatToAgentReq::InternalSwap(S2SDeployHeartbeatToAgentReq* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeployHeartbeatToAgentReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBRemoteLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRemoteLog::kLevelFieldNumber;
const int PBRemoteLog::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRemoteLog::PBRemoteLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_PBRemoteLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRemoteLog)
}
PBRemoteLog::PBRemoteLog(const PBRemoteLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRemoteLog)
}

void PBRemoteLog::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0u;
}

PBRemoteLog::~PBRemoteLog() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRemoteLog)
  SharedDtor();
}

void PBRemoteLog::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBRemoteLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRemoteLog::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRemoteLog& PBRemoteLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_PBRemoteLog.base);
  return *internal_default_instance();
}


void PBRemoteLog::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRemoteLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0u;
  _internal_metadata_.Clear();
}

bool PBRemoteLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRemoteLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRemoteLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRemoteLog)
  return false;
#undef DO_
}

void PBRemoteLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRemoteLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRemoteLog)
}

::google::protobuf::uint8* PBRemoteLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRemoteLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRemoteLog)
  return target;
}

size_t PBRemoteLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRemoteLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRemoteLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRemoteLog)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRemoteLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRemoteLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRemoteLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRemoteLog)
    MergeFrom(*source);
  }
}

void PBRemoteLog::MergeFrom(const PBRemoteLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRemoteLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void PBRemoteLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRemoteLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRemoteLog::CopyFrom(const PBRemoteLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRemoteLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRemoteLog::IsInitialized() const {
  return true;
}

void PBRemoteLog::Swap(PBRemoteLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRemoteLog::InternalSwap(PBRemoteLog* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRemoteLog::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRemoteLogToServerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRemoteLogToServerReq::kAppnameFieldNumber;
const int S2SRemoteLogToServerReq::kApptypeFieldNumber;
const int S2SRemoteLogToServerReq::kStrappidFieldNumber;
const int S2SRemoteLogToServerReq::kAppidFieldNumber;
const int S2SRemoteLogToServerReq::kZoneidFieldNumber;
const int S2SRemoteLogToServerReq::kLogdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRemoteLogToServerReq::S2SRemoteLogToServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameMessage_2eproto::scc_info_S2SRemoteLogToServerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRemoteLogToServerReq)
}
S2SRemoteLogToServerReq::S2SRemoteLogToServerReq(const S2SRemoteLogToServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      logdata_(from.logdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apptype().size() > 0) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  strappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strappid().size() > 0) {
    strappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strappid_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRemoteLogToServerReq)
}

void S2SRemoteLogToServerReq::SharedCtor() {
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(zoneid_));
}

S2SRemoteLogToServerReq::~S2SRemoteLogToServerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRemoteLogToServerReq)
  SharedDtor();
}

void S2SRemoteLogToServerReq::SharedDtor() {
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strappid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRemoteLogToServerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRemoteLogToServerReq::descriptor() {
  ::protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRemoteLogToServerReq& S2SRemoteLogToServerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameMessage_2eproto::scc_info_S2SRemoteLogToServerReq.base);
  return *internal_default_instance();
}


void S2SRemoteLogToServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRemoteLogToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logdata_.Clear();
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strappid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SRemoteLogToServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRemoteLogToServerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes appname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes apptype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apptype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes strappid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_strappid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRemoteLog logdata = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_logdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRemoteLogToServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRemoteLogToServerReq)
  return false;
#undef DO_
}

void S2SRemoteLogToServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRemoteLogToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->appname(), output);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->apptype(), output);
  }

  // bytes strappid = 3;
  if (this->strappid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->strappid(), output);
  }

  // uint64 appid = 4;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->appid(), output);
  }

  // uint32 zoneid = 5;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->zoneid(), output);
  }

  // repeated .KFMsg.PBRemoteLog logdata = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->logdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRemoteLogToServerReq)
}

::google::protobuf::uint8* S2SRemoteLogToServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRemoteLogToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->appname(), target);
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->apptype(), target);
  }

  // bytes strappid = 3;
  if (this->strappid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->strappid(), target);
  }

  // uint64 appid = 4;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->appid(), target);
  }

  // uint32 zoneid = 5;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->zoneid(), target);
  }

  // repeated .KFMsg.PBRemoteLog logdata = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->logdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRemoteLogToServerReq)
  return target;
}

size_t S2SRemoteLogToServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRemoteLogToServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRemoteLog logdata = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->logdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logdata(static_cast<int>(i)));
    }
  }

  // bytes appname = 1;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appname());
  }

  // bytes apptype = 2;
  if (this->apptype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->apptype());
  }

  // bytes strappid = 3;
  if (this->strappid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->strappid());
  }

  // uint64 appid = 4;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // uint32 zoneid = 5;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRemoteLogToServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRemoteLogToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRemoteLogToServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRemoteLogToServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRemoteLogToServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRemoteLogToServerReq)
    MergeFrom(*source);
  }
}

void S2SRemoteLogToServerReq::MergeFrom(const S2SRemoteLogToServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRemoteLogToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  logdata_.MergeFrom(from.logdata_);
  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.apptype().size() > 0) {

    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.strappid().size() > 0) {

    strappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strappid_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SRemoteLogToServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRemoteLogToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRemoteLogToServerReq::CopyFrom(const S2SRemoteLogToServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRemoteLogToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRemoteLogToServerReq::IsInitialized() const {
  return true;
}

void S2SRemoteLogToServerReq::Swap(S2SRemoteLogToServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRemoteLogToServerReq::InternalSwap(S2SRemoteLogToServerReq* other) {
  using std::swap;
  CastToBase(&logdata_)->InternalSwap(CastToBase(&other->logdata_));
  appname_.Swap(&other->appname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apptype_.Swap(&other->apptype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  strappid_.Swap(&other->strappid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRemoteLogToServerReq::GetMetadata() const {
  protobuf_FrameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::ListenData* Arena::CreateMaybeMessage< ::KFMsg::ListenData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::ListenData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::RegisterToServerReq* Arena::CreateMaybeMessage< ::KFMsg::RegisterToServerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::RegisterToServerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::RegisterToServerAck* Arena::CreateMaybeMessage< ::KFMsg::RegisterToServerAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::RegisterToServerAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::TellRegisterToServer* Arena::CreateMaybeMessage< ::KFMsg::TellRegisterToServer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::TellRegisterToServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::TellUnRegisterFromServer* Arena::CreateMaybeMessage< ::KFMsg::TellUnRegisterFromServer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::TellUnRegisterFromServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellDiscoverServerToMaster* Arena::CreateMaybeMessage< ::KFMsg::S2STellDiscoverServerToMaster >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellDiscoverServerToMaster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellLostServerToMaster* Arena::CreateMaybeMessage< ::KFMsg::S2STellLostServerToMaster >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellLostServerToMaster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellRegisterServerToMaster* Arena::CreateMaybeMessage< ::KFMsg::S2STellRegisterServerToMaster >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellRegisterServerToMaster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellServerListToMaster* Arena::CreateMaybeMessage< ::KFMsg::S2STellServerListToMaster >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellServerListToMaster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterRegisterToMasterReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterRegisterToMasterReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterRegisterToMasterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterSyncProxyToMasterReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterSyncProxyToMasterReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterSyncProxyToMasterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterAuthToMasterReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterAuthToMasterReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterAuthToMasterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterAuthToClientAck* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterAuthToClientAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterAuthToClientAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterTokenToProxyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterTokenToProxyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterTokenToProxyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterTokenToMasterReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterTokenToMasterReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterTokenToMasterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterVerifyToProxyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterVerifyToProxyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterVerifyToProxyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterTokenToProxyAck* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterTokenToProxyAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterTokenToProxyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterTokenToMasterAck* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterTokenToMasterAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterTokenToMasterAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterVerifyToClientAck* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterVerifyToClientAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterVerifyToClientAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterClientDiscoverToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterClientDiscoverToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterClientDiscoverToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterClientLostToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterClientLostToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterClientLostToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClusterLostProxyToMasterReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClusterLostProxyToMasterReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClusterLostProxyToMasterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRoute* Arena::CreateMaybeMessage< ::KFMsg::PBRoute >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRoute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteMessageToClientAck* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteMessageToClientAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteMessageToClientAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteMessageToNameAllReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteMessageToNameAllReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteMessageToNameAllReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteMessageToNameRandReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteMessageToNameRandReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteMessageToNameRandReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteMessageToNameBalanceReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteMessageToNameBalanceReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteMessageToNameBalanceReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteMessageToNameObjectReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteMessageToNameObjectReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteMessageToNameObjectReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteMessageToServerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteMessageToServerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteMessageToServerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteMessageToPlayerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteMessageToPlayerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteMessageToPlayerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteClientLostToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteClientLostToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteClientLostToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteDiscoverToClientReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteDiscoverToClientReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteDiscoverToClientReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteSyncObjectToProxyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteSyncObjectToProxyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteSyncObjectToProxyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteSyncObjectToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteSyncObjectToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteSyncObjectToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteAddObjectToProxyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteAddObjectToProxyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteAddObjectToProxyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteAddObjectToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteAddObjectToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteAddObjectToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteRemoveObjectToProxyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteRemoveObjectToProxyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteRemoveObjectToProxyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRouteRemoveObjectToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRouteRemoveObjectToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRouteRemoveObjectToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRegisterAgentToServerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRegisterAgentToServerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRegisterAgentToServerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBDeployCommand* Arena::CreateMaybeMessage< ::KFMsg::PBDeployCommand >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBDeployCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployCommandToAgentReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployCommandToAgentReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployCommandToAgentReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployCommandToClientReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployCommandToClientReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployCommandToClientReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolCommandReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolCommandReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolCommandReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployLogToToolAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployLogToToolAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployLogToToolAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployLogToServerAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployLogToServerAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployLogToServerAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolDeleteMySQLReq_KeysEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolDeleteMySQLReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolDeleteMySQLReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolDeleteMySQLReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolDeleteMySQLAck_KeysEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolDeleteMySQLAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolDeleteMySQLAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolDeleteMySQLAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolExecuteMySQLReq_ValuesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolExecuteMySQLReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolExecuteMySQLReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolExecuteMySQLReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolExecuteMySQLAck_ValuesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolExecuteMySQLAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolExecuteMySQLAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolExecuteMySQLAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolQueryMySQLReq_KeysEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolQueryMySQLReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolQueryMySQLReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolQueryMySQLReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMySQLData_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBMySQLData_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMySQLData_ValuesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMySQLData* Arena::CreateMaybeMessage< ::KFMsg::PBMySQLData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMySQLData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMySQLDatas* Arena::CreateMaybeMessage< ::KFMsg::PBMySQLDatas >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMySQLDatas >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolQueryMySQLAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolQueryMySQLAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolQueryMySQLAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolQueryToolIdReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolQueryToolIdReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolQueryToolIdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployToolQueryToolIdAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployToolQueryToolIdAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployToolQueryToolIdAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeployHeartbeatToAgentReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeployHeartbeatToAgentReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeployHeartbeatToAgentReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRemoteLog* Arena::CreateMaybeMessage< ::KFMsg::PBRemoteLog >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRemoteLog >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRemoteLogToServerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRemoteLogToServerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRemoteLogToServerReq >(arena);
}
}  // namespace protobuf
}  // namespace google

#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif

// @@protoc_insertion_point(global_scope)
