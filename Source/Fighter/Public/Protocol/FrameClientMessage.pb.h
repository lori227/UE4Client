// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameClientMessage.proto

#ifndef PROTOBUF_INCLUDED_FrameClientMessage_2eproto
#define PROTOBUF_INCLUDED_FrameClientMessage_2eproto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4946)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "FrameDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_FrameClientMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_FrameClientMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[44];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_FrameClientMessage_2eproto
namespace KFMsg {
class MsgAchieveRewardReq;
class MsgAchieveRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgAchieveRewardReqDefaultTypeInternal _MsgAchieveRewardReq_default_instance_;
class MsgActivityRewardReq;
class MsgActivityRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgActivityRewardReqDefaultTypeInternal _MsgActivityRewardReq_default_instance_;
class MsgAddRelationReq;
class MsgAddRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgAddRelationReqDefaultTypeInternal _MsgAddRelationReq_default_instance_;
class MsgApplyPayOrderAck;
class MsgApplyPayOrderAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgApplyPayOrderAckDefaultTypeInternal _MsgApplyPayOrderAck_default_instance_;
class MsgApplyPayOrderReq;
class MsgApplyPayOrderReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgApplyPayOrderReqDefaultTypeInternal _MsgApplyPayOrderReq_default_instance_;
class MsgBuyStoreReq;
class MsgBuyStoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgBuyStoreReqDefaultTypeInternal _MsgBuyStoreReq_default_instance_;
class MsgCancelSyncReq;
class MsgCancelSyncReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCancelSyncReqDefaultTypeInternal _MsgCancelSyncReq_default_instance_;
class MsgCommandReq;
class MsgCommandReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCommandReqDefaultTypeInternal _MsgCommandReq_default_instance_;
class MsgCompoundReq;
class MsgCompoundReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCompoundReqDefaultTypeInternal _MsgCompoundReq_default_instance_;
class MsgDelRelationReq;
class MsgDelRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDelRelationReqDefaultTypeInternal _MsgDelRelationReq_default_instance_;
class MsgDeleteMailReq;
class MsgDeleteMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDeleteMailReqDefaultTypeInternal _MsgDeleteMailReq_default_instance_;
class MsgLoginAck;
class MsgLoginAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginAckDefaultTypeInternal _MsgLoginAck_default_instance_;
class MsgLoginReq;
class MsgLoginReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginReqDefaultTypeInternal _MsgLoginReq_default_instance_;
class MsgLogoutReq;
class MsgLogoutReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLogoutReqDefaultTypeInternal _MsgLogoutReq_default_instance_;
class MsgMailRewardReq;
class MsgMailRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgMailRewardReqDefaultTypeInternal _MsgMailRewardReq_default_instance_;
class MsgPayResultReq;
class MsgPayResultReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgPayResultReqDefaultTypeInternal _MsgPayResultReq_default_instance_;
class MsgQueryBasicAck;
class MsgQueryBasicAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryBasicAckDefaultTypeInternal _MsgQueryBasicAck_default_instance_;
class MsgQueryBasicReq;
class MsgQueryBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryBasicReqDefaultTypeInternal _MsgQueryBasicReq_default_instance_;
class MsgQueryFriendRankListAck;
class MsgQueryFriendRankListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryFriendRankListAckDefaultTypeInternal _MsgQueryFriendRankListAck_default_instance_;
class MsgQueryFriendRankListReq;
class MsgQueryFriendRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryFriendRankListReqDefaultTypeInternal _MsgQueryFriendRankListReq_default_instance_;
class MsgQueryMailReq;
class MsgQueryMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryMailReqDefaultTypeInternal _MsgQueryMailReq_default_instance_;
class MsgQueryPayReq;
class MsgQueryPayReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPayReqDefaultTypeInternal _MsgQueryPayReq_default_instance_;
class MsgQueryPlayerAck;
class MsgQueryPlayerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerAckDefaultTypeInternal _MsgQueryPlayerAck_default_instance_;
class MsgQueryPlayerReq;
class MsgQueryPlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerReqDefaultTypeInternal _MsgQueryPlayerReq_default_instance_;
class MsgQueryRankListAck;
class MsgQueryRankListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRankListAckDefaultTypeInternal _MsgQueryRankListAck_default_instance_;
class MsgQueryRankListReq;
class MsgQueryRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRankListReqDefaultTypeInternal _MsgQueryRankListReq_default_instance_;
class MsgQueryStoreAck;
class MsgQueryStoreAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryStoreAckDefaultTypeInternal _MsgQueryStoreAck_default_instance_;
class MsgQueryStoreReq;
class MsgQueryStoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryStoreReqDefaultTypeInternal _MsgQueryStoreReq_default_instance_;
class MsgRemoveDataReq;
class MsgRemoveDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgRemoveDataReqDefaultTypeInternal _MsgRemoveDataReq_default_instance_;
class MsgReplyRelationInviteReq;
class MsgReplyRelationInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReplyRelationInviteReqDefaultTypeInternal _MsgReplyRelationInviteReq_default_instance_;
class MsgRequestSyncReq;
class MsgRequestSyncReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgRequestSyncReqDefaultTypeInternal _MsgRequestSyncReq_default_instance_;
class MsgResultDisplay;
class MsgResultDisplayDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgResultDisplayDefaultTypeInternal _MsgResultDisplay_default_instance_;
class MsgSetNameReq;
class MsgSetNameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetNameReqDefaultTypeInternal _MsgSetNameReq_default_instance_;
class MsgSetRefuseRelationInviteReq;
class MsgSetRefuseRelationInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetRefuseRelationInviteReqDefaultTypeInternal _MsgSetRefuseRelationInviteReq_default_instance_;
class MsgSetSexReq;
class MsgSetSexReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetSexReqDefaultTypeInternal _MsgSetSexReq_default_instance_;
class MsgSevenSignInRewardReq;
class MsgSevenSignInRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSevenSignInRewardReqDefaultTypeInternal _MsgSevenSignInRewardReq_default_instance_;
class MsgShowElement;
class MsgShowElementDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgShowElementDefaultTypeInternal _MsgShowElement_default_instance_;
class MsgSyncAddData;
class MsgSyncAddDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncAddDataDefaultTypeInternal _MsgSyncAddData_default_instance_;
class MsgSyncRemoveData;
class MsgSyncRemoveDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncRemoveDataDefaultTypeInternal _MsgSyncRemoveData_default_instance_;
class MsgSyncUpdateData;
class MsgSyncUpdateDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncUpdateDataDefaultTypeInternal _MsgSyncUpdateData_default_instance_;
class MsgTaskRewardReq;
class MsgTaskRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTaskRewardReqDefaultTypeInternal _MsgTaskRewardReq_default_instance_;
class MsgTellBeKick;
class MsgTellBeKickDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellBeKickDefaultTypeInternal _MsgTellBeKick_default_instance_;
class MsgUseItemReq;
class MsgUseItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUseItemReqDefaultTypeInternal _MsgUseItemReq_default_instance_;
class MsgViewMailReq;
class MsgViewMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgViewMailReqDefaultTypeInternal _MsgViewMailReq_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::MsgAchieveRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgAchieveRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgActivityRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgActivityRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgAddRelationReq* Arena::CreateMaybeMessage<::KFMsg::MsgAddRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgApplyPayOrderAck* Arena::CreateMaybeMessage<::KFMsg::MsgApplyPayOrderAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgApplyPayOrderReq* Arena::CreateMaybeMessage<::KFMsg::MsgApplyPayOrderReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgBuyStoreReq* Arena::CreateMaybeMessage<::KFMsg::MsgBuyStoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCancelSyncReq* Arena::CreateMaybeMessage<::KFMsg::MsgCancelSyncReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCommandReq* Arena::CreateMaybeMessage<::KFMsg::MsgCommandReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCompoundReq* Arena::CreateMaybeMessage<::KFMsg::MsgCompoundReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDelRelationReq* Arena::CreateMaybeMessage<::KFMsg::MsgDelRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDeleteMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgDeleteMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginAck* Arena::CreateMaybeMessage<::KFMsg::MsgLoginAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginReq* Arena::CreateMaybeMessage<::KFMsg::MsgLoginReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLogoutReq* Arena::CreateMaybeMessage<::KFMsg::MsgLogoutReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgMailRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgMailRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgPayResultReq* Arena::CreateMaybeMessage<::KFMsg::MsgPayResultReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryBasicAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryBasicAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryBasicReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryFriendRankListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryFriendRankListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryFriendRankListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryFriendRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPayReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPayReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRankListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRankListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRankListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryStoreAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryStoreAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryStoreReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryStoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgRemoveDataReq* Arena::CreateMaybeMessage<::KFMsg::MsgRemoveDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReplyRelationInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgReplyRelationInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgRequestSyncReq* Arena::CreateMaybeMessage<::KFMsg::MsgRequestSyncReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgResultDisplay* Arena::CreateMaybeMessage<::KFMsg::MsgResultDisplay>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetNameReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetNameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetRefuseRelationInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetRefuseRelationInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetSexReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetSexReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSevenSignInRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgSevenSignInRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgShowElement* Arena::CreateMaybeMessage<::KFMsg::MsgShowElement>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncAddData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncAddData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncRemoveData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncRemoveData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncUpdateData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncUpdateData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTaskRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgTaskRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellBeKick* Arena::CreateMaybeMessage<::KFMsg::MsgTellBeKick>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUseItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgUseItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgViewMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgViewMailReq>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum FrameClientProtocol {
  MSG_FRAME_CLIENT_BEGIN = 0,
  MSG_RESULT_DISPLAY = 1,
  MSG_COMMAND_REQ = 2,
  MSG_LOGIN_REQ = 100,
  MSG_LOGIN_ACK = 101,
  MSG_LOGOUT_REQ = 102,
  MSG_TELL_BE_KICK = 103,
  MSG_SYNC_UPDATE_DATA = 201,
  MSG_SYNC_ADD_DATA = 202,
  MSG_SYNC_REMOVE_DATA = 203,
  MSG_REMOVE_DATA_REQ = 204,
  MSG_QUERY_PLAYER_REQ = 205,
  MSG_QUERY_PLAYER_ACK = 206,
  MSG_QUERY_BASIC_REQ = 207,
  MSG_QUERY_BASIC_ACK = 208,
  MSG_SHOW_ELEMENT = 209,
  MSG_REQUEST_SYNC_REQ = 210,
  MSG_CANCEL_SYNC_REQ = 211,
  MSG_SET_NAME_REQ = 300,
  MSG_SET_SEX_REQ = 301,
  MSG_ACHIEVE_REWARD_REQ = 302,
  MSG_TASK_REWARD_REQ = 303,
  MSG_ACTIVITY_REWARD_REQ = 304,
  MSG_COMPOUND_REQ = 305,
  MSG_USE_ITEM_REQ = 306,
  MSG_SEVEN_SIGNIN_REWARD_REQ = 307,
  MSG_VIEW_MAIL_REQ = 401,
  MSG_DELETE_MAIL_REQ = 402,
  MSG_QUERY_MAIL_REQ = 403,
  MSG_MAIL_REWARD_REQ = 404,
  MSG_BUY_STORE_REQ = 411,
  MSG_QUERY_STORE_REQ = 412,
  MSG_QUERY_STORE_ACK = 413,
  MSG_APPLY_PAY_ORDER_REQ = 431,
  MSG_APPLY_PAY_ORDER_ACK = 432,
  MSG_PAY_RESULT_REQ = 433,
  MSG_QUERY_PAY_REQ = 434,
  MSG_ADD_RELATION_REQ = 451,
  MSG_DEL_RELATION_REQ = 452,
  MSG_REPLY_RELATION_INVITE_REQ = 453,
  MSG_SET_REFUSE_RELATION_INVITE_REQ = 454,
  MSG_QUERY_RANK_LIST_REQ = 471,
  MSG_QUERY_RANK_LIST_ACK = 472,
  MSG_QUERY_FRIEND_RANK_LIST_REQ = 473,
  MSG_QUERY_FRIEND_RANK_LIST_ACK = 474,
  FrameClientProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FrameClientProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool FrameClientProtocol_IsValid(int value);
const FrameClientProtocol FrameClientProtocol_MIN = MSG_FRAME_CLIENT_BEGIN;
const FrameClientProtocol FrameClientProtocol_MAX = MSG_QUERY_FRIEND_RANK_LIST_ACK;
const int FrameClientProtocol_ARRAYSIZE = FrameClientProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* FrameClientProtocol_descriptor();
inline const ::std::string& FrameClientProtocol_Name(FrameClientProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    FrameClientProtocol_descriptor(), value);
}
inline bool FrameClientProtocol_Parse(
    const ::std::string& name, FrameClientProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FrameClientProtocol>(
    FrameClientProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgResultDisplay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgResultDisplay) */ {
 public:
  MsgResultDisplay();
  virtual ~MsgResultDisplay();

  MsgResultDisplay(const MsgResultDisplay& from);

  inline MsgResultDisplay& operator=(const MsgResultDisplay& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgResultDisplay(MsgResultDisplay&& from) noexcept
    : MsgResultDisplay() {
    *this = ::std::move(from);
  }

  inline MsgResultDisplay& operator=(MsgResultDisplay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgResultDisplay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgResultDisplay* internal_default_instance() {
    return reinterpret_cast<const MsgResultDisplay*>(
               &_MsgResultDisplay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgResultDisplay* other);
  friend void swap(MsgResultDisplay& a, MsgResultDisplay& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgResultDisplay* New() const final {
    return CreateMaybeMessage<MsgResultDisplay>(NULL);
  }

  MsgResultDisplay* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgResultDisplay>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgResultDisplay& from);
  void MergeFrom(const MsgResultDisplay& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgResultDisplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes param = 2;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param(int index) const;
  ::std::string* mutable_param(int index);
  void set_param(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_param(int index, ::std::string&& value);
  #endif
  void set_param(int index, const char* value);
  void set_param(int index, const void* value, size_t size);
  ::std::string* add_param();
  void add_param(const ::std::string& value);
  #if LANG_CXX11
  void add_param(::std::string&& value);
  #endif
  void add_param(const char* value);
  void add_param(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgResultDisplay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCommandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCommandReq) */ {
 public:
  MsgCommandReq();
  virtual ~MsgCommandReq();

  MsgCommandReq(const MsgCommandReq& from);

  inline MsgCommandReq& operator=(const MsgCommandReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCommandReq(MsgCommandReq&& from) noexcept
    : MsgCommandReq() {
    *this = ::std::move(from);
  }

  inline MsgCommandReq& operator=(MsgCommandReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCommandReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCommandReq* internal_default_instance() {
    return reinterpret_cast<const MsgCommandReq*>(
               &_MsgCommandReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgCommandReq* other);
  friend void swap(MsgCommandReq& a, MsgCommandReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCommandReq* New() const final {
    return CreateMaybeMessage<MsgCommandReq>(NULL);
  }

  MsgCommandReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCommandReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCommandReq& from);
  void MergeFrom(const MsgCommandReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCommandReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes params = 2;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_params(int index, ::std::string&& value);
  #endif
  void set_params(int index, const char* value);
  void set_params(int index, const void* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  #if LANG_CXX11
  void add_params(::std::string&& value);
  #endif
  void add_params(const char* value);
  void add_params(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // bytes command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const void* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCommandReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginReq) */ {
 public:
  MsgLoginReq();
  virtual ~MsgLoginReq();

  MsgLoginReq(const MsgLoginReq& from);

  inline MsgLoginReq& operator=(const MsgLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginReq(MsgLoginReq&& from) noexcept
    : MsgLoginReq() {
    *this = ::std::move(from);
  }

  inline MsgLoginReq& operator=(MsgLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginReq* internal_default_instance() {
    return reinterpret_cast<const MsgLoginReq*>(
               &_MsgLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgLoginReq* other);
  friend void swap(MsgLoginReq& a, MsgLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginReq* New() const final {
    return CreateMaybeMessage<MsgLoginReq>(NULL);
  }

  MsgLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginReq& from);
  void MergeFrom(const MsgLoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginAck) */ {
 public:
  MsgLoginAck();
  virtual ~MsgLoginAck();

  MsgLoginAck(const MsgLoginAck& from);

  inline MsgLoginAck& operator=(const MsgLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginAck(MsgLoginAck&& from) noexcept
    : MsgLoginAck() {
    *this = ::std::move(from);
  }

  inline MsgLoginAck& operator=(MsgLoginAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginAck* internal_default_instance() {
    return reinterpret_cast<const MsgLoginAck*>(
               &_MsgLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgLoginAck* other);
  friend void swap(MsgLoginAck& a, MsgLoginAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginAck* New() const final {
    return CreateMaybeMessage<MsgLoginAck>(NULL);
  }

  MsgLoginAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginAck& from);
  void MergeFrom(const MsgLoginAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject playerdata = 2;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 servertime = 3;
  void clear_servertime();
  static const int kServertimeFieldNumber = 3;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 servertime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLogoutReq) */ {
 public:
  MsgLogoutReq();
  virtual ~MsgLogoutReq();

  MsgLogoutReq(const MsgLogoutReq& from);

  inline MsgLogoutReq& operator=(const MsgLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLogoutReq(MsgLogoutReq&& from) noexcept
    : MsgLogoutReq() {
    *this = ::std::move(from);
  }

  inline MsgLogoutReq& operator=(MsgLogoutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogoutReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLogoutReq* internal_default_instance() {
    return reinterpret_cast<const MsgLogoutReq*>(
               &_MsgLogoutReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgLogoutReq* other);
  friend void swap(MsgLogoutReq& a, MsgLogoutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLogoutReq* New() const final {
    return CreateMaybeMessage<MsgLogoutReq>(NULL);
  }

  MsgLogoutReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLogoutReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLogoutReq& from);
  void MergeFrom(const MsgLogoutReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellBeKick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellBeKick) */ {
 public:
  MsgTellBeKick();
  virtual ~MsgTellBeKick();

  MsgTellBeKick(const MsgTellBeKick& from);

  inline MsgTellBeKick& operator=(const MsgTellBeKick& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellBeKick(MsgTellBeKick&& from) noexcept
    : MsgTellBeKick() {
    *this = ::std::move(from);
  }

  inline MsgTellBeKick& operator=(MsgTellBeKick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellBeKick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellBeKick* internal_default_instance() {
    return reinterpret_cast<const MsgTellBeKick*>(
               &_MsgTellBeKick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgTellBeKick* other);
  friend void swap(MsgTellBeKick& a, MsgTellBeKick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellBeKick* New() const final {
    return CreateMaybeMessage<MsgTellBeKick>(NULL);
  }

  MsgTellBeKick* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellBeKick>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellBeKick& from);
  void MergeFrom(const MsgTellBeKick& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellBeKick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellBeKick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncUpdateData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncUpdateData) */ {
 public:
  MsgSyncUpdateData();
  virtual ~MsgSyncUpdateData();

  MsgSyncUpdateData(const MsgSyncUpdateData& from);

  inline MsgSyncUpdateData& operator=(const MsgSyncUpdateData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncUpdateData(MsgSyncUpdateData&& from) noexcept
    : MsgSyncUpdateData() {
    *this = ::std::move(from);
  }

  inline MsgSyncUpdateData& operator=(MsgSyncUpdateData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncUpdateData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncUpdateData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncUpdateData*>(
               &_MsgSyncUpdateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgSyncUpdateData* other);
  friend void swap(MsgSyncUpdateData& a, MsgSyncUpdateData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncUpdateData* New() const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(NULL);
  }

  MsgSyncUpdateData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncUpdateData& from);
  void MergeFrom(const MsgSyncUpdateData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncUpdateData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncUpdateData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncAddData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncAddData) */ {
 public:
  MsgSyncAddData();
  virtual ~MsgSyncAddData();

  MsgSyncAddData(const MsgSyncAddData& from);

  inline MsgSyncAddData& operator=(const MsgSyncAddData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncAddData(MsgSyncAddData&& from) noexcept
    : MsgSyncAddData() {
    *this = ::std::move(from);
  }

  inline MsgSyncAddData& operator=(MsgSyncAddData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncAddData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncAddData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncAddData*>(
               &_MsgSyncAddData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgSyncAddData* other);
  friend void swap(MsgSyncAddData& a, MsgSyncAddData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncAddData* New() const final {
    return CreateMaybeMessage<MsgSyncAddData>(NULL);
  }

  MsgSyncAddData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncAddData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncAddData& from);
  void MergeFrom(const MsgSyncAddData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncAddData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncAddData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncRemoveData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncRemoveData) */ {
 public:
  MsgSyncRemoveData();
  virtual ~MsgSyncRemoveData();

  MsgSyncRemoveData(const MsgSyncRemoveData& from);

  inline MsgSyncRemoveData& operator=(const MsgSyncRemoveData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncRemoveData(MsgSyncRemoveData&& from) noexcept
    : MsgSyncRemoveData() {
    *this = ::std::move(from);
  }

  inline MsgSyncRemoveData& operator=(MsgSyncRemoveData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncRemoveData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncRemoveData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncRemoveData*>(
               &_MsgSyncRemoveData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MsgSyncRemoveData* other);
  friend void swap(MsgSyncRemoveData& a, MsgSyncRemoveData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncRemoveData* New() const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(NULL);
  }

  MsgSyncRemoveData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncRemoveData& from);
  void MergeFrom(const MsgSyncRemoveData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncRemoveData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncRemoveData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgShowElement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgShowElement) */ {
 public:
  MsgShowElement();
  virtual ~MsgShowElement();

  MsgShowElement(const MsgShowElement& from);

  inline MsgShowElement& operator=(const MsgShowElement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgShowElement(MsgShowElement&& from) noexcept
    : MsgShowElement() {
    *this = ::std::move(from);
  }

  inline MsgShowElement& operator=(MsgShowElement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShowElement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgShowElement* internal_default_instance() {
    return reinterpret_cast<const MsgShowElement*>(
               &_MsgShowElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(MsgShowElement* other);
  friend void swap(MsgShowElement& a, MsgShowElement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgShowElement* New() const final {
    return CreateMaybeMessage<MsgShowElement>(NULL);
  }

  MsgShowElement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgShowElement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgShowElement& from);
  void MergeFrom(const MsgShowElement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgShowElement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBShowElement element = 1;
  bool has_element() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  private:
  const ::KFMsg::PBShowElement& _internal_element() const;
  public:
  const ::KFMsg::PBShowElement& element() const;
  ::KFMsg::PBShowElement* release_element();
  ::KFMsg::PBShowElement* mutable_element();
  void set_allocated_element(::KFMsg::PBShowElement* element);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgShowElement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBShowElement* element_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRemoveDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgRemoveDataReq) */ {
 public:
  MsgRemoveDataReq();
  virtual ~MsgRemoveDataReq();

  MsgRemoveDataReq(const MsgRemoveDataReq& from);

  inline MsgRemoveDataReq& operator=(const MsgRemoveDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRemoveDataReq(MsgRemoveDataReq&& from) noexcept
    : MsgRemoveDataReq() {
    *this = ::std::move(from);
  }

  inline MsgRemoveDataReq& operator=(MsgRemoveDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRemoveDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRemoveDataReq* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveDataReq*>(
               &_MsgRemoveDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(MsgRemoveDataReq* other);
  friend void swap(MsgRemoveDataReq& a, MsgRemoveDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRemoveDataReq* New() const final {
    return CreateMaybeMessage<MsgRemoveDataReq>(NULL);
  }

  MsgRemoveDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRemoveDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRemoveDataReq& from);
  void MergeFrom(const MsgRemoveDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRemoveDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint64 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRemoveDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint64 key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRequestSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgRequestSyncReq) */ {
 public:
  MsgRequestSyncReq();
  virtual ~MsgRequestSyncReq();

  MsgRequestSyncReq(const MsgRequestSyncReq& from);

  inline MsgRequestSyncReq& operator=(const MsgRequestSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRequestSyncReq(MsgRequestSyncReq&& from) noexcept
    : MsgRequestSyncReq() {
    *this = ::std::move(from);
  }

  inline MsgRequestSyncReq& operator=(MsgRequestSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRequestSyncReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRequestSyncReq* internal_default_instance() {
    return reinterpret_cast<const MsgRequestSyncReq*>(
               &_MsgRequestSyncReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(MsgRequestSyncReq* other);
  friend void swap(MsgRequestSyncReq& a, MsgRequestSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRequestSyncReq* New() const final {
    return CreateMaybeMessage<MsgRequestSyncReq>(NULL);
  }

  MsgRequestSyncReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRequestSyncReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRequestSyncReq& from);
  void MergeFrom(const MsgRequestSyncReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRequestSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRequestSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCancelSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCancelSyncReq) */ {
 public:
  MsgCancelSyncReq();
  virtual ~MsgCancelSyncReq();

  MsgCancelSyncReq(const MsgCancelSyncReq& from);

  inline MsgCancelSyncReq& operator=(const MsgCancelSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCancelSyncReq(MsgCancelSyncReq&& from) noexcept
    : MsgCancelSyncReq() {
    *this = ::std::move(from);
  }

  inline MsgCancelSyncReq& operator=(MsgCancelSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelSyncReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCancelSyncReq* internal_default_instance() {
    return reinterpret_cast<const MsgCancelSyncReq*>(
               &_MsgCancelSyncReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(MsgCancelSyncReq* other);
  friend void swap(MsgCancelSyncReq& a, MsgCancelSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCancelSyncReq* New() const final {
    return CreateMaybeMessage<MsgCancelSyncReq>(NULL);
  }

  MsgCancelSyncReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCancelSyncReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCancelSyncReq& from);
  void MergeFrom(const MsgCancelSyncReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCancelSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCancelSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryBasicReq) */ {
 public:
  MsgQueryBasicReq();
  virtual ~MsgQueryBasicReq();

  MsgQueryBasicReq(const MsgQueryBasicReq& from);

  inline MsgQueryBasicReq& operator=(const MsgQueryBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryBasicReq(MsgQueryBasicReq&& from) noexcept
    : MsgQueryBasicReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryBasicReq& operator=(MsgQueryBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryBasicReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryBasicReq*>(
               &_MsgQueryBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(MsgQueryBasicReq* other);
  friend void swap(MsgQueryBasicReq& a, MsgQueryBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryBasicReq* New() const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(NULL);
  }

  MsgQueryBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryBasicReq& from);
  void MergeFrom(const MsgQueryBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryBasicAck) */ {
 public:
  MsgQueryBasicAck();
  virtual ~MsgQueryBasicAck();

  MsgQueryBasicAck(const MsgQueryBasicAck& from);

  inline MsgQueryBasicAck& operator=(const MsgQueryBasicAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryBasicAck(MsgQueryBasicAck&& from) noexcept
    : MsgQueryBasicAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryBasicAck& operator=(MsgQueryBasicAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryBasicAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryBasicAck*>(
               &_MsgQueryBasicAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(MsgQueryBasicAck* other);
  friend void swap(MsgQueryBasicAck& a, MsgQueryBasicAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryBasicAck* New() const final {
    return CreateMaybeMessage<MsgQueryBasicAck>(NULL);
  }

  MsgQueryBasicAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryBasicAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryBasicAck& from);
  void MergeFrom(const MsgQueryBasicAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryBasicAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerReq) */ {
 public:
  MsgQueryPlayerReq();
  virtual ~MsgQueryPlayerReq();

  MsgQueryPlayerReq(const MsgQueryPlayerReq& from);

  inline MsgQueryPlayerReq& operator=(const MsgQueryPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerReq(MsgQueryPlayerReq&& from) noexcept
    : MsgQueryPlayerReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerReq& operator=(MsgQueryPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerReq*>(
               &_MsgQueryPlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(MsgQueryPlayerReq* other);
  friend void swap(MsgQueryPlayerReq& a, MsgQueryPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerReq* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(NULL);
  }

  MsgQueryPlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerReq& from);
  void MergeFrom(const MsgQueryPlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerAck) */ {
 public:
  MsgQueryPlayerAck();
  virtual ~MsgQueryPlayerAck();

  MsgQueryPlayerAck(const MsgQueryPlayerAck& from);

  inline MsgQueryPlayerAck& operator=(const MsgQueryPlayerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerAck(MsgQueryPlayerAck&& from) noexcept
    : MsgQueryPlayerAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerAck& operator=(MsgQueryPlayerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerAck*>(
               &_MsgQueryPlayerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(MsgQueryPlayerAck* other);
  friend void swap(MsgQueryPlayerAck& a, MsgQueryPlayerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerAck* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(NULL);
  }

  MsgQueryPlayerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerAck& from);
  void MergeFrom(const MsgQueryPlayerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetNameReq) */ {
 public:
  MsgSetNameReq();
  virtual ~MsgSetNameReq();

  MsgSetNameReq(const MsgSetNameReq& from);

  inline MsgSetNameReq& operator=(const MsgSetNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetNameReq(MsgSetNameReq&& from) noexcept
    : MsgSetNameReq() {
    *this = ::std::move(from);
  }

  inline MsgSetNameReq& operator=(MsgSetNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetNameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetNameReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetNameReq*>(
               &_MsgSetNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(MsgSetNameReq* other);
  friend void swap(MsgSetNameReq& a, MsgSetNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetNameReq* New() const final {
    return CreateMaybeMessage<MsgSetNameReq>(NULL);
  }

  MsgSetNameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetNameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetNameReq& from);
  void MergeFrom(const MsgSetNameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetSexReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetSexReq) */ {
 public:
  MsgSetSexReq();
  virtual ~MsgSetSexReq();

  MsgSetSexReq(const MsgSetSexReq& from);

  inline MsgSetSexReq& operator=(const MsgSetSexReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetSexReq(MsgSetSexReq&& from) noexcept
    : MsgSetSexReq() {
    *this = ::std::move(from);
  }

  inline MsgSetSexReq& operator=(MsgSetSexReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetSexReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetSexReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetSexReq*>(
               &_MsgSetSexReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(MsgSetSexReq* other);
  friend void swap(MsgSetSexReq& a, MsgSetSexReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetSexReq* New() const final {
    return CreateMaybeMessage<MsgSetSexReq>(NULL);
  }

  MsgSetSexReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetSexReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetSexReq& from);
  void MergeFrom(const MsgSetSexReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetSexReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 sex = 1;
  void clear_sex();
  static const int kSexFieldNumber = 1;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetSexReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 sex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCompoundReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCompoundReq) */ {
 public:
  MsgCompoundReq();
  virtual ~MsgCompoundReq();

  MsgCompoundReq(const MsgCompoundReq& from);

  inline MsgCompoundReq& operator=(const MsgCompoundReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCompoundReq(MsgCompoundReq&& from) noexcept
    : MsgCompoundReq() {
    *this = ::std::move(from);
  }

  inline MsgCompoundReq& operator=(MsgCompoundReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCompoundReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCompoundReq* internal_default_instance() {
    return reinterpret_cast<const MsgCompoundReq*>(
               &_MsgCompoundReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(MsgCompoundReq* other);
  friend void swap(MsgCompoundReq& a, MsgCompoundReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCompoundReq* New() const final {
    return CreateMaybeMessage<MsgCompoundReq>(NULL);
  }

  MsgCompoundReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCompoundReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCompoundReq& from);
  void MergeFrom(const MsgCompoundReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCompoundReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCompoundReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgAchieveRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgAchieveRewardReq) */ {
 public:
  MsgAchieveRewardReq();
  virtual ~MsgAchieveRewardReq();

  MsgAchieveRewardReq(const MsgAchieveRewardReq& from);

  inline MsgAchieveRewardReq& operator=(const MsgAchieveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgAchieveRewardReq(MsgAchieveRewardReq&& from) noexcept
    : MsgAchieveRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgAchieveRewardReq& operator=(MsgAchieveRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAchieveRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgAchieveRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgAchieveRewardReq*>(
               &_MsgAchieveRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(MsgAchieveRewardReq* other);
  friend void swap(MsgAchieveRewardReq& a, MsgAchieveRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgAchieveRewardReq* New() const final {
    return CreateMaybeMessage<MsgAchieveRewardReq>(NULL);
  }

  MsgAchieveRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgAchieveRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgAchieveRewardReq& from);
  void MergeFrom(const MsgAchieveRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAchieveRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgAchieveRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTaskRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTaskRewardReq) */ {
 public:
  MsgTaskRewardReq();
  virtual ~MsgTaskRewardReq();

  MsgTaskRewardReq(const MsgTaskRewardReq& from);

  inline MsgTaskRewardReq& operator=(const MsgTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTaskRewardReq(MsgTaskRewardReq&& from) noexcept
    : MsgTaskRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgTaskRewardReq& operator=(MsgTaskRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTaskRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgTaskRewardReq*>(
               &_MsgTaskRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(MsgTaskRewardReq* other);
  friend void swap(MsgTaskRewardReq& a, MsgTaskRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTaskRewardReq* New() const final {
    return CreateMaybeMessage<MsgTaskRewardReq>(NULL);
  }

  MsgTaskRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTaskRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTaskRewardReq& from);
  void MergeFrom(const MsgTaskRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTaskRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTaskRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgActivityRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgActivityRewardReq) */ {
 public:
  MsgActivityRewardReq();
  virtual ~MsgActivityRewardReq();

  MsgActivityRewardReq(const MsgActivityRewardReq& from);

  inline MsgActivityRewardReq& operator=(const MsgActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgActivityRewardReq(MsgActivityRewardReq&& from) noexcept
    : MsgActivityRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgActivityRewardReq& operator=(MsgActivityRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgActivityRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgActivityRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgActivityRewardReq*>(
               &_MsgActivityRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(MsgActivityRewardReq* other);
  friend void swap(MsgActivityRewardReq& a, MsgActivityRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgActivityRewardReq* New() const final {
    return CreateMaybeMessage<MsgActivityRewardReq>(NULL);
  }

  MsgActivityRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgActivityRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgActivityRewardReq& from);
  void MergeFrom(const MsgActivityRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgActivityRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgActivityRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUseItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUseItemReq) */ {
 public:
  MsgUseItemReq();
  virtual ~MsgUseItemReq();

  MsgUseItemReq(const MsgUseItemReq& from);

  inline MsgUseItemReq& operator=(const MsgUseItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUseItemReq(MsgUseItemReq&& from) noexcept
    : MsgUseItemReq() {
    *this = ::std::move(from);
  }

  inline MsgUseItemReq& operator=(MsgUseItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUseItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUseItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgUseItemReq*>(
               &_MsgUseItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(MsgUseItemReq* other);
  friend void swap(MsgUseItemReq& a, MsgUseItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUseItemReq* New() const final {
    return CreateMaybeMessage<MsgUseItemReq>(NULL);
  }

  MsgUseItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUseItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUseItemReq& from);
  void MergeFrom(const MsgUseItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUseItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  ::google::protobuf::uint64 uuid() const;
  void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUseItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uuid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSevenSignInRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSevenSignInRewardReq) */ {
 public:
  MsgSevenSignInRewardReq();
  virtual ~MsgSevenSignInRewardReq();

  MsgSevenSignInRewardReq(const MsgSevenSignInRewardReq& from);

  inline MsgSevenSignInRewardReq& operator=(const MsgSevenSignInRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSevenSignInRewardReq(MsgSevenSignInRewardReq&& from) noexcept
    : MsgSevenSignInRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgSevenSignInRewardReq& operator=(MsgSevenSignInRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSevenSignInRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSevenSignInRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgSevenSignInRewardReq*>(
               &_MsgSevenSignInRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(MsgSevenSignInRewardReq* other);
  friend void swap(MsgSevenSignInRewardReq& a, MsgSevenSignInRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSevenSignInRewardReq* New() const final {
    return CreateMaybeMessage<MsgSevenSignInRewardReq>(NULL);
  }

  MsgSevenSignInRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSevenSignInRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSevenSignInRewardReq& from);
  void MergeFrom(const MsgSevenSignInRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSevenSignInRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 day = 1;
  void clear_day();
  static const int kDayFieldNumber = 1;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSevenSignInRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 day_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgViewMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgViewMailReq) */ {
 public:
  MsgViewMailReq();
  virtual ~MsgViewMailReq();

  MsgViewMailReq(const MsgViewMailReq& from);

  inline MsgViewMailReq& operator=(const MsgViewMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgViewMailReq(MsgViewMailReq&& from) noexcept
    : MsgViewMailReq() {
    *this = ::std::move(from);
  }

  inline MsgViewMailReq& operator=(MsgViewMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgViewMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgViewMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgViewMailReq*>(
               &_MsgViewMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(MsgViewMailReq* other);
  friend void swap(MsgViewMailReq& a, MsgViewMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgViewMailReq* New() const final {
    return CreateMaybeMessage<MsgViewMailReq>(NULL);
  }

  MsgViewMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgViewMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgViewMailReq& from);
  void MergeFrom(const MsgViewMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgViewMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgViewMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDeleteMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDeleteMailReq) */ {
 public:
  MsgDeleteMailReq();
  virtual ~MsgDeleteMailReq();

  MsgDeleteMailReq(const MsgDeleteMailReq& from);

  inline MsgDeleteMailReq& operator=(const MsgDeleteMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDeleteMailReq(MsgDeleteMailReq&& from) noexcept
    : MsgDeleteMailReq() {
    *this = ::std::move(from);
  }

  inline MsgDeleteMailReq& operator=(MsgDeleteMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeleteMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDeleteMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteMailReq*>(
               &_MsgDeleteMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(MsgDeleteMailReq* other);
  friend void swap(MsgDeleteMailReq& a, MsgDeleteMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDeleteMailReq* New() const final {
    return CreateMaybeMessage<MsgDeleteMailReq>(NULL);
  }

  MsgDeleteMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDeleteMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDeleteMailReq& from);
  void MergeFrom(const MsgDeleteMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDeleteMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDeleteMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryMailReq) */ {
 public:
  MsgQueryMailReq();
  virtual ~MsgQueryMailReq();

  MsgQueryMailReq(const MsgQueryMailReq& from);

  inline MsgQueryMailReq& operator=(const MsgQueryMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryMailReq(MsgQueryMailReq&& from) noexcept
    : MsgQueryMailReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryMailReq& operator=(MsgQueryMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryMailReq*>(
               &_MsgQueryMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(MsgQueryMailReq* other);
  friend void swap(MsgQueryMailReq& a, MsgQueryMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryMailReq* New() const final {
    return CreateMaybeMessage<MsgQueryMailReq>(NULL);
  }

  MsgQueryMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryMailReq& from);
  void MergeFrom(const MsgQueryMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMailRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgMailRewardReq) */ {
 public:
  MsgMailRewardReq();
  virtual ~MsgMailRewardReq();

  MsgMailRewardReq(const MsgMailRewardReq& from);

  inline MsgMailRewardReq& operator=(const MsgMailRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgMailRewardReq(MsgMailRewardReq&& from) noexcept
    : MsgMailRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgMailRewardReq& operator=(MsgMailRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMailRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgMailRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgMailRewardReq*>(
               &_MsgMailRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(MsgMailRewardReq* other);
  friend void swap(MsgMailRewardReq& a, MsgMailRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgMailRewardReq* New() const final {
    return CreateMaybeMessage<MsgMailRewardReq>(NULL);
  }

  MsgMailRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgMailRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgMailRewardReq& from);
  void MergeFrom(const MsgMailRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMailRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMailRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgBuyStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgBuyStoreReq) */ {
 public:
  MsgBuyStoreReq();
  virtual ~MsgBuyStoreReq();

  MsgBuyStoreReq(const MsgBuyStoreReq& from);

  inline MsgBuyStoreReq& operator=(const MsgBuyStoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgBuyStoreReq(MsgBuyStoreReq&& from) noexcept
    : MsgBuyStoreReq() {
    *this = ::std::move(from);
  }

  inline MsgBuyStoreReq& operator=(MsgBuyStoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBuyStoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgBuyStoreReq* internal_default_instance() {
    return reinterpret_cast<const MsgBuyStoreReq*>(
               &_MsgBuyStoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(MsgBuyStoreReq* other);
  friend void swap(MsgBuyStoreReq& a, MsgBuyStoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgBuyStoreReq* New() const final {
    return CreateMaybeMessage<MsgBuyStoreReq>(NULL);
  }

  MsgBuyStoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgBuyStoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgBuyStoreReq& from);
  void MergeFrom(const MsgBuyStoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBuyStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // bytes buytype = 2;
  void clear_buytype();
  static const int kBuytypeFieldNumber = 2;
  const ::std::string& buytype() const;
  void set_buytype(const ::std::string& value);
  #if LANG_CXX11
  void set_buytype(::std::string&& value);
  #endif
  void set_buytype(const char* value);
  void set_buytype(const void* value, size_t size);
  ::std::string* mutable_buytype();
  ::std::string* release_buytype();
  void set_allocated_buytype(::std::string* buytype);

  // uint32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgBuyStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr buytype_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryStoreReq) */ {
 public:
  MsgQueryStoreReq();
  virtual ~MsgQueryStoreReq();

  MsgQueryStoreReq(const MsgQueryStoreReq& from);

  inline MsgQueryStoreReq& operator=(const MsgQueryStoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryStoreReq(MsgQueryStoreReq&& from) noexcept
    : MsgQueryStoreReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryStoreReq& operator=(MsgQueryStoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryStoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryStoreReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryStoreReq*>(
               &_MsgQueryStoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(MsgQueryStoreReq* other);
  friend void swap(MsgQueryStoreReq& a, MsgQueryStoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryStoreReq* New() const final {
    return CreateMaybeMessage<MsgQueryStoreReq>(NULL);
  }

  MsgQueryStoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryStoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryStoreReq& from);
  void MergeFrom(const MsgQueryStoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryStoreAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryStoreAck) */ {
 public:
  MsgQueryStoreAck();
  virtual ~MsgQueryStoreAck();

  MsgQueryStoreAck(const MsgQueryStoreAck& from);

  inline MsgQueryStoreAck& operator=(const MsgQueryStoreAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryStoreAck(MsgQueryStoreAck&& from) noexcept
    : MsgQueryStoreAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryStoreAck& operator=(MsgQueryStoreAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryStoreAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryStoreAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryStoreAck*>(
               &_MsgQueryStoreAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(MsgQueryStoreAck* other);
  friend void swap(MsgQueryStoreAck& a, MsgQueryStoreAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryStoreAck* New() const final {
    return CreateMaybeMessage<MsgQueryStoreAck>(NULL);
  }

  MsgQueryStoreAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryStoreAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryStoreAck& from);
  void MergeFrom(const MsgQueryStoreAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryStoreAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryStoreAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgApplyPayOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgApplyPayOrderReq) */ {
 public:
  MsgApplyPayOrderReq();
  virtual ~MsgApplyPayOrderReq();

  MsgApplyPayOrderReq(const MsgApplyPayOrderReq& from);

  inline MsgApplyPayOrderReq& operator=(const MsgApplyPayOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgApplyPayOrderReq(MsgApplyPayOrderReq&& from) noexcept
    : MsgApplyPayOrderReq() {
    *this = ::std::move(from);
  }

  inline MsgApplyPayOrderReq& operator=(MsgApplyPayOrderReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyPayOrderReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgApplyPayOrderReq* internal_default_instance() {
    return reinterpret_cast<const MsgApplyPayOrderReq*>(
               &_MsgApplyPayOrderReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(MsgApplyPayOrderReq* other);
  friend void swap(MsgApplyPayOrderReq& a, MsgApplyPayOrderReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyPayOrderReq* New() const final {
    return CreateMaybeMessage<MsgApplyPayOrderReq>(NULL);
  }

  MsgApplyPayOrderReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyPayOrderReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgApplyPayOrderReq& from);
  void MergeFrom(const MsgApplyPayOrderReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyPayOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string payid = 1;
  void clear_payid();
  static const int kPayidFieldNumber = 1;
  const ::std::string& payid() const;
  void set_payid(const ::std::string& value);
  #if LANG_CXX11
  void set_payid(::std::string&& value);
  #endif
  void set_payid(const char* value);
  void set_payid(const char* value, size_t size);
  ::std::string* mutable_payid();
  ::std::string* release_payid();
  void set_allocated_payid(::std::string* payid);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgApplyPayOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgApplyPayOrderAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgApplyPayOrderAck) */ {
 public:
  MsgApplyPayOrderAck();
  virtual ~MsgApplyPayOrderAck();

  MsgApplyPayOrderAck(const MsgApplyPayOrderAck& from);

  inline MsgApplyPayOrderAck& operator=(const MsgApplyPayOrderAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgApplyPayOrderAck(MsgApplyPayOrderAck&& from) noexcept
    : MsgApplyPayOrderAck() {
    *this = ::std::move(from);
  }

  inline MsgApplyPayOrderAck& operator=(MsgApplyPayOrderAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyPayOrderAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgApplyPayOrderAck* internal_default_instance() {
    return reinterpret_cast<const MsgApplyPayOrderAck*>(
               &_MsgApplyPayOrderAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(MsgApplyPayOrderAck* other);
  friend void swap(MsgApplyPayOrderAck& a, MsgApplyPayOrderAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyPayOrderAck* New() const final {
    return CreateMaybeMessage<MsgApplyPayOrderAck>(NULL);
  }

  MsgApplyPayOrderAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyPayOrderAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgApplyPayOrderAck& from);
  void MergeFrom(const MsgApplyPayOrderAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyPayOrderAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string payid = 1;
  void clear_payid();
  static const int kPayidFieldNumber = 1;
  const ::std::string& payid() const;
  void set_payid(const ::std::string& value);
  #if LANG_CXX11
  void set_payid(::std::string&& value);
  #endif
  void set_payid(const char* value);
  void set_payid(const char* value, size_t size);
  ::std::string* mutable_payid();
  ::std::string* release_payid();
  void set_allocated_payid(::std::string* payid);

  // string order = 2;
  void clear_order();
  static const int kOrderFieldNumber = 2;
  const ::std::string& order() const;
  void set_order(const ::std::string& value);
  #if LANG_CXX11
  void set_order(::std::string&& value);
  #endif
  void set_order(const char* value);
  void set_order(const char* value, size_t size);
  ::std::string* mutable_order();
  ::std::string* release_order();
  void set_allocated_order(::std::string* order);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgApplyPayOrderAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payid_;
  ::google::protobuf::internal::ArenaStringPtr order_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgPayResultReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgPayResultReq) */ {
 public:
  MsgPayResultReq();
  virtual ~MsgPayResultReq();

  MsgPayResultReq(const MsgPayResultReq& from);

  inline MsgPayResultReq& operator=(const MsgPayResultReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgPayResultReq(MsgPayResultReq&& from) noexcept
    : MsgPayResultReq() {
    *this = ::std::move(from);
  }

  inline MsgPayResultReq& operator=(MsgPayResultReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPayResultReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgPayResultReq* internal_default_instance() {
    return reinterpret_cast<const MsgPayResultReq*>(
               &_MsgPayResultReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(MsgPayResultReq* other);
  friend void swap(MsgPayResultReq& a, MsgPayResultReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgPayResultReq* New() const final {
    return CreateMaybeMessage<MsgPayResultReq>(NULL);
  }

  MsgPayResultReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgPayResultReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgPayResultReq& from);
  void MergeFrom(const MsgPayResultReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPayResultReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string payid = 1;
  void clear_payid();
  static const int kPayidFieldNumber = 1;
  const ::std::string& payid() const;
  void set_payid(const ::std::string& value);
  #if LANG_CXX11
  void set_payid(::std::string&& value);
  #endif
  void set_payid(const char* value);
  void set_payid(const char* value, size_t size);
  ::std::string* mutable_payid();
  ::std::string* release_payid();
  void set_allocated_payid(::std::string* payid);

  // string order = 2;
  void clear_order();
  static const int kOrderFieldNumber = 2;
  const ::std::string& order() const;
  void set_order(const ::std::string& value);
  #if LANG_CXX11
  void set_order(::std::string&& value);
  #endif
  void set_order(const char* value);
  void set_order(const char* value, size_t size);
  ::std::string* mutable_order();
  ::std::string* release_order();
  void set_allocated_order(::std::string* order);

  // bool result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgPayResultReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payid_;
  ::google::protobuf::internal::ArenaStringPtr order_;
  bool result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPayReq) */ {
 public:
  MsgQueryPayReq();
  virtual ~MsgQueryPayReq();

  MsgQueryPayReq(const MsgQueryPayReq& from);

  inline MsgQueryPayReq& operator=(const MsgQueryPayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPayReq(MsgQueryPayReq&& from) noexcept
    : MsgQueryPayReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryPayReq& operator=(MsgQueryPayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPayReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPayReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPayReq*>(
               &_MsgQueryPayReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(MsgQueryPayReq* other);
  friend void swap(MsgQueryPayReq& a, MsgQueryPayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPayReq* New() const final {
    return CreateMaybeMessage<MsgQueryPayReq>(NULL);
  }

  MsgQueryPayReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPayReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPayReq& from);
  void MergeFrom(const MsgQueryPayReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPayReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRankListReq) */ {
 public:
  MsgQueryRankListReq();
  virtual ~MsgQueryRankListReq();

  MsgQueryRankListReq(const MsgQueryRankListReq& from);

  inline MsgQueryRankListReq& operator=(const MsgQueryRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRankListReq(MsgQueryRankListReq&& from) noexcept
    : MsgQueryRankListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryRankListReq& operator=(MsgQueryRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRankListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRankListReq*>(
               &_MsgQueryRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(MsgQueryRankListReq* other);
  friend void swap(MsgQueryRankListReq& a, MsgQueryRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRankListReq* New() const final {
    return CreateMaybeMessage<MsgQueryRankListReq>(NULL);
  }

  MsgQueryRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRankListReq& from);
  void MergeFrom(const MsgQueryRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRankListAck) */ {
 public:
  MsgQueryRankListAck();
  virtual ~MsgQueryRankListAck();

  MsgQueryRankListAck(const MsgQueryRankListAck& from);

  inline MsgQueryRankListAck& operator=(const MsgQueryRankListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRankListAck(MsgQueryRankListAck&& from) noexcept
    : MsgQueryRankListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryRankListAck& operator=(MsgQueryRankListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRankListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRankListAck*>(
               &_MsgQueryRankListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(MsgQueryRankListAck* other);
  friend void swap(MsgQueryRankListAck& a, MsgQueryRankListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRankListAck* New() const final {
    return CreateMaybeMessage<MsgQueryRankListAck>(NULL);
  }

  MsgQueryRankListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRankListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRankListAck& from);
  void MergeFrom(const MsgQueryRankListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRankListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankDatas rankdatas = 2;
  bool has_rankdatas() const;
  void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  private:
  const ::KFMsg::PBRankDatas& _internal_rankdatas() const;
  public:
  const ::KFMsg::PBRankDatas& rankdatas() const;
  ::KFMsg::PBRankDatas* release_rankdatas();
  ::KFMsg::PBRankDatas* mutable_rankdatas();
  void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryFriendRankListReq) */ {
 public:
  MsgQueryFriendRankListReq();
  virtual ~MsgQueryFriendRankListReq();

  MsgQueryFriendRankListReq(const MsgQueryFriendRankListReq& from);

  inline MsgQueryFriendRankListReq& operator=(const MsgQueryFriendRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryFriendRankListReq(MsgQueryFriendRankListReq&& from) noexcept
    : MsgQueryFriendRankListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryFriendRankListReq& operator=(MsgQueryFriendRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryFriendRankListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryFriendRankListReq*>(
               &_MsgQueryFriendRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(MsgQueryFriendRankListReq* other);
  friend void swap(MsgQueryFriendRankListReq& a, MsgQueryFriendRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryFriendRankListReq* New() const final {
    return CreateMaybeMessage<MsgQueryFriendRankListReq>(NULL);
  }

  MsgQueryFriendRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryFriendRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryFriendRankListReq& from);
  void MergeFrom(const MsgQueryFriendRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryFriendRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryFriendRankListAck) */ {
 public:
  MsgQueryFriendRankListAck();
  virtual ~MsgQueryFriendRankListAck();

  MsgQueryFriendRankListAck(const MsgQueryFriendRankListAck& from);

  inline MsgQueryFriendRankListAck& operator=(const MsgQueryFriendRankListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryFriendRankListAck(MsgQueryFriendRankListAck&& from) noexcept
    : MsgQueryFriendRankListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryFriendRankListAck& operator=(MsgQueryFriendRankListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryFriendRankListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryFriendRankListAck*>(
               &_MsgQueryFriendRankListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(MsgQueryFriendRankListAck* other);
  friend void swap(MsgQueryFriendRankListAck& a, MsgQueryFriendRankListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryFriendRankListAck* New() const final {
    return CreateMaybeMessage<MsgQueryFriendRankListAck>(NULL);
  }

  MsgQueryFriendRankListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryFriendRankListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryFriendRankListAck& from);
  void MergeFrom(const MsgQueryFriendRankListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryFriendRankListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankDatas rankdatas = 2;
  bool has_rankdatas() const;
  void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  private:
  const ::KFMsg::PBRankDatas& _internal_rankdatas() const;
  public:
  const ::KFMsg::PBRankDatas& rankdatas() const;
  ::KFMsg::PBRankDatas* release_rankdatas();
  ::KFMsg::PBRankDatas* mutable_rankdatas();
  void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgAddRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgAddRelationReq) */ {
 public:
  MsgAddRelationReq();
  virtual ~MsgAddRelationReq();

  MsgAddRelationReq(const MsgAddRelationReq& from);

  inline MsgAddRelationReq& operator=(const MsgAddRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgAddRelationReq(MsgAddRelationReq&& from) noexcept
    : MsgAddRelationReq() {
    *this = ::std::move(from);
  }

  inline MsgAddRelationReq& operator=(MsgAddRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAddRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgAddRelationReq* internal_default_instance() {
    return reinterpret_cast<const MsgAddRelationReq*>(
               &_MsgAddRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(MsgAddRelationReq* other);
  friend void swap(MsgAddRelationReq& a, MsgAddRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgAddRelationReq* New() const final {
    return CreateMaybeMessage<MsgAddRelationReq>(NULL);
  }

  MsgAddRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgAddRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgAddRelationReq& from);
  void MergeFrom(const MsgAddRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAddRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // bytes playername = 2;
  void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // bytes message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgAddRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDelRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDelRelationReq) */ {
 public:
  MsgDelRelationReq();
  virtual ~MsgDelRelationReq();

  MsgDelRelationReq(const MsgDelRelationReq& from);

  inline MsgDelRelationReq& operator=(const MsgDelRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDelRelationReq(MsgDelRelationReq&& from) noexcept
    : MsgDelRelationReq() {
    *this = ::std::move(from);
  }

  inline MsgDelRelationReq& operator=(MsgDelRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDelRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDelRelationReq* internal_default_instance() {
    return reinterpret_cast<const MsgDelRelationReq*>(
               &_MsgDelRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(MsgDelRelationReq* other);
  friend void swap(MsgDelRelationReq& a, MsgDelRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDelRelationReq* New() const final {
    return CreateMaybeMessage<MsgDelRelationReq>(NULL);
  }

  MsgDelRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDelRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDelRelationReq& from);
  void MergeFrom(const MsgDelRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDelRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDelRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyRelationInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReplyRelationInviteReq) */ {
 public:
  MsgReplyRelationInviteReq();
  virtual ~MsgReplyRelationInviteReq();

  MsgReplyRelationInviteReq(const MsgReplyRelationInviteReq& from);

  inline MsgReplyRelationInviteReq& operator=(const MsgReplyRelationInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReplyRelationInviteReq(MsgReplyRelationInviteReq&& from) noexcept
    : MsgReplyRelationInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgReplyRelationInviteReq& operator=(MsgReplyRelationInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyRelationInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReplyRelationInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgReplyRelationInviteReq*>(
               &_MsgReplyRelationInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(MsgReplyRelationInviteReq* other);
  friend void swap(MsgReplyRelationInviteReq& a, MsgReplyRelationInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReplyRelationInviteReq* New() const final {
    return CreateMaybeMessage<MsgReplyRelationInviteReq>(NULL);
  }

  MsgReplyRelationInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReplyRelationInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReplyRelationInviteReq& from);
  void MergeFrom(const MsgReplyRelationInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReplyRelationInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 operate = 3;
  void clear_operate();
  static const int kOperateFieldNumber = 3;
  ::google::protobuf::uint32 operate() const;
  void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyRelationInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 operate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetRefuseRelationInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetRefuseRelationInviteReq) */ {
 public:
  MsgSetRefuseRelationInviteReq();
  virtual ~MsgSetRefuseRelationInviteReq();

  MsgSetRefuseRelationInviteReq(const MsgSetRefuseRelationInviteReq& from);

  inline MsgSetRefuseRelationInviteReq& operator=(const MsgSetRefuseRelationInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetRefuseRelationInviteReq(MsgSetRefuseRelationInviteReq&& from) noexcept
    : MsgSetRefuseRelationInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgSetRefuseRelationInviteReq& operator=(MsgSetRefuseRelationInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetRefuseRelationInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetRefuseRelationInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetRefuseRelationInviteReq*>(
               &_MsgSetRefuseRelationInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(MsgSetRefuseRelationInviteReq* other);
  friend void swap(MsgSetRefuseRelationInviteReq& a, MsgSetRefuseRelationInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetRefuseRelationInviteReq* New() const final {
    return CreateMaybeMessage<MsgSetRefuseRelationInviteReq>(NULL);
  }

  MsgSetRefuseRelationInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetRefuseRelationInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetRefuseRelationInviteReq& from);
  void MergeFrom(const MsgSetRefuseRelationInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetRefuseRelationInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint32 refuse = 2;
  void clear_refuse();
  static const int kRefuseFieldNumber = 2;
  ::google::protobuf::uint32 refuse() const;
  void set_refuse(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetRefuseRelationInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint32 refuse_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgResultDisplay

// uint32 result = 1;
inline void MsgResultDisplay::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 MsgResultDisplay::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.result)
  return result_;
}
inline void MsgResultDisplay::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.result)
}

// repeated bytes param = 2;
inline int MsgResultDisplay::param_size() const {
  return param_.size();
}
inline void MsgResultDisplay::clear_param() {
  param_.Clear();
}
inline const ::std::string& MsgResultDisplay::param(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.param)
  return param_.Get(index);
}
inline ::std::string* MsgResultDisplay::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Mutable(index);
}
inline void MsgResultDisplay::set_param(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgResultDisplay::set_param(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgResultDisplay::set_param(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::set_param(int index, const void* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgResultDisplay.param)
}
inline ::std::string* MsgResultDisplay::add_param() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Add();
}
inline void MsgResultDisplay::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#if LANG_CXX11
inline void MsgResultDisplay::add_param(::std::string&& value) {
  param_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#endif
inline void MsgResultDisplay::add_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::add_param(const void* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgResultDisplay.param)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgResultDisplay::param() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgResultDisplay.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgResultDisplay::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgResultDisplay.param)
  return &param_;
}

// -------------------------------------------------------------------

// MsgCommandReq

// bytes command = 1;
inline void MsgCommandReq::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCommandReq::command() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCommandReq.command)
  return command_.GetNoArena();
}
inline void MsgCommandReq::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCommandReq.command)
}
#if LANG_CXX11
inline void MsgCommandReq::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCommandReq.command)
}
#endif
inline void MsgCommandReq::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCommandReq.command)
}
inline void MsgCommandReq::set_command(const void* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCommandReq.command)
}
inline ::std::string* MsgCommandReq::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCommandReq.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCommandReq::release_command() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCommandReq.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCommandReq::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCommandReq.command)
}

// repeated bytes params = 2;
inline int MsgCommandReq::params_size() const {
  return params_.size();
}
inline void MsgCommandReq::clear_params() {
  params_.Clear();
}
inline const ::std::string& MsgCommandReq::params(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCommandReq.params)
  return params_.Get(index);
}
inline ::std::string* MsgCommandReq::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCommandReq.params)
  return params_.Mutable(index);
}
inline void MsgCommandReq::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgCommandReq.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgCommandReq::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgCommandReq.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgCommandReq::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCommandReq.params)
}
inline void MsgCommandReq::set_params(int index, const void* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCommandReq.params)
}
inline ::std::string* MsgCommandReq::add_params() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgCommandReq.params)
  return params_.Add();
}
inline void MsgCommandReq::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgCommandReq.params)
}
#if LANG_CXX11
inline void MsgCommandReq::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgCommandReq.params)
}
#endif
inline void MsgCommandReq::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgCommandReq.params)
}
inline void MsgCommandReq::add_params(const void* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgCommandReq.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgCommandReq::params() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgCommandReq.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgCommandReq::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgCommandReq.params)
  return &params_;
}

// -------------------------------------------------------------------

// MsgLoginReq

// bytes token = 1;
inline void MsgLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.token)
  return token_.GetNoArena();
}
inline void MsgLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.token)
}
#if LANG_CXX11
inline void MsgLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginReq.token)
}
#endif
inline void MsgLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginReq.token)
}
inline void MsgLoginReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginReq.token)
}
inline ::std::string* MsgLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginReq.token)
}

// uint64 accountid = 2;
inline void MsgLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.accountid)
  return accountid_;
}
inline void MsgLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.accountid)
}

// bytes version = 3;
inline void MsgLoginReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.version)
  return version_.GetNoArena();
}
inline void MsgLoginReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.version)
}
#if LANG_CXX11
inline void MsgLoginReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginReq.version)
}
#endif
inline void MsgLoginReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginReq.version)
}
inline void MsgLoginReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginReq.version)
}
inline ::std::string* MsgLoginReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginReq.version)
}

// -------------------------------------------------------------------

// MsgLoginAck

// uint64 playerid = 1;
inline void MsgLoginAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.playerid)
  return playerid_;
}
inline void MsgLoginAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginAck.playerid)
}

// .KFMsg.PBObject playerdata = 2;
inline bool MsgLoginAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgLoginAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& MsgLoginAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgLoginAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgLoginAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginAck.playerdata)
  return playerdata_;
}
inline void MsgLoginAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginAck.playerdata)
}

// uint64 servertime = 3;
inline void MsgLoginAck::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginAck::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.servertime)
  return servertime_;
}
inline void MsgLoginAck::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginAck.servertime)
}

// -------------------------------------------------------------------

// MsgLogoutReq

// -------------------------------------------------------------------

// MsgTellBeKick

// uint32 type = 1;
inline void MsgTellBeKick::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgTellBeKick::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellBeKick.type)
  return type_;
}
inline void MsgTellBeKick::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellBeKick.type)
}

// -------------------------------------------------------------------

// MsgSyncUpdateData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncUpdateData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncUpdateData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncUpdateData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncUpdateData.pbdata)
  return pbdata_;
}
inline void MsgSyncUpdateData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncUpdateData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncAddData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncAddData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncAddData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncAddData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncAddData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncAddData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncAddData.pbdata)
  return pbdata_;
}
inline void MsgSyncAddData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncAddData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncRemoveData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncRemoveData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncRemoveData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncRemoveData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncRemoveData.pbdata)
  return pbdata_;
}
inline void MsgSyncRemoveData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncRemoveData.pbdata)
}

// -------------------------------------------------------------------

// MsgShowElement

// .KFMsg.PBShowElement element = 1;
inline bool MsgShowElement::has_element() const {
  return this != internal_default_instance() && element_ != NULL;
}
inline const ::KFMsg::PBShowElement& MsgShowElement::_internal_element() const {
  return *element_;
}
inline const ::KFMsg::PBShowElement& MsgShowElement::element() const {
  const ::KFMsg::PBShowElement* p = element_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgShowElement.element)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBShowElement*>(
      &::KFMsg::_PBShowElement_default_instance_);
}
inline ::KFMsg::PBShowElement* MsgShowElement::release_element() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgShowElement.element)
  
  ::KFMsg::PBShowElement* temp = element_;
  element_ = NULL;
  return temp;
}
inline ::KFMsg::PBShowElement* MsgShowElement::mutable_element() {
  
  if (element_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBShowElement>(GetArenaNoVirtual());
    element_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgShowElement.element)
  return element_;
}
inline void MsgShowElement::set_allocated_element(::KFMsg::PBShowElement* element) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(element_);
  }
  if (element) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      element = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, element, submessage_arena);
    }
    
  } else {
    
  }
  element_ = element;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgShowElement.element)
}

// -------------------------------------------------------------------

// MsgRemoveDataReq

// bytes dataname = 1;
inline void MsgRemoveDataReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRemoveDataReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveDataReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgRemoveDataReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveDataReq.dataname)
}
#if LANG_CXX11
inline void MsgRemoveDataReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgRemoveDataReq.dataname)
}
#endif
inline void MsgRemoveDataReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgRemoveDataReq.dataname)
}
inline void MsgRemoveDataReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgRemoveDataReq.dataname)
}
inline ::std::string* MsgRemoveDataReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgRemoveDataReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRemoveDataReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgRemoveDataReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRemoveDataReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgRemoveDataReq.dataname)
}

// uint64 key = 2;
inline void MsgRemoveDataReq::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgRemoveDataReq::key() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveDataReq.key)
  return key_;
}
inline void MsgRemoveDataReq::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveDataReq.key)
}

// -------------------------------------------------------------------

// MsgRequestSyncReq

// bytes dataname = 1;
inline void MsgRequestSyncReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRequestSyncReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRequestSyncReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgRequestSyncReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgRequestSyncReq.dataname)
}
#if LANG_CXX11
inline void MsgRequestSyncReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgRequestSyncReq.dataname)
}
#endif
inline void MsgRequestSyncReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgRequestSyncReq.dataname)
}
inline void MsgRequestSyncReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgRequestSyncReq.dataname)
}
inline ::std::string* MsgRequestSyncReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgRequestSyncReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRequestSyncReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgRequestSyncReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRequestSyncReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgRequestSyncReq.dataname)
}

// -------------------------------------------------------------------

// MsgCancelSyncReq

// bytes dataname = 1;
inline void MsgCancelSyncReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCancelSyncReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCancelSyncReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgCancelSyncReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCancelSyncReq.dataname)
}
#if LANG_CXX11
inline void MsgCancelSyncReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCancelSyncReq.dataname)
}
#endif
inline void MsgCancelSyncReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCancelSyncReq.dataname)
}
inline void MsgCancelSyncReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCancelSyncReq.dataname)
}
inline ::std::string* MsgCancelSyncReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCancelSyncReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCancelSyncReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCancelSyncReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCancelSyncReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCancelSyncReq.dataname)
}

// -------------------------------------------------------------------

// MsgQueryBasicReq

// bytes name = 1;
inline void MsgQueryBasicReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgQueryBasicReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryBasicReq.name)
  return name_.GetNoArena();
}
inline void MsgQueryBasicReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryBasicReq.name)
}
#if LANG_CXX11
inline void MsgQueryBasicReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgQueryBasicReq.name)
}
#endif
inline void MsgQueryBasicReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryBasicReq.name)
}
inline void MsgQueryBasicReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryBasicReq.name)
}
inline ::std::string* MsgQueryBasicReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryBasicReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgQueryBasicReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryBasicReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgQueryBasicReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryBasicReq.name)
}

// -------------------------------------------------------------------

// MsgQueryBasicAck

// .KFMsg.PBObject player = 1;
inline bool MsgQueryBasicAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQueryBasicAck::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgQueryBasicAck::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryBasicAck.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQueryBasicAck::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryBasicAck.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQueryBasicAck::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryBasicAck.player)
  return player_;
}
inline void MsgQueryBasicAck::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryBasicAck.player)
}

// -------------------------------------------------------------------

// MsgQueryPlayerReq

// uint64 playerid = 1;
inline void MsgQueryPlayerReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryPlayerReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerReq.playerid)
  return playerid_;
}
inline void MsgQueryPlayerReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryPlayerReq.playerid)
}

// -------------------------------------------------------------------

// MsgQueryPlayerAck

// .KFMsg.PBObject player = 1;
inline bool MsgQueryPlayerAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerAck.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryPlayerAck.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryPlayerAck.player)
  return player_;
}
inline void MsgQueryPlayerAck::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryPlayerAck.player)
}

// -------------------------------------------------------------------

// MsgSetNameReq

// bytes name = 1;
inline void MsgSetNameReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetNameReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetNameReq.name)
  return name_.GetNoArena();
}
inline void MsgSetNameReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetNameReq.name)
}
#if LANG_CXX11
inline void MsgSetNameReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSetNameReq.name)
}
#endif
inline void MsgSetNameReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSetNameReq.name)
}
inline void MsgSetNameReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSetNameReq.name)
}
inline ::std::string* MsgSetNameReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSetNameReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetNameReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSetNameReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetNameReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSetNameReq.name)
}

// -------------------------------------------------------------------

// MsgSetSexReq

// uint32 sex = 1;
inline void MsgSetSexReq::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetSexReq::sex() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetSexReq.sex)
  return sex_;
}
inline void MsgSetSexReq::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetSexReq.sex)
}

// -------------------------------------------------------------------

// MsgCompoundReq

// uint32 id = 1;
inline void MsgCompoundReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgCompoundReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCompoundReq.id)
  return id_;
}
inline void MsgCompoundReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCompoundReq.id)
}

// -------------------------------------------------------------------

// MsgAchieveRewardReq

// uint32 id = 1;
inline void MsgAchieveRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgAchieveRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAchieveRewardReq.id)
  return id_;
}
inline void MsgAchieveRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgAchieveRewardReq.id)
}

// -------------------------------------------------------------------

// MsgTaskRewardReq

// uint32 id = 1;
inline void MsgTaskRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgTaskRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTaskRewardReq.id)
  return id_;
}
inline void MsgTaskRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTaskRewardReq.id)
}

// -------------------------------------------------------------------

// MsgActivityRewardReq

// uint32 type = 1;
inline void MsgActivityRewardReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgActivityRewardReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgActivityRewardReq.type)
  return type_;
}
inline void MsgActivityRewardReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgActivityRewardReq.type)
}

// uint32 id = 2;
inline void MsgActivityRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgActivityRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgActivityRewardReq.id)
  return id_;
}
inline void MsgActivityRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgActivityRewardReq.id)
}

// -------------------------------------------------------------------

// MsgUseItemReq

// uint64 uuid = 1;
inline void MsgUseItemReq::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgUseItemReq::uuid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUseItemReq.uuid)
  return uuid_;
}
inline void MsgUseItemReq::set_uuid(::google::protobuf::uint64 value) {
  
  uuid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUseItemReq.uuid)
}

// -------------------------------------------------------------------

// MsgSevenSignInRewardReq

// uint32 day = 1;
inline void MsgSevenSignInRewardReq::clear_day() {
  day_ = 0u;
}
inline ::google::protobuf::uint32 MsgSevenSignInRewardReq::day() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSevenSignInRewardReq.day)
  return day_;
}
inline void MsgSevenSignInRewardReq::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSevenSignInRewardReq.day)
}

// -------------------------------------------------------------------

// MsgViewMailReq

// uint64 id = 1;
inline void MsgViewMailReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgViewMailReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgViewMailReq.id)
  return id_;
}
inline void MsgViewMailReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgViewMailReq.id)
}

// -------------------------------------------------------------------

// MsgDeleteMailReq

// uint64 id = 1;
inline void MsgDeleteMailReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDeleteMailReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDeleteMailReq.id)
  return id_;
}
inline void MsgDeleteMailReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDeleteMailReq.id)
}

// -------------------------------------------------------------------

// MsgQueryMailReq

// -------------------------------------------------------------------

// MsgMailRewardReq

// uint64 id = 1;
inline void MsgMailRewardReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgMailRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMailRewardReq.id)
  return id_;
}
inline void MsgMailRewardReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMailRewardReq.id)
}

// -------------------------------------------------------------------

// MsgBuyStoreReq

// bytes version = 1;
inline void MsgBuyStoreReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBuyStoreReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreReq.version)
  return version_.GetNoArena();
}
inline void MsgBuyStoreReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreReq.version)
}
#if LANG_CXX11
inline void MsgBuyStoreReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgBuyStoreReq.version)
}
#endif
inline void MsgBuyStoreReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgBuyStoreReq.version)
}
inline void MsgBuyStoreReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgBuyStoreReq.version)
}
inline ::std::string* MsgBuyStoreReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgBuyStoreReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBuyStoreReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgBuyStoreReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBuyStoreReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgBuyStoreReq.version)
}

// bytes buytype = 2;
inline void MsgBuyStoreReq::clear_buytype() {
  buytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBuyStoreReq::buytype() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreReq.buytype)
  return buytype_.GetNoArena();
}
inline void MsgBuyStoreReq::set_buytype(const ::std::string& value) {
  
  buytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreReq.buytype)
}
#if LANG_CXX11
inline void MsgBuyStoreReq::set_buytype(::std::string&& value) {
  
  buytype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgBuyStoreReq.buytype)
}
#endif
inline void MsgBuyStoreReq::set_buytype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  buytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgBuyStoreReq.buytype)
}
inline void MsgBuyStoreReq::set_buytype(const void* value, size_t size) {
  
  buytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgBuyStoreReq.buytype)
}
inline ::std::string* MsgBuyStoreReq::mutable_buytype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgBuyStoreReq.buytype)
  return buytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBuyStoreReq::release_buytype() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgBuyStoreReq.buytype)
  
  return buytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBuyStoreReq::set_allocated_buytype(::std::string* buytype) {
  if (buytype != NULL) {
    
  } else {
    
  }
  buytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buytype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgBuyStoreReq.buytype)
}

// uint32 id = 3;
inline void MsgBuyStoreReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgBuyStoreReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreReq.id)
  return id_;
}
inline void MsgBuyStoreReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreReq.id)
}

// uint32 count = 4;
inline void MsgBuyStoreReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgBuyStoreReq::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreReq.count)
  return count_;
}
inline void MsgBuyStoreReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreReq.count)
}

// -------------------------------------------------------------------

// MsgQueryStoreReq

// bytes version = 1;
inline void MsgQueryStoreReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgQueryStoreReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryStoreReq.version)
  return version_.GetNoArena();
}
inline void MsgQueryStoreReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryStoreReq.version)
}
#if LANG_CXX11
inline void MsgQueryStoreReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgQueryStoreReq.version)
}
#endif
inline void MsgQueryStoreReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryStoreReq.version)
}
inline void MsgQueryStoreReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryStoreReq.version)
}
inline ::std::string* MsgQueryStoreReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryStoreReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgQueryStoreReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryStoreReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgQueryStoreReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryStoreReq.version)
}

// -------------------------------------------------------------------

// MsgQueryStoreAck

// bytes version = 1;
inline void MsgQueryStoreAck::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgQueryStoreAck::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryStoreAck.version)
  return version_.GetNoArena();
}
inline void MsgQueryStoreAck::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryStoreAck.version)
}
#if LANG_CXX11
inline void MsgQueryStoreAck::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgQueryStoreAck.version)
}
#endif
inline void MsgQueryStoreAck::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryStoreAck.version)
}
inline void MsgQueryStoreAck::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryStoreAck.version)
}
inline ::std::string* MsgQueryStoreAck::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryStoreAck.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgQueryStoreAck::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryStoreAck.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgQueryStoreAck::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryStoreAck.version)
}

// bytes data = 2;
inline void MsgQueryStoreAck::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgQueryStoreAck::data() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryStoreAck.data)
  return data_.GetNoArena();
}
inline void MsgQueryStoreAck::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryStoreAck.data)
}
#if LANG_CXX11
inline void MsgQueryStoreAck::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgQueryStoreAck.data)
}
#endif
inline void MsgQueryStoreAck::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryStoreAck.data)
}
inline void MsgQueryStoreAck::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryStoreAck.data)
}
inline ::std::string* MsgQueryStoreAck::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryStoreAck.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgQueryStoreAck::release_data() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryStoreAck.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgQueryStoreAck::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryStoreAck.data)
}

// -------------------------------------------------------------------

// MsgApplyPayOrderReq

// string payid = 1;
inline void MsgApplyPayOrderReq::clear_payid() {
  payid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgApplyPayOrderReq::payid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyPayOrderReq.payid)
  return payid_.GetNoArena();
}
inline void MsgApplyPayOrderReq::set_payid(const ::std::string& value) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyPayOrderReq.payid)
}
#if LANG_CXX11
inline void MsgApplyPayOrderReq::set_payid(::std::string&& value) {
  
  payid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgApplyPayOrderReq.payid)
}
#endif
inline void MsgApplyPayOrderReq::set_payid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgApplyPayOrderReq.payid)
}
inline void MsgApplyPayOrderReq::set_payid(const char* value, size_t size) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgApplyPayOrderReq.payid)
}
inline ::std::string* MsgApplyPayOrderReq::mutable_payid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgApplyPayOrderReq.payid)
  return payid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgApplyPayOrderReq::release_payid() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgApplyPayOrderReq.payid)
  
  return payid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgApplyPayOrderReq::set_allocated_payid(::std::string* payid) {
  if (payid != NULL) {
    
  } else {
    
  }
  payid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgApplyPayOrderReq.payid)
}

// -------------------------------------------------------------------

// MsgApplyPayOrderAck

// string payid = 1;
inline void MsgApplyPayOrderAck::clear_payid() {
  payid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgApplyPayOrderAck::payid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyPayOrderAck.payid)
  return payid_.GetNoArena();
}
inline void MsgApplyPayOrderAck::set_payid(const ::std::string& value) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyPayOrderAck.payid)
}
#if LANG_CXX11
inline void MsgApplyPayOrderAck::set_payid(::std::string&& value) {
  
  payid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgApplyPayOrderAck.payid)
}
#endif
inline void MsgApplyPayOrderAck::set_payid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgApplyPayOrderAck.payid)
}
inline void MsgApplyPayOrderAck::set_payid(const char* value, size_t size) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgApplyPayOrderAck.payid)
}
inline ::std::string* MsgApplyPayOrderAck::mutable_payid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgApplyPayOrderAck.payid)
  return payid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgApplyPayOrderAck::release_payid() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgApplyPayOrderAck.payid)
  
  return payid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgApplyPayOrderAck::set_allocated_payid(::std::string* payid) {
  if (payid != NULL) {
    
  } else {
    
  }
  payid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgApplyPayOrderAck.payid)
}

// string order = 2;
inline void MsgApplyPayOrderAck::clear_order() {
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgApplyPayOrderAck::order() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyPayOrderAck.order)
  return order_.GetNoArena();
}
inline void MsgApplyPayOrderAck::set_order(const ::std::string& value) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyPayOrderAck.order)
}
#if LANG_CXX11
inline void MsgApplyPayOrderAck::set_order(::std::string&& value) {
  
  order_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgApplyPayOrderAck.order)
}
#endif
inline void MsgApplyPayOrderAck::set_order(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgApplyPayOrderAck.order)
}
inline void MsgApplyPayOrderAck::set_order(const char* value, size_t size) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgApplyPayOrderAck.order)
}
inline ::std::string* MsgApplyPayOrderAck::mutable_order() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgApplyPayOrderAck.order)
  return order_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgApplyPayOrderAck::release_order() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgApplyPayOrderAck.order)
  
  return order_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgApplyPayOrderAck::set_allocated_order(::std::string* order) {
  if (order != NULL) {
    
  } else {
    
  }
  order_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgApplyPayOrderAck.order)
}

// -------------------------------------------------------------------

// MsgPayResultReq

// string payid = 1;
inline void MsgPayResultReq::clear_payid() {
  payid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPayResultReq::payid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgPayResultReq.payid)
  return payid_.GetNoArena();
}
inline void MsgPayResultReq::set_payid(const ::std::string& value) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgPayResultReq.payid)
}
#if LANG_CXX11
inline void MsgPayResultReq::set_payid(::std::string&& value) {
  
  payid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgPayResultReq.payid)
}
#endif
inline void MsgPayResultReq::set_payid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgPayResultReq.payid)
}
inline void MsgPayResultReq::set_payid(const char* value, size_t size) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgPayResultReq.payid)
}
inline ::std::string* MsgPayResultReq::mutable_payid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgPayResultReq.payid)
  return payid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPayResultReq::release_payid() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgPayResultReq.payid)
  
  return payid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPayResultReq::set_allocated_payid(::std::string* payid) {
  if (payid != NULL) {
    
  } else {
    
  }
  payid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgPayResultReq.payid)
}

// string order = 2;
inline void MsgPayResultReq::clear_order() {
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPayResultReq::order() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgPayResultReq.order)
  return order_.GetNoArena();
}
inline void MsgPayResultReq::set_order(const ::std::string& value) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgPayResultReq.order)
}
#if LANG_CXX11
inline void MsgPayResultReq::set_order(::std::string&& value) {
  
  order_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgPayResultReq.order)
}
#endif
inline void MsgPayResultReq::set_order(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgPayResultReq.order)
}
inline void MsgPayResultReq::set_order(const char* value, size_t size) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgPayResultReq.order)
}
inline ::std::string* MsgPayResultReq::mutable_order() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgPayResultReq.order)
  return order_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPayResultReq::release_order() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgPayResultReq.order)
  
  return order_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPayResultReq::set_allocated_order(::std::string* order) {
  if (order != NULL) {
    
  } else {
    
  }
  order_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgPayResultReq.order)
}

// bool result = 3;
inline void MsgPayResultReq::clear_result() {
  result_ = false;
}
inline bool MsgPayResultReq::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgPayResultReq.result)
  return result_;
}
inline void MsgPayResultReq::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgPayResultReq.result)
}

// -------------------------------------------------------------------

// MsgQueryPayReq

// -------------------------------------------------------------------

// MsgQueryRankListReq

// uint32 rankid = 1;
inline void MsgQueryRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListReq.rankid)
  return rankid_;
}
inline void MsgQueryRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListReq.rankid)
}

// -------------------------------------------------------------------

// MsgQueryRankListAck

// uint32 rankid = 1;
inline void MsgQueryRankListAck::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListAck::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListAck.rankid)
  return rankid_;
}
inline void MsgQueryRankListAck::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListAck.rankid)
}

// .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryRankListAck::has_rankdatas() const {
  return this != internal_default_instance() && rankdatas_ != NULL;
}
inline const ::KFMsg::PBRankDatas& MsgQueryRankListAck::_internal_rankdatas() const {
  return *rankdatas_;
}
inline const ::KFMsg::PBRankDatas& MsgQueryRankListAck::rankdatas() const {
  const ::KFMsg::PBRankDatas* p = rankdatas_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListAck.rankdatas)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankDatas*>(
      &::KFMsg::_PBRankDatas_default_instance_);
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::release_rankdatas() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryRankListAck.rankdatas)
  
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::mutable_rankdatas() {
  
  if (rankdatas_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankDatas>(GetArenaNoVirtual());
    rankdatas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryRankListAck.rankdatas)
  return rankdatas_;
}
inline void MsgQueryRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rankdatas_);
  }
  if (rankdatas) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rankdatas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rankdatas, submessage_arena);
    }
    
  } else {
    
  }
  rankdatas_ = rankdatas;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryRankListAck.rankdatas)
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListReq

// uint32 rankid = 1;
inline void MsgQueryFriendRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListReq.rankid)
  return rankid_;
}
inline void MsgQueryFriendRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryFriendRankListReq.rankid)
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListAck

// uint32 rankid = 1;
inline void MsgQueryFriendRankListAck::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListAck::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListAck.rankid)
  return rankid_;
}
inline void MsgQueryFriendRankListAck::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryFriendRankListAck.rankid)
}

// .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryFriendRankListAck::has_rankdatas() const {
  return this != internal_default_instance() && rankdatas_ != NULL;
}
inline const ::KFMsg::PBRankDatas& MsgQueryFriendRankListAck::_internal_rankdatas() const {
  return *rankdatas_;
}
inline const ::KFMsg::PBRankDatas& MsgQueryFriendRankListAck::rankdatas() const {
  const ::KFMsg::PBRankDatas* p = rankdatas_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankDatas*>(
      &::KFMsg::_PBRankDatas_default_instance_);
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::release_rankdatas() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::mutable_rankdatas() {
  
  if (rankdatas_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankDatas>(GetArenaNoVirtual());
    rankdatas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  return rankdatas_;
}
inline void MsgQueryFriendRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rankdatas_);
  }
  if (rankdatas) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rankdatas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rankdatas, submessage_arena);
    }
    
  } else {
    
  }
  rankdatas_ = rankdatas;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryFriendRankListAck.rankdatas)
}

// -------------------------------------------------------------------

// MsgAddRelationReq

// bytes dataname = 1;
inline void MsgAddRelationReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddRelationReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgAddRelationReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.dataname)
}
#if LANG_CXX11
inline void MsgAddRelationReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddRelationReq.dataname)
}
#endif
inline void MsgAddRelationReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddRelationReq.dataname)
}
inline void MsgAddRelationReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddRelationReq.dataname)
}
inline ::std::string* MsgAddRelationReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddRelationReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddRelationReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddRelationReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddRelationReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddRelationReq.dataname)
}

// bytes playername = 2;
inline void MsgAddRelationReq::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddRelationReq::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.playername)
  return playername_.GetNoArena();
}
inline void MsgAddRelationReq::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.playername)
}
#if LANG_CXX11
inline void MsgAddRelationReq::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddRelationReq.playername)
}
#endif
inline void MsgAddRelationReq::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddRelationReq.playername)
}
inline void MsgAddRelationReq::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddRelationReq.playername)
}
inline ::std::string* MsgAddRelationReq::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddRelationReq.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddRelationReq::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddRelationReq.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddRelationReq::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddRelationReq.playername)
}

// uint64 playerid = 3;
inline void MsgAddRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgAddRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.playerid)
  return playerid_;
}
inline void MsgAddRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.playerid)
}

// bytes message = 4;
inline void MsgAddRelationReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddRelationReq::message() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.message)
  return message_.GetNoArena();
}
inline void MsgAddRelationReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.message)
}
#if LANG_CXX11
inline void MsgAddRelationReq::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddRelationReq.message)
}
#endif
inline void MsgAddRelationReq::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddRelationReq.message)
}
inline void MsgAddRelationReq::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddRelationReq.message)
}
inline ::std::string* MsgAddRelationReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddRelationReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddRelationReq::release_message() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddRelationReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddRelationReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddRelationReq.message)
}

// -------------------------------------------------------------------

// MsgDelRelationReq

// bytes dataname = 1;
inline void MsgDelRelationReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgDelRelationReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDelRelationReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgDelRelationReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgDelRelationReq.dataname)
}
#if LANG_CXX11
inline void MsgDelRelationReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgDelRelationReq.dataname)
}
#endif
inline void MsgDelRelationReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgDelRelationReq.dataname)
}
inline void MsgDelRelationReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgDelRelationReq.dataname)
}
inline ::std::string* MsgDelRelationReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgDelRelationReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgDelRelationReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgDelRelationReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgDelRelationReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgDelRelationReq.dataname)
}

// uint64 playerid = 2;
inline void MsgDelRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDelRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDelRelationReq.playerid)
  return playerid_;
}
inline void MsgDelRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDelRelationReq.playerid)
}

// -------------------------------------------------------------------

// MsgReplyRelationInviteReq

// bytes dataname = 1;
inline void MsgReplyRelationInviteReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReplyRelationInviteReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyRelationInviteReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgReplyRelationInviteReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyRelationInviteReq.dataname)
}
#if LANG_CXX11
inline void MsgReplyRelationInviteReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgReplyRelationInviteReq.dataname)
}
#endif
inline void MsgReplyRelationInviteReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgReplyRelationInviteReq.dataname)
}
inline void MsgReplyRelationInviteReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgReplyRelationInviteReq.dataname)
}
inline ::std::string* MsgReplyRelationInviteReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgReplyRelationInviteReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReplyRelationInviteReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgReplyRelationInviteReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReplyRelationInviteReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgReplyRelationInviteReq.dataname)
}

// uint64 playerid = 2;
inline void MsgReplyRelationInviteReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReplyRelationInviteReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyRelationInviteReq.playerid)
  return playerid_;
}
inline void MsgReplyRelationInviteReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyRelationInviteReq.playerid)
}

// uint32 operate = 3;
inline void MsgReplyRelationInviteReq::clear_operate() {
  operate_ = 0u;
}
inline ::google::protobuf::uint32 MsgReplyRelationInviteReq::operate() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyRelationInviteReq.operate)
  return operate_;
}
inline void MsgReplyRelationInviteReq::set_operate(::google::protobuf::uint32 value) {
  
  operate_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyRelationInviteReq.operate)
}

// -------------------------------------------------------------------

// MsgSetRefuseRelationInviteReq

// bytes dataname = 1;
inline void MsgSetRefuseRelationInviteReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetRefuseRelationInviteReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgSetRefuseRelationInviteReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
}
#if LANG_CXX11
inline void MsgSetRefuseRelationInviteReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
}
#endif
inline void MsgSetRefuseRelationInviteReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
}
inline void MsgSetRefuseRelationInviteReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
}
inline ::std::string* MsgSetRefuseRelationInviteReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetRefuseRelationInviteReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetRefuseRelationInviteReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSetRefuseRelationInviteReq.dataname)
}

// uint32 refuse = 2;
inline void MsgSetRefuseRelationInviteReq::clear_refuse() {
  refuse_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetRefuseRelationInviteReq::refuse() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetRefuseRelationInviteReq.refuse)
  return refuse_;
}
inline void MsgSetRefuseRelationInviteReq::set_refuse(::google::protobuf::uint32 value) {
  
  refuse_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetRefuseRelationInviteReq.refuse)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::FrameClientProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::FrameClientProtocol>() {
  return ::KFMsg::FrameClientProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)


#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif
#endif  // PROTOBUF_INCLUDED_FrameClientMessage_2eproto
