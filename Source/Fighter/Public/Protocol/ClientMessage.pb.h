// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessage.proto

#ifndef PROTOBUF_INCLUDED_ClientMessage_2eproto
#define PROTOBUF_INCLUDED_ClientMessage_2eproto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4946)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "DefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ClientMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_ClientMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_ClientMessage_2eproto
namespace KFMsg {
class MsgCancelMatchReq;
class MsgCancelMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCancelMatchReqDefaultTypeInternal _MsgCancelMatchReq_default_instance_;
class MsgFighterHeroReq;
class MsgFighterHeroReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgFighterHeroReqDefaultTypeInternal _MsgFighterHeroReq_default_instance_;
class MsgFinishRoomReq;
class MsgFinishRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgFinishRoomReqDefaultTypeInternal _MsgFinishRoomReq_default_instance_;
class MsgInformBattleAck;
class MsgInformBattleAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgInformBattleAckDefaultTypeInternal _MsgInformBattleAck_default_instance_;
class MsgInformBattleReq;
class MsgInformBattleReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgInformBattleReqDefaultTypeInternal _MsgInformBattleReq_default_instance_;
class MsgStartMatchReq;
class MsgStartMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgStartMatchReqDefaultTypeInternal _MsgStartMatchReq_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCancelMatchReq* Arena::CreateMaybeMessage<::KFMsg::MsgCancelMatchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgFighterHeroReq* Arena::CreateMaybeMessage<::KFMsg::MsgFighterHeroReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgFinishRoomReq* Arena::CreateMaybeMessage<::KFMsg::MsgFinishRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgInformBattleAck* Arena::CreateMaybeMessage<::KFMsg::MsgInformBattleAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgInformBattleReq* Arena::CreateMaybeMessage<::KFMsg::MsgInformBattleReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgStartMatchReq* Arena::CreateMaybeMessage<::KFMsg::MsgStartMatchReq>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum ClientProtocol {
  MSG_CLIENT_BEGIN = 0,
  MSG_FIGHTER_HERO_REQ = 3001,
  MSG_START_MATCH_REQ = 3101,
  MSG_CANCEL_MATCH_REQ = 3102,
  MSG_INFORM_BATTLE_REQ = 3103,
  MSG_INFORM_BATTLE_ACK = 3104,
  MSG_FINISH_ROOM_REQ = 3105,
  ClientProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool ClientProtocol_IsValid(int value);
const ClientProtocol ClientProtocol_MIN = MSG_CLIENT_BEGIN;
const ClientProtocol ClientProtocol_MAX = MSG_FINISH_ROOM_REQ;
const int ClientProtocol_ARRAYSIZE = ClientProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* ClientProtocol_descriptor();
inline const ::std::string& ClientProtocol_Name(ClientProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientProtocol_descriptor(), value);
}
inline bool ClientProtocol_Parse(
    const ::std::string& name, ClientProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientProtocol>(
    ClientProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgFighterHeroReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgFighterHeroReq) */ {
 public:
  MsgFighterHeroReq();
  virtual ~MsgFighterHeroReq();

  MsgFighterHeroReq(const MsgFighterHeroReq& from);

  inline MsgFighterHeroReq& operator=(const MsgFighterHeroReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgFighterHeroReq(MsgFighterHeroReq&& from) noexcept
    : MsgFighterHeroReq() {
    *this = ::std::move(from);
  }

  inline MsgFighterHeroReq& operator=(MsgFighterHeroReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFighterHeroReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgFighterHeroReq* internal_default_instance() {
    return reinterpret_cast<const MsgFighterHeroReq*>(
               &_MsgFighterHeroReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgFighterHeroReq* other);
  friend void swap(MsgFighterHeroReq& a, MsgFighterHeroReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgFighterHeroReq* New() const final {
    return CreateMaybeMessage<MsgFighterHeroReq>(NULL);
  }

  MsgFighterHeroReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgFighterHeroReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgFighterHeroReq& from);
  void MergeFrom(const MsgFighterHeroReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgFighterHeroReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 heroid = 1;
  void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgFighterHeroReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgStartMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgStartMatchReq) */ {
 public:
  MsgStartMatchReq();
  virtual ~MsgStartMatchReq();

  MsgStartMatchReq(const MsgStartMatchReq& from);

  inline MsgStartMatchReq& operator=(const MsgStartMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStartMatchReq(MsgStartMatchReq&& from) noexcept
    : MsgStartMatchReq() {
    *this = ::std::move(from);
  }

  inline MsgStartMatchReq& operator=(MsgStartMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStartMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStartMatchReq* internal_default_instance() {
    return reinterpret_cast<const MsgStartMatchReq*>(
               &_MsgStartMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgStartMatchReq* other);
  friend void swap(MsgStartMatchReq& a, MsgStartMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStartMatchReq* New() const final {
    return CreateMaybeMessage<MsgStartMatchReq>(NULL);
  }

  MsgStartMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgStartMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgStartMatchReq& from);
  void MergeFrom(const MsgStartMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStartMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 matchid = 2;
  void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgStartMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCancelMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCancelMatchReq) */ {
 public:
  MsgCancelMatchReq();
  virtual ~MsgCancelMatchReq();

  MsgCancelMatchReq(const MsgCancelMatchReq& from);

  inline MsgCancelMatchReq& operator=(const MsgCancelMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCancelMatchReq(MsgCancelMatchReq&& from) noexcept
    : MsgCancelMatchReq() {
    *this = ::std::move(from);
  }

  inline MsgCancelMatchReq& operator=(MsgCancelMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCancelMatchReq* internal_default_instance() {
    return reinterpret_cast<const MsgCancelMatchReq*>(
               &_MsgCancelMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgCancelMatchReq* other);
  friend void swap(MsgCancelMatchReq& a, MsgCancelMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCancelMatchReq* New() const final {
    return CreateMaybeMessage<MsgCancelMatchReq>(NULL);
  }

  MsgCancelMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCancelMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCancelMatchReq& from);
  void MergeFrom(const MsgCancelMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCancelMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCancelMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgInformBattleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgInformBattleReq) */ {
 public:
  MsgInformBattleReq();
  virtual ~MsgInformBattleReq();

  MsgInformBattleReq(const MsgInformBattleReq& from);

  inline MsgInformBattleReq& operator=(const MsgInformBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgInformBattleReq(MsgInformBattleReq&& from) noexcept
    : MsgInformBattleReq() {
    *this = ::std::move(from);
  }

  inline MsgInformBattleReq& operator=(MsgInformBattleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInformBattleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgInformBattleReq* internal_default_instance() {
    return reinterpret_cast<const MsgInformBattleReq*>(
               &_MsgInformBattleReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgInformBattleReq* other);
  friend void swap(MsgInformBattleReq& a, MsgInformBattleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgInformBattleReq* New() const final {
    return CreateMaybeMessage<MsgInformBattleReq>(NULL);
  }

  MsgInformBattleReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgInformBattleReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgInformBattleReq& from);
  void MergeFrom(const MsgInformBattleReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInformBattleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 battleid = 2;
  void clear_battleid();
  static const int kBattleidFieldNumber = 2;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgInformBattleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgInformBattleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgInformBattleAck) */ {
 public:
  MsgInformBattleAck();
  virtual ~MsgInformBattleAck();

  MsgInformBattleAck(const MsgInformBattleAck& from);

  inline MsgInformBattleAck& operator=(const MsgInformBattleAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgInformBattleAck(MsgInformBattleAck&& from) noexcept
    : MsgInformBattleAck() {
    *this = ::std::move(from);
  }

  inline MsgInformBattleAck& operator=(MsgInformBattleAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInformBattleAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgInformBattleAck* internal_default_instance() {
    return reinterpret_cast<const MsgInformBattleAck*>(
               &_MsgInformBattleAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgInformBattleAck* other);
  friend void swap(MsgInformBattleAck& a, MsgInformBattleAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgInformBattleAck* New() const final {
    return CreateMaybeMessage<MsgInformBattleAck>(NULL);
  }

  MsgInformBattleAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgInformBattleAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgInformBattleAck& from);
  void MergeFrom(const MsgInformBattleAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInformBattleAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgInformBattleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgFinishRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgFinishRoomReq) */ {
 public:
  MsgFinishRoomReq();
  virtual ~MsgFinishRoomReq();

  MsgFinishRoomReq(const MsgFinishRoomReq& from);

  inline MsgFinishRoomReq& operator=(const MsgFinishRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgFinishRoomReq(MsgFinishRoomReq&& from) noexcept
    : MsgFinishRoomReq() {
    *this = ::std::move(from);
  }

  inline MsgFinishRoomReq& operator=(MsgFinishRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFinishRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgFinishRoomReq* internal_default_instance() {
    return reinterpret_cast<const MsgFinishRoomReq*>(
               &_MsgFinishRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgFinishRoomReq* other);
  friend void swap(MsgFinishRoomReq& a, MsgFinishRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgFinishRoomReq* New() const final {
    return CreateMaybeMessage<MsgFinishRoomReq>(NULL);
  }

  MsgFinishRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgFinishRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgFinishRoomReq& from);
  void MergeFrom(const MsgFinishRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgFinishRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgFinishRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ClientMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgFighterHeroReq

// uint32 heroid = 1;
inline void MsgFighterHeroReq::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 MsgFighterHeroReq::heroid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgFighterHeroReq.heroid)
  return heroid_;
}
inline void MsgFighterHeroReq::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgFighterHeroReq.heroid)
}

// -------------------------------------------------------------------

// MsgStartMatchReq

// bytes version = 1;
inline void MsgStartMatchReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgStartMatchReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchReq.version)
  return version_.GetNoArena();
}
inline void MsgStartMatchReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchReq.version)
}
#if LANG_CXX11
inline void MsgStartMatchReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgStartMatchReq.version)
}
#endif
inline void MsgStartMatchReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgStartMatchReq.version)
}
inline void MsgStartMatchReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgStartMatchReq.version)
}
inline ::std::string* MsgStartMatchReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgStartMatchReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgStartMatchReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgStartMatchReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgStartMatchReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgStartMatchReq.version)
}

// uint32 matchid = 2;
inline void MsgStartMatchReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgStartMatchReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchReq.matchid)
  return matchid_;
}
inline void MsgStartMatchReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchReq.matchid)
}

// uint64 serverid = 3;
inline void MsgStartMatchReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgStartMatchReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchReq.serverid)
  return serverid_;
}
inline void MsgStartMatchReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchReq.serverid)
}

// -------------------------------------------------------------------

// MsgCancelMatchReq

// uint32 matchid = 1;
inline void MsgCancelMatchReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCancelMatchReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCancelMatchReq.matchid)
  return matchid_;
}
inline void MsgCancelMatchReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCancelMatchReq.matchid)
}

// -------------------------------------------------------------------

// MsgInformBattleReq

// uint64 roomid = 1;
inline void MsgInformBattleReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgInformBattleReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInformBattleReq.roomid)
  return roomid_;
}
inline void MsgInformBattleReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgInformBattleReq.roomid)
}

// uint64 battleid = 2;
inline void MsgInformBattleReq::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgInformBattleReq::battleid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInformBattleReq.battleid)
  return battleid_;
}
inline void MsgInformBattleReq::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgInformBattleReq.battleid)
}

// bytes ip = 3;
inline void MsgInformBattleReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgInformBattleReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInformBattleReq.ip)
  return ip_.GetNoArena();
}
inline void MsgInformBattleReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgInformBattleReq.ip)
}
#if LANG_CXX11
inline void MsgInformBattleReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgInformBattleReq.ip)
}
#endif
inline void MsgInformBattleReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgInformBattleReq.ip)
}
inline void MsgInformBattleReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgInformBattleReq.ip)
}
inline ::std::string* MsgInformBattleReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgInformBattleReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgInformBattleReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgInformBattleReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgInformBattleReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgInformBattleReq.ip)
}

// uint32 port = 4;
inline void MsgInformBattleReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 MsgInformBattleReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInformBattleReq.port)
  return port_;
}
inline void MsgInformBattleReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgInformBattleReq.port)
}

// -------------------------------------------------------------------

// MsgInformBattleAck

// -------------------------------------------------------------------

// MsgFinishRoomReq

// uint64 roomid = 1;
inline void MsgFinishRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgFinishRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgFinishRoomReq.roomid)
  return roomid_;
}
inline void MsgFinishRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgFinishRoomReq.roomid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::ClientProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::ClientProtocol>() {
  return ::KFMsg::ClientProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)


#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif
#endif  // PROTOBUF_INCLUDED_ClientMessage_2eproto
