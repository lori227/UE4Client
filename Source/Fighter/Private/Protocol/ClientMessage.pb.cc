// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessage.proto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4125)
	#pragma warning(disable : 4668)
	#pragma warning(disable : 4800)
	#pragma warning(disable : 4647)
#endif

#include "ClientMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace KFMsg {
class MsgFighterHeroReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFighterHeroReq>
      _instance;
} _MsgFighterHeroReq_default_instance_;
class MsgStartMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgStartMatchReq>
      _instance;
} _MsgStartMatchReq_default_instance_;
class MsgCancelMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgCancelMatchReq>
      _instance;
} _MsgCancelMatchReq_default_instance_;
class MsgInformBattleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInformBattleReq>
      _instance;
} _MsgInformBattleReq_default_instance_;
class MsgInformBattleAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInformBattleAck>
      _instance;
} _MsgInformBattleAck_default_instance_;
class MsgFinishRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFinishRoomReq>
      _instance;
} _MsgFinishRoomReq_default_instance_;
}  // namespace KFMsg
namespace protobuf_ClientMessage_2eproto {
static void InitDefaultsMsgFighterHeroReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgFighterHeroReq_default_instance_;
    new (ptr) ::KFMsg::MsgFighterHeroReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgFighterHeroReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgFighterHeroReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgFighterHeroReq}, {}};

static void InitDefaultsMsgStartMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgStartMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgStartMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgStartMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgStartMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgStartMatchReq}, {}};

static void InitDefaultsMsgCancelMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgCancelMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgCancelMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgCancelMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgCancelMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgCancelMatchReq}, {}};

static void InitDefaultsMsgInformBattleReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgInformBattleReq_default_instance_;
    new (ptr) ::KFMsg::MsgInformBattleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgInformBattleReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgInformBattleReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgInformBattleReq}, {}};

static void InitDefaultsMsgInformBattleAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgInformBattleAck_default_instance_;
    new (ptr) ::KFMsg::MsgInformBattleAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgInformBattleAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgInformBattleAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgInformBattleAck}, {}};

static void InitDefaultsMsgFinishRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgFinishRoomReq_default_instance_;
    new (ptr) ::KFMsg::MsgFinishRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgFinishRoomReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgFinishRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgFinishRoomReq}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgFighterHeroReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgStartMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgCancelMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgInformBattleReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgInformBattleAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgFinishRoomReq.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFighterHeroReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFighterHeroReq, heroid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCancelMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCancelMatchReq, matchid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, battleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFinishRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFinishRoomReq, roomid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::MsgFighterHeroReq)},
  { 6, -1, sizeof(::KFMsg::MsgStartMatchReq)},
  { 14, -1, sizeof(::KFMsg::MsgCancelMatchReq)},
  { 20, -1, sizeof(::KFMsg::MsgInformBattleReq)},
  { 29, -1, sizeof(::KFMsg::MsgInformBattleAck)},
  { 34, -1, sizeof(::KFMsg::MsgFinishRoomReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgFighterHeroReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgStartMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgCancelMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgInformBattleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgInformBattleAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgFinishRoomReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ClientMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023ClientMessage.proto\022\005KFMsg\032\023DefineMess"
      "age.proto\"#\n\021MsgFighterHeroReq\022\016\n\006heroid"
      "\030\001 \001(\r\"F\n\020MsgStartMatchReq\022\017\n\007version\030\001 "
      "\001(\014\022\017\n\007matchid\030\002 \001(\r\022\020\n\010serverid\030\003 \001(\004\"$"
      "\n\021MsgCancelMatchReq\022\017\n\007matchid\030\001 \001(\r\"P\n\022"
      "MsgInformBattleReq\022\016\n\006roomid\030\001 \001(\004\022\020\n\010ba"
      "ttleid\030\002 \001(\004\022\n\n\002ip\030\003 \001(\014\022\014\n\004port\030\004 \001(\r\"\024"
      "\n\022MsgInformBattleAck\"\"\n\020MsgFinishRoomReq"
      "\022\016\n\006roomid\030\001 \001(\004*\310\001\n\016ClientProtocol\022\024\n\020M"
      "SG_CLIENT_BEGIN\020\000\022\031\n\024MSG_FIGHTER_HERO_RE"
      "Q\020\271\027\022\030\n\023MSG_START_MATCH_REQ\020\235\030\022\031\n\024MSG_CA"
      "NCEL_MATCH_REQ\020\236\030\022\032\n\025MSG_INFORM_BATTLE_R"
      "EQ\020\237\030\022\032\n\025MSG_INFORM_BATTLE_ACK\020\240\030\022\030\n\023MSG"
      "_FINISH_ROOM_REQ\020\241\030b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 547);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_DefineMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ClientMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* ClientProtocol_descriptor() {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientMessage_2eproto::file_level_enum_descriptors[0];
}
bool ClientProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 3001:
    case 3101:
    case 3102:
    case 3103:
    case 3104:
    case 3105:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MsgFighterHeroReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgFighterHeroReq::kHeroidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFighterHeroReq::MsgFighterHeroReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgFighterHeroReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgFighterHeroReq)
}
MsgFighterHeroReq::MsgFighterHeroReq(const MsgFighterHeroReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  heroid_ = from.heroid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgFighterHeroReq)
}

void MsgFighterHeroReq::SharedCtor() {
  heroid_ = 0u;
}

MsgFighterHeroReq::~MsgFighterHeroReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgFighterHeroReq)
  SharedDtor();
}

void MsgFighterHeroReq::SharedDtor() {
}

void MsgFighterHeroReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgFighterHeroReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgFighterHeroReq& MsgFighterHeroReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgFighterHeroReq.base);
  return *internal_default_instance();
}


void MsgFighterHeroReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgFighterHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heroid_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgFighterHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgFighterHeroReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 heroid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgFighterHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgFighterHeroReq)
  return false;
#undef DO_
}

void MsgFighterHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgFighterHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 heroid = 1;
  if (this->heroid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgFighterHeroReq)
}

::google::protobuf::uint8* MsgFighterHeroReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgFighterHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 heroid = 1;
  if (this->heroid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgFighterHeroReq)
  return target;
}

size_t MsgFighterHeroReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgFighterHeroReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 heroid = 1;
  if (this->heroid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heroid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFighterHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgFighterHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFighterHeroReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgFighterHeroReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgFighterHeroReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgFighterHeroReq)
    MergeFrom(*source);
  }
}

void MsgFighterHeroReq::MergeFrom(const MsgFighterHeroReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgFighterHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.heroid() != 0) {
    set_heroid(from.heroid());
  }
}

void MsgFighterHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgFighterHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFighterHeroReq::CopyFrom(const MsgFighterHeroReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgFighterHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFighterHeroReq::IsInitialized() const {
  return true;
}

void MsgFighterHeroReq::Swap(MsgFighterHeroReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgFighterHeroReq::InternalSwap(MsgFighterHeroReq* other) {
  using std::swap;
  swap(heroid_, other->heroid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgFighterHeroReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgStartMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgStartMatchReq::kVersionFieldNumber;
const int MsgStartMatchReq::kMatchidFieldNumber;
const int MsgStartMatchReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgStartMatchReq::MsgStartMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgStartMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgStartMatchReq)
}
MsgStartMatchReq::MsgStartMatchReq(const MsgStartMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgStartMatchReq)
}

void MsgStartMatchReq::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(matchid_));
}

MsgStartMatchReq::~MsgStartMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgStartMatchReq)
  SharedDtor();
}

void MsgStartMatchReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgStartMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgStartMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgStartMatchReq& MsgStartMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgStartMatchReq.base);
  return *internal_default_instance();
}


void MsgStartMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgStartMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool MsgStartMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgStartMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgStartMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgStartMatchReq)
  return false;
#undef DO_
}

void MsgStartMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgStartMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->version(), output);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->matchid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgStartMatchReq)
}

::google::protobuf::uint8* MsgStartMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgStartMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->version(), target);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->matchid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgStartMatchReq)
  return target;
}

size_t MsgStartMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgStartMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgStartMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgStartMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgStartMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgStartMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgStartMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgStartMatchReq)
    MergeFrom(*source);
  }
}

void MsgStartMatchReq::MergeFrom(const MsgStartMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgStartMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void MsgStartMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgStartMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgStartMatchReq::CopyFrom(const MsgStartMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgStartMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgStartMatchReq::IsInitialized() const {
  return true;
}

void MsgStartMatchReq::Swap(MsgStartMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgStartMatchReq::InternalSwap(MsgStartMatchReq* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgStartMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgCancelMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgCancelMatchReq::kMatchidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgCancelMatchReq::MsgCancelMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgCancelMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgCancelMatchReq)
}
MsgCancelMatchReq::MsgCancelMatchReq(const MsgCancelMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  matchid_ = from.matchid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgCancelMatchReq)
}

void MsgCancelMatchReq::SharedCtor() {
  matchid_ = 0u;
}

MsgCancelMatchReq::~MsgCancelMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgCancelMatchReq)
  SharedDtor();
}

void MsgCancelMatchReq::SharedDtor() {
}

void MsgCancelMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgCancelMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgCancelMatchReq& MsgCancelMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgCancelMatchReq.base);
  return *internal_default_instance();
}


void MsgCancelMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matchid_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgCancelMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgCancelMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgCancelMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgCancelMatchReq)
  return false;
#undef DO_
}

void MsgCancelMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgCancelMatchReq)
}

::google::protobuf::uint8* MsgCancelMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgCancelMatchReq)
  return target;
}

size_t MsgCancelMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgCancelMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgCancelMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgCancelMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCancelMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgCancelMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgCancelMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgCancelMatchReq)
    MergeFrom(*source);
  }
}

void MsgCancelMatchReq::MergeFrom(const MsgCancelMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgCancelMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void MsgCancelMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgCancelMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCancelMatchReq::CopyFrom(const MsgCancelMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgCancelMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCancelMatchReq::IsInitialized() const {
  return true;
}

void MsgCancelMatchReq::Swap(MsgCancelMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCancelMatchReq::InternalSwap(MsgCancelMatchReq* other) {
  using std::swap;
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgCancelMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgInformBattleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgInformBattleReq::kRoomidFieldNumber;
const int MsgInformBattleReq::kBattleidFieldNumber;
const int MsgInformBattleReq::kIpFieldNumber;
const int MsgInformBattleReq::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInformBattleReq::MsgInformBattleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgInformBattleReq)
}
MsgInformBattleReq::MsgInformBattleReq(const MsgInformBattleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgInformBattleReq)
}

void MsgInformBattleReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(port_));
}

MsgInformBattleReq::~MsgInformBattleReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgInformBattleReq)
  SharedDtor();
}

void MsgInformBattleReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgInformBattleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgInformBattleReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgInformBattleReq& MsgInformBattleReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleReq.base);
  return *internal_default_instance();
}


void MsgInformBattleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgInformBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool MsgInformBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgInformBattleReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgInformBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgInformBattleReq)
  return false;
#undef DO_
}

void MsgInformBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgInformBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint64 battleid = 2;
  if (this->battleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ip(), output);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgInformBattleReq)
}

::google::protobuf::uint8* MsgInformBattleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgInformBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint64 battleid = 2;
  if (this->battleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ip(), target);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgInformBattleReq)
  return target;
}

size_t MsgInformBattleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgInformBattleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 battleid = 2;
  if (this->battleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleid());
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInformBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgInformBattleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInformBattleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgInformBattleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgInformBattleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgInformBattleReq)
    MergeFrom(*source);
  }
}

void MsgInformBattleReq::MergeFrom(const MsgInformBattleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgInformBattleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.battleid() != 0) {
    set_battleid(from.battleid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void MsgInformBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgInformBattleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInformBattleReq::CopyFrom(const MsgInformBattleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgInformBattleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInformBattleReq::IsInitialized() const {
  return true;
}

void MsgInformBattleReq::Swap(MsgInformBattleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInformBattleReq::InternalSwap(MsgInformBattleReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(battleid_, other->battleid_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgInformBattleReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgInformBattleAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInformBattleAck::MsgInformBattleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgInformBattleAck)
}
MsgInformBattleAck::MsgInformBattleAck(const MsgInformBattleAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgInformBattleAck)
}

void MsgInformBattleAck::SharedCtor() {
}

MsgInformBattleAck::~MsgInformBattleAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgInformBattleAck)
  SharedDtor();
}

void MsgInformBattleAck::SharedDtor() {
}

void MsgInformBattleAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgInformBattleAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgInformBattleAck& MsgInformBattleAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleAck.base);
  return *internal_default_instance();
}


void MsgInformBattleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgInformBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MsgInformBattleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgInformBattleAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgInformBattleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgInformBattleAck)
  return false;
#undef DO_
}

void MsgInformBattleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgInformBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgInformBattleAck)
}

::google::protobuf::uint8* MsgInformBattleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgInformBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgInformBattleAck)
  return target;
}

size_t MsgInformBattleAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgInformBattleAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInformBattleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgInformBattleAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInformBattleAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgInformBattleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgInformBattleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgInformBattleAck)
    MergeFrom(*source);
  }
}

void MsgInformBattleAck::MergeFrom(const MsgInformBattleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgInformBattleAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgInformBattleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgInformBattleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInformBattleAck::CopyFrom(const MsgInformBattleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgInformBattleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInformBattleAck::IsInitialized() const {
  return true;
}

void MsgInformBattleAck::Swap(MsgInformBattleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInformBattleAck::InternalSwap(MsgInformBattleAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgInformBattleAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgFinishRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgFinishRoomReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFinishRoomReq::MsgFinishRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgFinishRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgFinishRoomReq)
}
MsgFinishRoomReq::MsgFinishRoomReq(const MsgFinishRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgFinishRoomReq)
}

void MsgFinishRoomReq::SharedCtor() {
  roomid_ = GOOGLE_ULONGLONG(0);
}

MsgFinishRoomReq::~MsgFinishRoomReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgFinishRoomReq)
  SharedDtor();
}

void MsgFinishRoomReq::SharedDtor() {
}

void MsgFinishRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgFinishRoomReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgFinishRoomReq& MsgFinishRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgFinishRoomReq.base);
  return *internal_default_instance();
}


void MsgFinishRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgFinishRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MsgFinishRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgFinishRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgFinishRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgFinishRoomReq)
  return false;
#undef DO_
}

void MsgFinishRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgFinishRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgFinishRoomReq)
}

::google::protobuf::uint8* MsgFinishRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgFinishRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgFinishRoomReq)
  return target;
}

size_t MsgFinishRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgFinishRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFinishRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgFinishRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFinishRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgFinishRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgFinishRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgFinishRoomReq)
    MergeFrom(*source);
  }
}

void MsgFinishRoomReq::MergeFrom(const MsgFinishRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgFinishRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void MsgFinishRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgFinishRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFinishRoomReq::CopyFrom(const MsgFinishRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgFinishRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFinishRoomReq::IsInitialized() const {
  return true;
}

void MsgFinishRoomReq::Swap(MsgFinishRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgFinishRoomReq::InternalSwap(MsgFinishRoomReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgFinishRoomReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgFighterHeroReq* Arena::CreateMaybeMessage< ::KFMsg::MsgFighterHeroReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgFighterHeroReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgStartMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgStartMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgStartMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgCancelMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgCancelMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgCancelMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgInformBattleReq* Arena::CreateMaybeMessage< ::KFMsg::MsgInformBattleReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgInformBattleReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgInformBattleAck* Arena::CreateMaybeMessage< ::KFMsg::MsgInformBattleAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgInformBattleAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgFinishRoomReq* Arena::CreateMaybeMessage< ::KFMsg::MsgFinishRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgFinishRoomReq >(arena);
}
}  // namespace protobuf
}  // namespace google

#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif

// @@protoc_insertion_point(global_scope)
