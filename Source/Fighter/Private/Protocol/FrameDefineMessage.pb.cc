// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameDefineMessage.proto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4125)
	#pragma warning(disable : 4668)
	#pragma warning(disable : 4800)
	#pragma warning(disable : 4647)
#endif

#include "FrameDefineMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBArray_Pbuint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBLoginData_ChanneldataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbdoubleEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbstringEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRankData_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBShowData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBShowObject_Pbuint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBObject_PbarrayEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBShowObject;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_PBObject;
}  // namespace protobuf_FrameDefineMessage_2eproto
namespace KFMsg {
class PBObject_Pbint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbint32Entry_DoNotUse>
      _instance;
} _PBObject_Pbint32Entry_DoNotUse_default_instance_;
class PBObject_Pbuint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbuint32Entry_DoNotUse>
      _instance;
} _PBObject_Pbuint32Entry_DoNotUse_default_instance_;
class PBObject_Pbint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbint64Entry_DoNotUse>
      _instance;
} _PBObject_Pbint64Entry_DoNotUse_default_instance_;
class PBObject_Pbuint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbuint64Entry_DoNotUse>
      _instance;
} _PBObject_Pbuint64Entry_DoNotUse_default_instance_;
class PBObject_PbdoubleEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbdoubleEntry_DoNotUse>
      _instance;
} _PBObject_PbdoubleEntry_DoNotUse_default_instance_;
class PBObject_PbstringEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbstringEntry_DoNotUse>
      _instance;
} _PBObject_PbstringEntry_DoNotUse_default_instance_;
class PBObject_PbarrayEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbarrayEntry_DoNotUse>
      _instance;
} _PBObject_PbarrayEntry_DoNotUse_default_instance_;
class PBObject_PbobjectEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbobjectEntry_DoNotUse>
      _instance;
} _PBObject_PbobjectEntry_DoNotUse_default_instance_;
class PBObject_PbrecordEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbrecordEntry_DoNotUse>
      _instance;
} _PBObject_PbrecordEntry_DoNotUse_default_instance_;
class PBObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject>
      _instance;
} _PBObject_default_instance_;
class PBArray_Pbuint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBArray_Pbuint64Entry_DoNotUse>
      _instance;
} _PBArray_Pbuint64Entry_DoNotUse_default_instance_;
class PBArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBArray>
      _instance;
} _PBArray_default_instance_;
class PBRecord_PbobjectEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRecord_PbobjectEntry_DoNotUse>
      _instance;
} _PBRecord_PbobjectEntry_DoNotUse_default_instance_;
class PBRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRecord>
      _instance;
} _PBRecord_default_instance_;
class PBLoginData_ChanneldataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBLoginData_ChanneldataEntry_DoNotUse>
      _instance;
} _PBLoginData_ChanneldataEntry_DoNotUse_default_instance_;
class PBLoginDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBLoginData>
      _instance;
} _PBLoginData_default_instance_;
class PBShowDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBShowData>
      _instance;
} _PBShowData_default_instance_;
class PBShowObject_Pbuint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBShowObject_Pbuint64Entry_DoNotUse>
      _instance;
} _PBShowObject_Pbuint64Entry_DoNotUse_default_instance_;
class PBShowObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBShowObject>
      _instance;
} _PBShowObject_default_instance_;
class PBShowElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBShowElement>
      _instance;
} _PBShowElement_default_instance_;
class PBRankData_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankData_PbdataEntry_DoNotUse>
      _instance;
} _PBRankData_PbdataEntry_DoNotUse_default_instance_;
class PBRankDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankData>
      _instance;
} _PBRankData_default_instance_;
class PBRankDatasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankDatas>
      _instance;
} _PBRankDatas_default_instance_;
}  // namespace KFMsg
namespace protobuf_FrameDefineMessage_2eproto {
static void InitDefaultsPBObject_Pbint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbint32Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbint32Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbint32Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbint32Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_Pbuint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbuint32Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbuint32Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbuint32Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbuint32Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_Pbint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbint64Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbint64Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbint64Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbint64Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_Pbuint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbuint64Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbuint64Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbuint64Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbuint64Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_PbdoubleEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbdoubleEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbdoubleEntry_DoNotUse();
  }
  ::KFMsg::PBObject_PbdoubleEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbdoubleEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_PbdoubleEntry_DoNotUse}, {}};

static void InitDefaultsPBObject_PbstringEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbstringEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbstringEntry_DoNotUse();
  }
  ::KFMsg::PBObject_PbstringEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbstringEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_PbstringEntry_DoNotUse}, {}};

static void InitDefaultsPBObject_PbarrayEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbarrayEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbarrayEntry_DoNotUse();
  }
  ::KFMsg::PBObject_PbarrayEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBObject_PbarrayEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBObject_PbarrayEntry_DoNotUse}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBArray.base,}};

static void InitDefaultsPBObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbobjectEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbobjectEntry_DoNotUse();
  }
  {
    void* ptr = &::KFMsg::_PBObject_PbrecordEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbrecordEntry_DoNotUse();
  }
  {
    void* ptr = &::KFMsg::_PBObject_default_instance_;
    new (ptr) ::KFMsg::PBObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::KFMsg::_PBRecord_PbobjectEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRecord_PbobjectEntry_DoNotUse();
  }
  {
    void* ptr = &::KFMsg::_PBRecord_default_instance_;
    new (ptr) ::KFMsg::PBRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBObject_PbobjectEntry_DoNotUse::InitAsDefaultInstance();
  ::KFMsg::PBObject_PbrecordEntry_DoNotUse::InitAsDefaultInstance();
  ::KFMsg::PBObject::InitAsDefaultInstance();
  ::KFMsg::PBRecord_PbobjectEntry_DoNotUse::InitAsDefaultInstance();
  ::KFMsg::PBRecord::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<7> scc_info_PBObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsPBObject}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject_Pbint32Entry_DoNotUse.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject_Pbuint32Entry_DoNotUse.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject_Pbint64Entry_DoNotUse.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject_Pbuint64Entry_DoNotUse.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject_PbdoubleEntry_DoNotUse.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject_PbstringEntry_DoNotUse.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject_PbarrayEntry_DoNotUse.base,}};

static void InitDefaultsPBArray_Pbuint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBArray_Pbuint64Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBArray_Pbuint64Entry_DoNotUse();
  }
  ::KFMsg::PBArray_Pbuint64Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBArray_Pbuint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBArray_Pbuint64Entry_DoNotUse}, {}};

static void InitDefaultsPBArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBArray_default_instance_;
    new (ptr) ::KFMsg::PBArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBArray::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBArray}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBArray_Pbuint64Entry_DoNotUse.base,}};

static void InitDefaultsPBLoginData_ChanneldataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBLoginData_ChanneldataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse();
  }
  ::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBLoginData_ChanneldataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBLoginData_ChanneldataEntry_DoNotUse}, {}};

static void InitDefaultsPBLoginData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBLoginData_default_instance_;
    new (ptr) ::KFMsg::PBLoginData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBLoginData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBLoginData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBLoginData}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData_ChanneldataEntry_DoNotUse.base,}};

static void InitDefaultsPBShowData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBShowData_default_instance_;
    new (ptr) ::KFMsg::PBShowData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBShowData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBShowData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBShowData}, {}};

static void InitDefaultsPBShowObject_Pbuint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBShowObject_Pbuint64Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse();
  }
  ::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBShowObject_Pbuint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBShowObject_Pbuint64Entry_DoNotUse}, {}};

static void InitDefaultsPBShowObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBShowObject_default_instance_;
    new (ptr) ::KFMsg::PBShowObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBShowObject::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBShowObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBShowObject}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBShowObject_Pbuint64Entry_DoNotUse.base,}};

static void InitDefaultsPBShowElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBShowElement_default_instance_;
    new (ptr) ::KFMsg::PBShowElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBShowElement::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_PBShowElement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPBShowElement}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBShowData.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBShowObject.base,}};

static void InitDefaultsPBRankData_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankData_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRankData_PbdataEntry_DoNotUse();
  }
  ::KFMsg::PBRankData_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRankData_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRankData_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsPBRankData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankData_default_instance_;
    new (ptr) ::KFMsg::PBRankData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRankData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBRankData}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBRankData_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsPBRankDatas() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankDatas_default_instance_;
    new (ptr) ::KFMsg::PBRankDatas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRankDatas::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankDatas =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBRankDatas}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBRankData.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbuint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbuint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_PbdoubleEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_PbstringEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_PbarrayEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBArray_Pbuint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBLoginData_ChanneldataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBLoginData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBShowData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBShowObject_Pbuint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBShowObject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBShowElement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankData_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankDatas.base);
}

::google::protobuf::Metadata file_level_metadata[23];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbuint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbuint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbdouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbstring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbrecord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray, pbuint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord, pbobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, channeldata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowData, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowObject, pbuint64_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowElement, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBShowElement, pbobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, rankindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, rankscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankDatas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankDatas, rankdata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::KFMsg::PBObject_Pbint32Entry_DoNotUse)},
  { 9, 16, sizeof(::KFMsg::PBObject_Pbuint32Entry_DoNotUse)},
  { 18, 25, sizeof(::KFMsg::PBObject_Pbint64Entry_DoNotUse)},
  { 27, 34, sizeof(::KFMsg::PBObject_Pbuint64Entry_DoNotUse)},
  { 36, 43, sizeof(::KFMsg::PBObject_PbdoubleEntry_DoNotUse)},
  { 45, 52, sizeof(::KFMsg::PBObject_PbstringEntry_DoNotUse)},
  { 54, 61, sizeof(::KFMsg::PBObject_PbarrayEntry_DoNotUse)},
  { 63, 70, sizeof(::KFMsg::PBObject_PbobjectEntry_DoNotUse)},
  { 72, 79, sizeof(::KFMsg::PBObject_PbrecordEntry_DoNotUse)},
  { 81, -1, sizeof(::KFMsg::PBObject)},
  { 95, 102, sizeof(::KFMsg::PBArray_Pbuint64Entry_DoNotUse)},
  { 104, -1, sizeof(::KFMsg::PBArray)},
  { 110, 117, sizeof(::KFMsg::PBRecord_PbobjectEntry_DoNotUse)},
  { 119, -1, sizeof(::KFMsg::PBRecord)},
  { 125, 132, sizeof(::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse)},
  { 134, -1, sizeof(::KFMsg::PBLoginData)},
  { 147, -1, sizeof(::KFMsg::PBShowData)},
  { 154, 161, sizeof(::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse)},
  { 163, -1, sizeof(::KFMsg::PBShowObject)},
  { 171, -1, sizeof(::KFMsg::PBShowElement)},
  { 178, 185, sizeof(::KFMsg::PBRankData_PbdataEntry_DoNotUse)},
  { 187, -1, sizeof(::KFMsg::PBRankData)},
  { 196, -1, sizeof(::KFMsg::PBRankDatas)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbuint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbuint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbdoubleEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbstringEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbarrayEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbobjectEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbrecordEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBArray_Pbuint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRecord_PbobjectEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBLoginData_ChanneldataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBLoginData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBShowData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBShowObject_Pbuint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBShowObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBShowElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankData_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankDatas_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameDefineMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 23);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030FrameDefineMessage.proto\022\005KFMsg\"\245\007\n\010PB"
      "Object\022-\n\007pbint32\030\001 \003(\0132\034.KFMsg.PBObject"
      ".Pbint32Entry\022/\n\010pbuint32\030\002 \003(\0132\035.KFMsg."
      "PBObject.Pbuint32Entry\022-\n\007pbint64\030\003 \003(\0132"
      "\034.KFMsg.PBObject.Pbint64Entry\022/\n\010pbuint6"
      "4\030\004 \003(\0132\035.KFMsg.PBObject.Pbuint64Entry\022/"
      "\n\010pbdouble\030\005 \003(\0132\035.KFMsg.PBObject.Pbdoub"
      "leEntry\022/\n\010pbstring\030\006 \003(\0132\035.KFMsg.PBObje"
      "ct.PbstringEntry\022-\n\007pbarray\030\007 \003(\0132\034.KFMs"
      "g.PBObject.PbarrayEntry\022/\n\010pbobject\030\010 \003("
      "\0132\035.KFMsg.PBObject.PbobjectEntry\022/\n\010pbre"
      "cord\030\t \003(\0132\035.KFMsg.PBObject.PbrecordEntr"
      "y\032.\n\014Pbint32Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
      "\002 \001(\021:\0028\001\032/\n\rPbuint32Entry\022\013\n\003key\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\r:\0028\001\032.\n\014Pbint64Entry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\022:\0028\001\032/\n\rPbuint64En"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\004:\0028\001\032/\n\rP"
      "bdoubleEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001"
      ":\0028\001\032/\n\rPbstringEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\014:\0028\001\032>\n\014PbarrayEntry\022\013\n\003key\030\001 \001"
      "(\t\022\035\n\005value\030\002 \001(\0132\016.KFMsg.PBArray:\0028\001\032@\n"
      "\rPbobjectEntry\022\013\n\003key\030\001 \001(\t\022\036\n\005value\030\002 \001"
      "(\0132\017.KFMsg.PBObject:\0028\001\032@\n\rPbrecordEntry"
      "\022\013\n\003key\030\001 \001(\t\022\036\n\005value\030\002 \001(\0132\017.KFMsg.PBR"
      "ecord:\0028\001\"j\n\007PBArray\022.\n\010pbuint64\030\001 \003(\0132\034"
      ".KFMsg.PBArray.Pbuint64Entry\032/\n\rPbuint64"
      "Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\003:\0028\001\"}\n"
      "\010PBRecord\022/\n\010pbobject\030\001 \003(\0132\035.KFMsg.PBRe"
      "cord.PbobjectEntry\032@\n\rPbobjectEntry\022\013\n\003k"
      "ey\030\001 \001(\004\022\036\n\005value\030\002 \001(\0132\017.KFMsg.PBObject"
      ":\0028\001\"\364\001\n\013PBLoginData\022\r\n\005token\030\001 \001(\014\022\016\n\006g"
      "ateid\030\002 \001(\004\022\021\n\tsessionid\030\003 \001(\004\022\017\n\007channe"
      "l\030\004 \001(\r\022\017\n\007account\030\005 \001(\014\022\021\n\taccountid\030\006 "
      "\001(\004\022\020\n\010playerid\030\007 \001(\004\0228\n\013channeldata\030\010 \003"
      "(\0132#.KFMsg.PBLoginData.ChanneldataEntry\032"
      "2\n\020ChanneldataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\014:\0028\001\")\n\nPBShowData\022\014\n\004name\030\001 \001(\014\022"
      "\r\n\005value\030\002 \001(\004\"\217\001\n\014PBShowObject\022\014\n\004name\030"
      "\001 \001(\014\022\013\n\003key\030\002 \001(\004\0223\n\010pbuint64\030\003 \003(\0132!.K"
      "FMsg.PBShowObject.Pbuint64Entry\032/\n\rPbuin"
      "t64Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\004:\0028\001"
      "\"Y\n\rPBShowElement\022!\n\006pbdata\030\001 \003(\0132\021.KFMs"
      "g.PBShowData\022%\n\010pbobject\030\002 \003(\0132\023.KFMsg.P"
      "BShowObject\"\242\001\n\nPBRankData\022\021\n\trankindex\030"
      "\001 \001(\r\022\020\n\010playerid\030\002 \001(\004\022\021\n\trankscore\030\003 \001"
      "(\004\022-\n\006pbdata\030\004 \003(\0132\035.KFMsg.PBRankData.Pb"
      "dataEntry\032-\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\014:\0028\001\"2\n\013PBRankDatas\022#\n\010rankd"
      "ata\030\001 \003(\0132\021.KFMsg.PBRankDatab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1956);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameDefineMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameDefineMessage_2eproto
namespace KFMsg {

// ===================================================================

PBObject_Pbint32Entry_DoNotUse::PBObject_Pbint32Entry_DoNotUse() {}
PBObject_Pbint32Entry_DoNotUse::PBObject_Pbint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbint32Entry_DoNotUse::MergeFrom(const PBObject_Pbint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[0];
}
void PBObject_Pbint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_Pbuint32Entry_DoNotUse::PBObject_Pbuint32Entry_DoNotUse() {}
PBObject_Pbuint32Entry_DoNotUse::PBObject_Pbuint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbuint32Entry_DoNotUse::MergeFrom(const PBObject_Pbuint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbuint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[1];
}
void PBObject_Pbuint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_Pbint64Entry_DoNotUse::PBObject_Pbint64Entry_DoNotUse() {}
PBObject_Pbint64Entry_DoNotUse::PBObject_Pbint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbint64Entry_DoNotUse::MergeFrom(const PBObject_Pbint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[2];
}
void PBObject_Pbint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_Pbuint64Entry_DoNotUse::PBObject_Pbuint64Entry_DoNotUse() {}
PBObject_Pbuint64Entry_DoNotUse::PBObject_Pbuint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbuint64Entry_DoNotUse::MergeFrom(const PBObject_Pbuint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbuint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[3];
}
void PBObject_Pbuint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbdoubleEntry_DoNotUse::PBObject_PbdoubleEntry_DoNotUse() {}
PBObject_PbdoubleEntry_DoNotUse::PBObject_PbdoubleEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbdoubleEntry_DoNotUse::MergeFrom(const PBObject_PbdoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbdoubleEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[4];
}
void PBObject_PbdoubleEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbstringEntry_DoNotUse::PBObject_PbstringEntry_DoNotUse() {}
PBObject_PbstringEntry_DoNotUse::PBObject_PbstringEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbstringEntry_DoNotUse::MergeFrom(const PBObject_PbstringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbstringEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[5];
}
void PBObject_PbstringEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbarrayEntry_DoNotUse::PBObject_PbarrayEntry_DoNotUse() {}
PBObject_PbarrayEntry_DoNotUse::PBObject_PbarrayEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbarrayEntry_DoNotUse::MergeFrom(const PBObject_PbarrayEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbarrayEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[6];
}
void PBObject_PbarrayEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbobjectEntry_DoNotUse::PBObject_PbobjectEntry_DoNotUse() {}
PBObject_PbobjectEntry_DoNotUse::PBObject_PbobjectEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbobjectEntry_DoNotUse::MergeFrom(const PBObject_PbobjectEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbobjectEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[7];
}
void PBObject_PbobjectEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbrecordEntry_DoNotUse::PBObject_PbrecordEntry_DoNotUse() {}
PBObject_PbrecordEntry_DoNotUse::PBObject_PbrecordEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbrecordEntry_DoNotUse::MergeFrom(const PBObject_PbrecordEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbrecordEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[8];
}
void PBObject_PbrecordEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBObject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBObject::kPbint32FieldNumber;
const int PBObject::kPbuint32FieldNumber;
const int PBObject::kPbint64FieldNumber;
const int PBObject::kPbuint64FieldNumber;
const int PBObject::kPbdoubleFieldNumber;
const int PBObject::kPbstringFieldNumber;
const int PBObject::kPbarrayFieldNumber;
const int PBObject::kPbobjectFieldNumber;
const int PBObject::kPbrecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBObject::PBObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBObject)
}
PBObject::PBObject(const PBObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbint32_.MergeFrom(from.pbint32_);
  pbuint32_.MergeFrom(from.pbuint32_);
  pbint64_.MergeFrom(from.pbint64_);
  pbuint64_.MergeFrom(from.pbuint64_);
  pbdouble_.MergeFrom(from.pbdouble_);
  pbstring_.MergeFrom(from.pbstring_);
  pbarray_.MergeFrom(from.pbarray_);
  pbobject_.MergeFrom(from.pbobject_);
  pbrecord_.MergeFrom(from.pbrecord_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBObject)
}

void PBObject::SharedCtor() {
}

PBObject::~PBObject() {
  // @@protoc_insertion_point(destructor:KFMsg.PBObject)
  SharedDtor();
}

void PBObject::SharedDtor() {
}

void PBObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBObject::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBObject& PBObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base);
  return *internal_default_instance();
}


void PBObject::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbint32_.Clear();
  pbuint32_.Clear();
  pbint64_.Clear();
  pbuint64_.Clear();
  pbdouble_.Clear();
  pbstring_.Clear();
  pbarray_.Clear();
  pbobject_.Clear();
  pbrecord_.Clear();
  _internal_metadata_.Clear();
}

bool PBObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, sint32> pbint32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBObject_Pbint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbint32Entry_DoNotUse,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&pbint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbint32Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> pbuint32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PBObject_Pbuint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbuint32Entry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&pbuint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbuint32Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, sint64> pbint64 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PBObject_Pbint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbint64Entry_DoNotUse,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&pbint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbint64Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint64> pbuint64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          PBObject_Pbuint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbuint64Entry_DoNotUse,
              ::std::string, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 > > parser(&pbuint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbuint64Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, double> pbdouble = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          PBObject_PbdoubleEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbdoubleEntry_DoNotUse,
              ::std::string, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::std::string, double > > parser(&pbdouble_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbdoubleEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbstring = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          PBObject_PbstringEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbstringEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbstring_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbstringEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .KFMsg.PBArray> pbarray = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          PBObject_PbarrayEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbarrayEntry_DoNotUse,
              ::std::string, ::KFMsg::PBArray,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray > > parser(&pbarray_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbarrayEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .KFMsg.PBObject> pbobject = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          PBObject_PbobjectEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbobjectEntry_DoNotUse,
              ::std::string, ::KFMsg::PBObject,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject > > parser(&pbobject_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbobjectEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .KFMsg.PBRecord> pbrecord = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          PBObject_PbrecordEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbrecordEntry_DoNotUse,
              ::std::string, ::KFMsg::PBRecord,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord > > parser(&pbrecord_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbrecordEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBObject)
  return false;
#undef DO_
}

void PBObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, sint32> pbint32 = 1;
  if (!this->pbint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint32Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it) {
        entry.reset(pbint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint32> pbuint32 = 2;
  if (!this->pbuint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint32Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbuint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it) {
        entry.reset(pbuint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, sint64> pbint64 = 3;
  if (!this->pbint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint64Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it) {
        entry.reset(pbint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint64> pbuint64 = 4;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint64Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> pbdouble = 5;
  if (!this->pbdouble().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbdoubleEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdouble().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdouble().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdouble_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it) {
        entry.reset(pbdouble_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> pbstring = 6;
  if (!this->pbstring().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbstringEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbstring().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbstring().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbstring_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it) {
        entry.reset(pbstring_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBArray> pbarray = 7;
  if (!this->pbarray().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbarrayEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbarray().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbarray().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbarray_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it) {
        entry.reset(pbarray_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBObject> pbobject = 8;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbobjectEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBRecord> pbrecord = 9;
  if (!this->pbrecord().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbrecordEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbrecord().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbrecord().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbrecord_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it) {
        entry.reset(pbrecord_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBObject)
}

::google::protobuf::uint8* PBObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, sint32> pbint32 = 1;
  if (!this->pbint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint32Entry.key");
      }
    };

    if (deterministic &&
        this->pbint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it) {
        entry.reset(pbint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint32> pbuint32 = 2;
  if (!this->pbuint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint32Entry.key");
      }
    };

    if (deterministic &&
        this->pbuint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it) {
        entry.reset(pbuint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, sint64> pbint64 = 3;
  if (!this->pbint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint64Entry.key");
      }
    };

    if (deterministic &&
        this->pbint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it) {
        entry.reset(pbint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint64> pbuint64 = 4;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint64Entry.key");
      }
    };

    if (deterministic &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> pbdouble = 5;
  if (!this->pbdouble().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbdoubleEntry.key");
      }
    };

    if (deterministic &&
        this->pbdouble().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdouble().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdouble_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it) {
        entry.reset(pbdouble_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> pbstring = 6;
  if (!this->pbstring().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbstringEntry.key");
      }
    };

    if (deterministic &&
        this->pbstring().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbstring().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbstring_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it) {
        entry.reset(pbstring_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBArray> pbarray = 7;
  if (!this->pbarray().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbarrayEntry.key");
      }
    };

    if (deterministic &&
        this->pbarray().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbarray().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbarray_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it) {
        entry.reset(pbarray_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBObject> pbobject = 8;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbobjectEntry.key");
      }
    };

    if (deterministic &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBRecord> pbrecord = 9;
  if (!this->pbrecord().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbrecordEntry.key");
      }
    };

    if (deterministic &&
        this->pbrecord().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbrecord().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbrecord_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it) {
        entry.reset(pbrecord_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBObject)
  return target;
}

size_t PBObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, sint32> pbint32 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbint32_size());
  {
    ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->pbint32().begin();
        it != this->pbint32().end(); ++it) {
      entry.reset(pbint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, uint32> pbuint32 = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbuint32_size());
  {
    ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->pbuint32().begin();
        it != this->pbuint32().end(); ++it) {
      entry.reset(pbuint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, sint64> pbint64 = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbint64_size());
  {
    ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->pbint64().begin();
        it != this->pbint64().end(); ++it) {
      entry.reset(pbint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, uint64> pbuint64 = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbuint64_size());
  {
    ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
        it = this->pbuint64().begin();
        it != this->pbuint64().end(); ++it) {
      entry.reset(pbuint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, double> pbdouble = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdouble_size());
  {
    ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->pbdouble().begin();
        it != this->pbdouble().end(); ++it) {
      entry.reset(pbdouble_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, bytes> pbstring = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbstring_size());
  {
    ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbstring().begin();
        it != this->pbstring().end(); ++it) {
      entry.reset(pbstring_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .KFMsg.PBArray> pbarray = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbarray_size());
  {
    ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
        it = this->pbarray().begin();
        it != this->pbarray().end(); ++it) {
      entry.reset(pbarray_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .KFMsg.PBObject> pbobject = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbobject_size());
  {
    ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
        it = this->pbobject().begin();
        it != this->pbobject().end(); ++it) {
      entry.reset(pbobject_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .KFMsg.PBRecord> pbrecord = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbrecord_size());
  {
    ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
        it = this->pbrecord().begin();
        it != this->pbrecord().end(); ++it) {
      entry.reset(pbrecord_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBObject)
  GOOGLE_DCHECK_NE(&from, this);
  const PBObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBObject)
    MergeFrom(*source);
  }
}

void PBObject::MergeFrom(const PBObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbint32_.MergeFrom(from.pbint32_);
  pbuint32_.MergeFrom(from.pbuint32_);
  pbint64_.MergeFrom(from.pbint64_);
  pbuint64_.MergeFrom(from.pbuint64_);
  pbdouble_.MergeFrom(from.pbdouble_);
  pbstring_.MergeFrom(from.pbstring_);
  pbarray_.MergeFrom(from.pbarray_);
  pbobject_.MergeFrom(from.pbobject_);
  pbrecord_.MergeFrom(from.pbrecord_);
}

void PBObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBObject::CopyFrom(const PBObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBObject::IsInitialized() const {
  return true;
}

void PBObject::Swap(PBObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBObject::InternalSwap(PBObject* other) {
  using std::swap;
  pbint32_.Swap(&other->pbint32_);
  pbuint32_.Swap(&other->pbuint32_);
  pbint64_.Swap(&other->pbint64_);
  pbuint64_.Swap(&other->pbuint64_);
  pbdouble_.Swap(&other->pbdouble_);
  pbstring_.Swap(&other->pbstring_);
  pbarray_.Swap(&other->pbarray_);
  pbobject_.Swap(&other->pbobject_);
  pbrecord_.Swap(&other->pbrecord_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBObject::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBArray_Pbuint64Entry_DoNotUse::PBArray_Pbuint64Entry_DoNotUse() {}
PBArray_Pbuint64Entry_DoNotUse::PBArray_Pbuint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBArray_Pbuint64Entry_DoNotUse::MergeFrom(const PBArray_Pbuint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBArray_Pbuint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[10];
}
void PBArray_Pbuint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBArray::kPbuint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBArray::PBArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBArray)
}
PBArray::PBArray(const PBArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbuint64_.MergeFrom(from.pbuint64_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBArray)
}

void PBArray::SharedCtor() {
}

PBArray::~PBArray() {
  // @@protoc_insertion_point(destructor:KFMsg.PBArray)
  SharedDtor();
}

void PBArray::SharedDtor() {
}

void PBArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBArray::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBArray& PBArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBArray.base);
  return *internal_default_instance();
}


void PBArray::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbuint64_.Clear();
  _internal_metadata_.Clear();
}

bool PBArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, int64> pbuint64 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBArray_Pbuint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBArray_Pbuint64Entry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 > > parser(&pbuint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBArray)
  return false;
#undef DO_
}

void PBArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, int64> pbuint64 = 1;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBArray)
}

::google::protobuf::uint8* PBArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, int64> pbuint64 = 1;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBArray)
  return target;
}

size_t PBArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, int64> pbuint64 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbuint64_size());
  {
    ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int64 >::const_iterator
        it = this->pbuint64().begin();
        it != this->pbuint64().end(); ++it) {
      entry.reset(pbuint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBArray)
  GOOGLE_DCHECK_NE(&from, this);
  const PBArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBArray)
    MergeFrom(*source);
  }
}

void PBArray::MergeFrom(const PBArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbuint64_.MergeFrom(from.pbuint64_);
}

void PBArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBArray::CopyFrom(const PBArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBArray::IsInitialized() const {
  return true;
}

void PBArray::Swap(PBArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBArray::InternalSwap(PBArray* other) {
  using std::swap;
  pbuint64_.Swap(&other->pbuint64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBArray::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBRecord_PbobjectEntry_DoNotUse::PBRecord_PbobjectEntry_DoNotUse() {}
PBRecord_PbobjectEntry_DoNotUse::PBRecord_PbobjectEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRecord_PbobjectEntry_DoNotUse::MergeFrom(const PBRecord_PbobjectEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRecord_PbobjectEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[12];
}
void PBRecord_PbobjectEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRecord::kPbobjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRecord::PBRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRecord)
}
PBRecord::PBRecord(const PBRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbobject_.MergeFrom(from.pbobject_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRecord)
}

void PBRecord::SharedCtor() {
}

PBRecord::~PBRecord() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRecord)
  SharedDtor();
}

void PBRecord::SharedDtor() {
}

void PBRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRecord::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRecord& PBRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base);
  return *internal_default_instance();
}


void PBRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbobject_.Clear();
  _internal_metadata_.Clear();
}

bool PBRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .KFMsg.PBObject> pbobject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBRecord_PbobjectEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRecord_PbobjectEntry_DoNotUse,
              ::google::protobuf::uint64, ::KFMsg::PBObject,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject > > parser(&pbobject_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRecord)
  return false;
#undef DO_
}

void PBRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .KFMsg.PBObject> pbobject = 1;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRecord)
}

::google::protobuf::uint8* PBRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .KFMsg.PBObject> pbobject = 1;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRecord)
  return target;
}

size_t PBRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .KFMsg.PBObject> pbobject = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbobject_size());
  {
    ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
        it = this->pbobject().begin();
        it != this->pbobject().end(); ++it) {
      entry.reset(pbobject_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRecord)
    MergeFrom(*source);
  }
}

void PBRecord::MergeFrom(const PBRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbobject_.MergeFrom(from.pbobject_);
}

void PBRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRecord::CopyFrom(const PBRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRecord::IsInitialized() const {
  return true;
}

void PBRecord::Swap(PBRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRecord::InternalSwap(PBRecord* other) {
  using std::swap;
  pbobject_.Swap(&other->pbobject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRecord::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBLoginData_ChanneldataEntry_DoNotUse::PBLoginData_ChanneldataEntry_DoNotUse() {}
PBLoginData_ChanneldataEntry_DoNotUse::PBLoginData_ChanneldataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBLoginData_ChanneldataEntry_DoNotUse::MergeFrom(const PBLoginData_ChanneldataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBLoginData_ChanneldataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[14];
}
void PBLoginData_ChanneldataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBLoginData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLoginData::kTokenFieldNumber;
const int PBLoginData::kGateidFieldNumber;
const int PBLoginData::kSessionidFieldNumber;
const int PBLoginData::kChannelFieldNumber;
const int PBLoginData::kAccountFieldNumber;
const int PBLoginData::kAccountidFieldNumber;
const int PBLoginData::kPlayeridFieldNumber;
const int PBLoginData::kChanneldataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLoginData::PBLoginData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBLoginData)
}
PBLoginData::PBLoginData(const PBLoginData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channeldata_.MergeFrom(from.channeldata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBLoginData)
}

void PBLoginData::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(channel_));
}

PBLoginData::~PBLoginData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBLoginData)
  SharedDtor();
}

void PBLoginData::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBLoginData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBLoginData::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLoginData& PBLoginData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base);
  return *internal_default_instance();
}


void PBLoginData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBLoginData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channeldata_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool PBLoginData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBLoginData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes account = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> channeldata = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          PBLoginData_ChanneldataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBLoginData_ChanneldataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&channeldata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBLoginData.ChanneldataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBLoginData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBLoginData)
  return false;
#undef DO_
}

void PBLoginData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBLoginData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gateid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint32 channel = 4;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->channel(), output);
  }

  // bytes account = 5;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->account(), output);
  }

  // uint64 accountid = 6;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->accountid(), output);
  }

  // uint64 playerid = 7;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->playerid(), output);
  }

  // map<string, bytes> channeldata = 8;
  if (!this->channeldata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBLoginData.ChanneldataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->channeldata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->channeldata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->channeldata().begin();
          it != this->channeldata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBLoginData_ChanneldataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(channeldata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBLoginData_ChanneldataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->channeldata().begin();
          it != this->channeldata().end(); ++it) {
        entry.reset(channeldata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBLoginData)
}

::google::protobuf::uint8* PBLoginData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBLoginData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gateid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint32 channel = 4;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->channel(), target);
  }

  // bytes account = 5;
  if (this->account().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->account(), target);
  }

  // uint64 accountid = 6;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->accountid(), target);
  }

  // uint64 playerid = 7;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->playerid(), target);
  }

  // map<string, bytes> channeldata = 8;
  if (!this->channeldata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBLoginData.ChanneldataEntry.key");
      }
    };

    if (deterministic &&
        this->channeldata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->channeldata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->channeldata().begin();
          it != this->channeldata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBLoginData_ChanneldataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(channeldata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBLoginData_ChanneldataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->channeldata().begin();
          it != this->channeldata().end(); ++it) {
        entry.reset(channeldata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBLoginData)
  return target;
}

size_t PBLoginData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBLoginData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> channeldata = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->channeldata_size());
  {
    ::std::unique_ptr<PBLoginData_ChanneldataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->channeldata().begin();
        it != this->channeldata().end(); ++it) {
      entry.reset(channeldata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // bytes account = 5;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 accountid = 6;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 playerid = 7;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 channel = 4;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBLoginData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBLoginData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLoginData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLoginData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBLoginData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBLoginData)
    MergeFrom(*source);
  }
}

void PBLoginData::MergeFrom(const PBLoginData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBLoginData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channeldata_.MergeFrom(from.channeldata_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void PBLoginData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBLoginData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLoginData::CopyFrom(const PBLoginData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBLoginData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLoginData::IsInitialized() const {
  return true;
}

void PBLoginData::Swap(PBLoginData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLoginData::InternalSwap(PBLoginData* other) {
  using std::swap;
  channeldata_.Swap(&other->channeldata_);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gateid_, other->gateid_);
  swap(sessionid_, other->sessionid_);
  swap(accountid_, other->accountid_);
  swap(playerid_, other->playerid_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBLoginData::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBShowData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBShowData::kNameFieldNumber;
const int PBShowData::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBShowData::PBShowData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBShowData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBShowData)
}
PBShowData::PBShowData(const PBShowData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBShowData)
}

void PBShowData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_ULONGLONG(0);
}

PBShowData::~PBShowData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBShowData)
  SharedDtor();
}

void PBShowData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBShowData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBShowData::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBShowData& PBShowData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBShowData.base);
  return *internal_default_instance();
}


void PBShowData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBShowData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PBShowData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBShowData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBShowData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBShowData)
  return false;
#undef DO_
}

void PBShowData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBShowData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBShowData)
}

::google::protobuf::uint8* PBShowData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBShowData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBShowData)
  return target;
}

size_t PBShowData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBShowData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBShowData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBShowData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBShowData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBShowData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBShowData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBShowData)
    MergeFrom(*source);
  }
}

void PBShowData::MergeFrom(const PBShowData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBShowData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void PBShowData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBShowData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBShowData::CopyFrom(const PBShowData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBShowData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBShowData::IsInitialized() const {
  return true;
}

void PBShowData::Swap(PBShowData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBShowData::InternalSwap(PBShowData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBShowData::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBShowObject_Pbuint64Entry_DoNotUse::PBShowObject_Pbuint64Entry_DoNotUse() {}
PBShowObject_Pbuint64Entry_DoNotUse::PBShowObject_Pbuint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBShowObject_Pbuint64Entry_DoNotUse::MergeFrom(const PBShowObject_Pbuint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBShowObject_Pbuint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[17];
}
void PBShowObject_Pbuint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBShowObject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBShowObject::kNameFieldNumber;
const int PBShowObject::kKeyFieldNumber;
const int PBShowObject::kPbuint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBShowObject::PBShowObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBShowObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBShowObject)
}
PBShowObject::PBShowObject(const PBShowObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbuint64_.MergeFrom(from.pbuint64_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBShowObject)
}

void PBShowObject::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = GOOGLE_ULONGLONG(0);
}

PBShowObject::~PBShowObject() {
  // @@protoc_insertion_point(destructor:KFMsg.PBShowObject)
  SharedDtor();
}

void PBShowObject::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBShowObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBShowObject::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBShowObject& PBShowObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBShowObject.base);
  return *internal_default_instance();
}


void PBShowObject::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBShowObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbuint64_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PBShowObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBShowObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint64> pbuint64 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PBShowObject_Pbuint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBShowObject_Pbuint64Entry_DoNotUse,
              ::std::string, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 > > parser(&pbuint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBShowObject.Pbuint64Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBShowObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBShowObject)
  return false;
#undef DO_
}

void PBShowObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBShowObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 key = 2;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->key(), output);
  }

  // map<string, uint64> pbuint64 = 3;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBShowObject.Pbuint64Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBShowObject_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBShowObject_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBShowObject)
}

::google::protobuf::uint8* PBShowObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBShowObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 key = 2;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->key(), target);
  }

  // map<string, uint64> pbuint64 = 3;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBShowObject.Pbuint64Entry.key");
      }
    };

    if (deterministic &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBShowObject_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBShowObject_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBShowObject)
  return target;
}

size_t PBShowObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBShowObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint64> pbuint64 = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbuint64_size());
  {
    ::std::unique_ptr<PBShowObject_Pbuint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
        it = this->pbuint64().begin();
        it != this->pbuint64().end(); ++it) {
      entry.reset(pbuint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 key = 2;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBShowObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBShowObject)
  GOOGLE_DCHECK_NE(&from, this);
  const PBShowObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBShowObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBShowObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBShowObject)
    MergeFrom(*source);
  }
}

void PBShowObject::MergeFrom(const PBShowObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBShowObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbuint64_.MergeFrom(from.pbuint64_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void PBShowObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBShowObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBShowObject::CopyFrom(const PBShowObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBShowObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBShowObject::IsInitialized() const {
  return true;
}

void PBShowObject::Swap(PBShowObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBShowObject::InternalSwap(PBShowObject* other) {
  using std::swap;
  pbuint64_.Swap(&other->pbuint64_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBShowObject::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBShowElement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBShowElement::kPbdataFieldNumber;
const int PBShowElement::kPbobjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBShowElement::PBShowElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBShowElement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBShowElement)
}
PBShowElement::PBShowElement(const PBShowElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbdata_(from.pbdata_),
      pbobject_(from.pbobject_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBShowElement)
}

void PBShowElement::SharedCtor() {
}

PBShowElement::~PBShowElement() {
  // @@protoc_insertion_point(destructor:KFMsg.PBShowElement)
  SharedDtor();
}

void PBShowElement::SharedDtor() {
}

void PBShowElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBShowElement::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBShowElement& PBShowElement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBShowElement.base);
  return *internal_default_instance();
}


void PBShowElement::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBShowElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  pbobject_.Clear();
  _internal_metadata_.Clear();
}

bool PBShowElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBShowElement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBShowData pbdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBShowObject pbobject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBShowElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBShowElement)
  return false;
#undef DO_
}

void PBShowElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBShowElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBShowData pbdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pbdata(static_cast<int>(i)),
      output);
  }

  // repeated .KFMsg.PBShowObject pbobject = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbobject_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbobject(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBShowElement)
}

::google::protobuf::uint8* PBShowElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBShowElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBShowData pbdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pbdata(static_cast<int>(i)), deterministic, target);
  }

  // repeated .KFMsg.PBShowObject pbobject = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbobject_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbobject(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBShowElement)
  return target;
}

size_t PBShowElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBShowElement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBShowData pbdata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pbdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbdata(static_cast<int>(i)));
    }
  }

  // repeated .KFMsg.PBShowObject pbobject = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbobject_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbobject(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBShowElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBShowElement)
  GOOGLE_DCHECK_NE(&from, this);
  const PBShowElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBShowElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBShowElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBShowElement)
    MergeFrom(*source);
  }
}

void PBShowElement::MergeFrom(const PBShowElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBShowElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  pbobject_.MergeFrom(from.pbobject_);
}

void PBShowElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBShowElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBShowElement::CopyFrom(const PBShowElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBShowElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBShowElement::IsInitialized() const {
  return true;
}

void PBShowElement::Swap(PBShowElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBShowElement::InternalSwap(PBShowElement* other) {
  using std::swap;
  CastToBase(&pbdata_)->InternalSwap(CastToBase(&other->pbdata_));
  CastToBase(&pbobject_)->InternalSwap(CastToBase(&other->pbobject_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBShowElement::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBRankData_PbdataEntry_DoNotUse::PBRankData_PbdataEntry_DoNotUse() {}
PBRankData_PbdataEntry_DoNotUse::PBRankData_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRankData_PbdataEntry_DoNotUse::MergeFrom(const PBRankData_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRankData_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[20];
}
void PBRankData_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBRankData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRankData::kRankindexFieldNumber;
const int PBRankData::kPlayeridFieldNumber;
const int PBRankData::kRankscoreFieldNumber;
const int PBRankData::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRankData::PBRankData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBRankData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRankData)
}
PBRankData::PBRankData(const PBRankData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rankindex_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRankData)
}

void PBRankData::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankindex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
}

PBRankData::~PBRankData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRankData)
  SharedDtor();
}

void PBRankData::SharedDtor() {
}

void PBRankData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRankData::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRankData& PBRankData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBRankData.base);
  return *internal_default_instance();
}


void PBRankData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankindex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
  _internal_metadata_.Clear();
}

bool PBRankData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRankData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 rankscore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rankscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          PBRankData_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRankData_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBRankData.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRankData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRankData)
  return false;
#undef DO_
}

void PBRankData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankindex(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->rankscore(), output);
  }

  // map<string, bytes> pbdata = 4;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRankData.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRankData)
}

::google::protobuf::uint8* PBRankData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankindex(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->rankscore(), target);
  }

  // map<string, bytes> pbdata = 4;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRankData.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRankData)
  return target;
}

size_t PBRankData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRankData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rankscore());
  }

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRankData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRankData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRankData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRankData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRankData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRankData)
    MergeFrom(*source);
  }
}

void PBRankData::MergeFrom(const PBRankData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRankData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankscore() != 0) {
    set_rankscore(from.rankscore());
  }
  if (from.rankindex() != 0) {
    set_rankindex(from.rankindex());
  }
}

void PBRankData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRankData::CopyFrom(const PBRankData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRankData::IsInitialized() const {
  return true;
}

void PBRankData::Swap(PBRankData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRankData::InternalSwap(PBRankData* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(playerid_, other->playerid_);
  swap(rankscore_, other->rankscore_);
  swap(rankindex_, other->rankindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRankData::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBRankDatas::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRankDatas::kRankdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRankDatas::PBRankDatas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBRankDatas.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRankDatas)
}
PBRankDatas::PBRankDatas(const PBRankDatas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rankdata_(from.rankdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRankDatas)
}

void PBRankDatas::SharedCtor() {
}

PBRankDatas::~PBRankDatas() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRankDatas)
  SharedDtor();
}

void PBRankDatas::SharedDtor() {
}

void PBRankDatas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRankDatas::descriptor() {
  ::protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRankDatas& PBRankDatas::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameDefineMessage_2eproto::scc_info_PBRankDatas.base);
  return *internal_default_instance();
}


void PBRankDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankdata_.Clear();
  _internal_metadata_.Clear();
}

bool PBRankDatas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRankDatas)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBRankData rankdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRankDatas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRankDatas)
  return false;
#undef DO_
}

void PBRankDatas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBRankData rankdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rankdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRankDatas)
}

::google::protobuf::uint8* PBRankDatas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBRankData rankdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rankdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRankDatas)
  return target;
}

size_t PBRankDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRankDatas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRankData rankdata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rankdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rankdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRankDatas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRankDatas)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRankDatas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRankDatas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRankDatas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRankDatas)
    MergeFrom(*source);
  }
}

void PBRankDatas::MergeFrom(const PBRankDatas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRankDatas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rankdata_.MergeFrom(from.rankdata_);
}

void PBRankDatas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRankDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRankDatas::CopyFrom(const PBRankDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRankDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRankDatas::IsInitialized() const {
  return true;
}

void PBRankDatas::Swap(PBRankDatas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRankDatas::InternalSwap(PBRankDatas* other) {
  using std::swap;
  CastToBase(&rankdata_)->InternalSwap(CastToBase(&other->rankdata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRankDatas::GetMetadata() const {
  protobuf_FrameDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbuint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbuint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbuint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbuint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbuint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbuint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbdoubleEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbdoubleEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbdoubleEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbstringEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbstringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbstringEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbarrayEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbarrayEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbarrayEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbobjectEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbobjectEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbobjectEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbrecordEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbrecordEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbrecordEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject* Arena::CreateMaybeMessage< ::KFMsg::PBObject >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBArray_Pbuint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBArray_Pbuint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBArray_Pbuint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBArray* Arena::CreateMaybeMessage< ::KFMsg::PBArray >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRecord_PbobjectEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRecord_PbobjectEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRecord_PbobjectEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRecord* Arena::CreateMaybeMessage< ::KFMsg::PBRecord >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBLoginData* Arena::CreateMaybeMessage< ::KFMsg::PBLoginData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBLoginData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBShowData* Arena::CreateMaybeMessage< ::KFMsg::PBShowData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBShowData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBShowObject_Pbuint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBShowObject* Arena::CreateMaybeMessage< ::KFMsg::PBShowObject >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBShowObject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBShowElement* Arena::CreateMaybeMessage< ::KFMsg::PBShowElement >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBShowElement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankData_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRankData_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankData_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankData* Arena::CreateMaybeMessage< ::KFMsg::PBRankData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankDatas* Arena::CreateMaybeMessage< ::KFMsg::PBRankDatas >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankDatas >(arena);
}
}  // namespace protobuf
}  // namespace google

#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif

// @@protoc_insertion_point(global_scope)
